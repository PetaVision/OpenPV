// 
// Parameter file for BIDS
//

HyPerCol "column" = {
	nx 							= 256; 			// pixel width of input image
	ny 							= 256; 			// pixel height of input image
	dt 							= 1.;           // according GK
	//randomSeed 					= 1020304050.0; // remove when running for real
	//checkpointRead  			= true;  		// normal run
	checkpointRead  			= false; 		// init run
	checkpointWrite 			= false;  		// always
	numSteps 					= 1000;			// amount of time steps performed during run-time
	progressStep				= 2000;
	outputPath                  = "/Users/bnowers/Documents/workspace/BIDS/output/";
	filenamesContainLayerNames 	= 2; 			// stores pvp files as: 1 = layer number/2 = layer number and layer name/3 = layer name
};

// Layers Layers Layers Layers Layers Layers Layers Layers Layers Layers Layers
// Layers Layers Layers Layers Layers Layers Layers Layers Layers Layers Layers
// Layers Layers Layers Layers Layers Layers Layers Layers Layers Layers Layers
// Layers Layers Layers Layers Layers Layers Layers Layers Layers Layers Layers
// Layers Layers Layers Layers Layers Layers Layers Layers Layers Layers Layers

Movie "OnOffSource" = {
    imageListPath = "/Users/bnowers/Documents/workspace/BIDS/input/filenames.txt";

    restart = 0;
    nxScale = 0.00390625;
    nyScale = 0.00390625;
   	nf = 1;
    marginWidth = 0;
   	writeStep = 1.0;
    mirrorBCflag = 0;
    spikingFlag = 0;
    writeNonspikingActivity = -1;
    writeImages = 0;
    displayPeriod = 500;
    jitterFlag = 0;
    randomMovie = 0;
   	offsetX = 0;
    offsetY = 0;
};

BIDSSourceLayer "Source" = {
   restart 					= 0;
   nxScale 					= 0.00390625; //0.00390625
   nyScale 					= 0.00390625;
   nf 						= 1;
   //no 					= 8;
   marginWidth 				= 0;
   writeStep 				= 1.0;
   mirrorBCflag 			= 0;
   spikingFlag 				= 0;
   writeNonspikingActivity 	= 1;
   Vrest 					= 1.0;
   VThresh 					= 1.0;  // infinity (no quotes) is translated to FLT_MAX
   VMax 					= infinity;
   VMin 					= -infinity;
};

BIDSLayer "BIDS_node" = {        	// The BIDS_node receives a signal from the BIDS_receptor via the BIDS_ADC, then computes 
									// and outputs what it saw in the image (and will eventually communicate with other BIDS nodes						
	nxScale          = 0.25;		// node width is 1 pixel
	nyScale          = 0.25;		// node height is 1 pixel
	jitter			 = 0;
	nf               = 1;       	// one feature for now
	spikingFlag      = 1;       	// the whole idea 
	marginWidth      = 25;     	// for MPI running
	writeStep        = 1.0;
	mirrorBCflag     = 0;     	// mirroring boundary conditions
    InitVType        = "ConstantV";
	valueV			 = -70.0;
	Vrest            = -70.;    
	restart          = 0.0;     	// from graylast
	Vexc             = 0.0;     	// reversal potential 
	Vinh             = -75.0;   	// chloride channel
	VinhB            = -90.0;   	// potassium reversal
	tau              = 10.0;    	// intrinsic leak membrane time constant (max)
	tauE             = 1.0;     	// how long glutamine stays bound
	tauI             = 5.0;     	// how long GABA stays bound
	tauIB            = 10.0;    	// inhibitory potassium channel 
	VthRest          = -55.0;   	// firing threshold 15 mV above rest
	tauVth           = 10.0;    	// 10.0 relative refractory period
	deltaVth         = 5.0;     	// jump of threshold when firing
	noiseAmpE        = 0.5;     	    // 0.5 1 means conductance is equal to lead conductance  gjk
	noiseAmpI        = 0.5;     	    // 0,5 "twice as easy for the membrane capacitance to discharge" gjk
	noiseAmpIB       = 0.0;     	// no noise here 
	noiseFreqE       = 250.;    	// spontaneous transmitter release/channel openings
	noiseFreqI       = 250.;    	// correlation to time step size !!!
	noiseFreqIB      =   0.;    	// should be scaled by the time constant - look at LIF model
};

BIDSCloneLayer "BIDSClone" ={  
	nxScale          	= 1;
    nyScale          	= 1;
	spikingFlag     	= 1;    
	writeStep        	= 1.0;
	marginWidth      	= 4;     
    originalLayerName	="BIDS_node";
    InitVType        	= "ConstantV";
	Vrest            	= -55.0;   
	VthRest          	= -47.5;                 
    mirrorBCflag     	= 0; 
	restart          	= 0.0;    
};

//   Connections Connections Connections Connections Connections Connections Connections
//   Connections Connections Connections Connections Connections Connections Connections
//   Connections Connections Connections Connections Connections Connections Connections
//   Connections Connections Connections Connections Connections Connections Connections
//   Connections Connections Connections Connections Connections Connections Connections

HyPerConn "Source to BIDS_node" = {   			// This connects the image to the BIDS_receptor so that the sensor(s) on the receptor can detect active pixels
    preLayerName 			= "OnOffSource";
    postLayerName 			= "BIDS_node";
    weightInitType 			= "BIDSWeight"; 	// determines how PetaVision distributes and handles the weights for neurons/nodes 
    channelCode 			= 0;               		// forward
	nxp           			= 64;
	nyp           			= 64;
	normalize     			= 0;  
	falloffType				= "Log";       //possible falloff rates right now are "Gaussian", "radSquared", and "Linear"
	delay         			= 0.0; 					// in time steps, additional to the one you always get
	writeStep             	= -1.0;  				// do not write these out
	numAxonalArbors			= 1;
	plasticityFlag			= 0;
	stochasticReleaseFlag	= 0;
	writeCompressedWeights	= 0;
	selfFlag				= 0;
	shrinkPatches			= 0;
	nfp 					= 1;
	aspect					= 1;
	sigma					= 32;
	rMax					= 32;
	rMin					= 0;
	strength				= 0.01; //0.01
	wMinInit				= 0;
	wMaxInit				= 1;
};

BIDSConn "Lateral Interactions" = {   			// This connects the image to the BIDS_receptor so that the sensor(s) on the receptor can detect active pixels
    preLayerName 			= "BIDS_node";
    postLayerName 			= "BIDS_node";
    weightInitType 			= "BIDSLateral"; 	// determines how PetaVision distributes and handles the weights for neurons/nodes 
    channelCode 			= 0;               		// forward
	normalize     			= 0;  
	delay         			= 0.0; 					// in time steps, additional to the one you always get
	writeStep             	= -1.0;  				// do not write these out
	numAxonalArbors			= 1;
	plasticityFlag			= 0;
	stochasticReleaseFlag	= 0;
	writeCompressedWeights	= 1;
    selfFlag				= 0;
	shrinkPatches			= 0;
	nfp 					= 1;
	aspect					= 1;
	sigma					= 32;
	rMax					= 32;
	rMin					= 0;
	wMinInit				= 0;
	wMaxInit				= 1;
	strength				= 0.025; //0.025
	falloffType				= "Log";       //possible falloff rates right now are "Gaussian", "radSquared", and "Linear"
	lateralRadius			= 15;
};

// Probes Probes Probes Probes Probes Probes Probes Probes Probes Probes Probes Probes Probes
// Probes Probes Probes Probes Probes Probes Probes Probes Probes Probes Probes Probes Probes
// Probes Probes Probes Probes Probes Probes Probes Probes Probes Probes Probes Probes Probes
// Probes Probes Probes Probes Probes Probes Probes Probes Probes Probes Probes Probes Probes
// Probes Probes Probes Probes Probes Probes Probes Probes Probes Probes Probes Probes Probes

//StatsProbe "BIDS_nodeProbe" = {
//	targetLayer = "BIDS_node";
//};

//StatsProbe "RetinaONProbe" = {
//	targetLayer = "RetinaON";
//};

PointLIFProbe "BIDS_node_Probe" = {
	xLoc = 16;
	yLoc = 16;
	fLoc = 0;
	targetLayer = "BIDS_node";
	probeOutputFile = "BIDS_node_PointProbe";
};

//PointProbe "Source_Probe" = {
//	xLoc = 0;
//	yLoc = 0;
//	fLoc = 0;
//	targetLayer = "Source";
//	probeOutputFile = "Source_PointProbe";
//};
 