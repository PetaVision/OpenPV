// 
// Parameter file for BIDS
//

HyPerCol "column" = {
   nx 							= 256; 			// pixel width of input image
   ny 							= 256; 			// pixel height of input image
   dt 							= 1.;           // according GK
   randomSeed 				= 1020304050.0; // remove when running for real
   //checkpointRead  			= true;  		// normal run
   checkpointRead  				= false; 		// init run
   checkpointWrite 				= true;  		// always
   //checkpointWriteDir           = "/Users/Burger/Documents/workspace/BIDS/output/checkpoints/";
   checkpointWriteDir           = "~/Documents/Work/LANL/workspace/BIDS/output/checkpoints/";
   checkpointWriteStepInterval  = 100;
   numSteps 					= 700;			// amount of time steps performed during run-time
   progressStep					= 100;
   //outputPath                   = "/Users/Burger/Documents/workspace/BIDS/output/";
   outputPath                   = "~/Documents/Work/LANL/workspace/BIDS/output/";
   filenamesContainLayerNames 	= 2; 			// stores pvp files as: 1 = layer number/2 = layer number and layer name/3 = layer name

   writeProgressToErr           = 0;
   filenamesContainConnectionNames = 1;
   suppressLastOutput = 1;
};

// Layers Layers Layers Layers Layers Layers Layers Layers Layers Layers Layers
// Layers Layers Layers Layers Layers Layers Layers Layers Layers Layers Layers
// Layers Layers Layers Layers Layers Layers Layers Layers Layers Layers Layers
// Layers Layers Layers Layers Layers Layers Layers Layers Layers Layers Layers
// Layers Layers Layers Layers Layers Layers Layers Layers Layers Layers Layers

Movie "Source" = {
//    imageListPath = "/Users/slundquist/Documents/workspace/BIDS/input/wave_prop_files.txt";
//    imageListPath = "/Users/slundquist/Documents/workspace/BIDS/input/wave_prop_files2.txt";
//    imageListPath = "/Users/slundquist/Documents/workspace/BIDS/input/wave_with_noise.txt";
//    imageListPath = "/Users/slundquist/Documents/workspace/BIDS/input/weak_wave_file.txt";
//    imageListPath = "/Users/slundquist/Documents/workspace/BIDS/input/norm_wave_file.txt";
//    imageListPath = "/Users/slundquist/Documents/workspace/BIDS/input/strong_wave_file.txt";
//    imageListPath = "/Users/slundquist/Documents/workspace/BIDS/input/blank_img_files.txt";
//    imageListPath = "/Users/slundquist/Documents/workspace/BIDS/input/full_img_files.txt";
    imageListPath = "/Users/Burger/Documents/workspace/BIDS/input/filenames.txt";

	restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 1;
//   inverseFlag = true;
    
    marginWidth = 15; 	   // boundary
    
    mirrorBCflag = 1;
    useImageBCFlag = 1;   // Fill boundary with image instead of mirror or 0's
    
    displayPeriod = 1;    // Once per time step
    jitterFlag = 0;
    offsetX = 0;
    offsetY = 0;

    writeStep = 0;
    initialWriteTime = 0;
    phase = 0;
    writeImages = 0;
    useImageBCflag = 0;
    inverseFlag = 0;
    normalizeLuminanceFlag = 0;
    start_frame_index = 0;
    skip_frame_index = 0;
    echoFramePathnameFlag = 0;
    randomMovie = 0;
};

//Image "Neutral" = {
//	nxScale = 1;
//	nyScale = 1;
//	imagePath = "/Users/slundquist/Documents/workspace/BIDS/input/neutral_img.jpg";
//	inverseFlag = false;
//	nf = 1;
//	marginWidth = 15;
//	writeStep = -1;
//	offsetX = 0;
//	offsetY = 0;
//}

BIDSMovieCloneMap "BIDS_Movie" = {
	originalMovie = "Source";
	nxScale       = .25;
	nyScale       = .25;
	jitter        = 3;
	writeStep     = 1.0;

    nf = 1;
    marginWidth = 0;
    initialWriteTime = 0;
    phase = 0;
    mirrorBCflag = 0;
};

BIDSSensorLayer "BIDS_Sensor_Head" = {
	nxScale       = .25;
	nyScale       = .25;
	buffer_size   = 30;            //The amount of data in time steps that is saved to find frequencies
	neutral_val   = 128;           //The neutral value of a pixel with no stimulus
    jitterSource  = "BIDS_Movie";
    frequency     = 300;           //In hz, the frequency of the signal
    weight        = .5;            //Weight of sensor layer output
    ts_per_period = 16;            //How many time steps per frequency period

    nf = 1;
    marginWidth = 0;
    writeStep = 1;
    initialWriteTime = 0;
    phase = 0;
    mirrorBCflag = 0;
};

BIDSLayer "BIDS_Node" = {       
   nxScale          = 0.25;		// node width is 1 pixel
   nyScale          = 0.25;		// node height is 1 pixel
   nf               = 1;       	// one feature for now
   spikingFlag      = 1;       	// the whole idea 
   marginWidth      = 27;     	// for MPI running - based on lateral radius and jitter
   writeStep        = 1.0;
   mirrorBCflag     = 1;     	// mirroring boundary conditions
   InitVType        = "ConstantV";
   valueV			= -70.0;
   Vrest            = -70.;    
   restart          = 0.0;     	// from graylast
   Vexc             = 0.0;     	// reversal potential 
   Vinh             = -75.0;   	// chloride channel
   VinhB            = -90.0;   	// potassium reversal
   tau              = 10.0;    	// intrinsic leak membrane time constant (max)
   tauE             = 1.0;     	// how long glutamine stays bound
   tauI             = 5.0;     	// how long GABA stays bound
   tauIB            = 10.0;    	// inhibitory potassium channel 
   VthRest          = -55.0;   	// firing threshold 15 mV above rest
   tauVth           = 10.0;    	// 10.0 relative refractory period
   deltaVth         = 5.0;     	// jump of threshold when firing
   noiseAmpE        = 1;     	// 0.5 1 means conductance is equal to lead conductance  gjk
   noiseAmpI        = 1;     	// 0,5 "twice as easy for the membrane capacitance to discharge"
   noiseAmpIB       = 0.0;     	// no noise here 
   noiseFreqE       = 250.;    	// spontaneous transmitter release/channel openings
   noiseFreqI       = 250.;    	// correlation to time step size !!!
   noiseFreqIB      =   0.;    	// should be scaled by the time constant - look at LIF model

   initialWriteTime = 0;
   phase = 0;
   writeSparseActivity = 1;
};

BIDSCloneLayer "BIDS_Clone" ={  
   originalLayerName	="BIDS_Node";
   jitterSource         ="BIDS_Movie";
   nxScale          	= 1;
   nyScale          	= 1;
   spikingFlag     		= 1;    
   writeStep        	= 1.0;
   marginWidth      	= 4;     
   InitVType        	= "ConstantV";
   Vrest            	= -55.0;   
   VthRest          	= -47.5;                 
   mirrorBCflag     	= 0; 
   restart          	= 0.0;    

   nf = 1;
   InverseFlag = 0;
   SigmoidFlag = 1;
   SigmoidAlpha = .1;
   writeSparseActivity = 1;
   initialWriteTime = 0;
   phase = 9;
};

// Connections Connections Connections Connections Connections Connections
// Connections Connections Connections Connections Connections Connections
// Connections Connections Connections Connections Connections Connections
// Connections Connections Connections Connections Connections Connections
// Connections Connections Connections Connections Connections Connections
// Connections Connections Connections Connections Connections Connections

IdentConn "Movie to Sensor" = {
   preLayerName 			= "BIDS_Movie";
   postLayerName 			= "BIDS_Sensor_Head";
   channelCode              = 0; 			//excitatory channel
   writeStep                = -1;
   delay                    = 0;
};

IdentConn "Sensor to Nodes" = {
   preLayerName 			= "BIDS_Sensor_Head";
   postLayerName 			= "BIDS_Node";
   channelCode              = 0; 			//excitatory channel
   writeStep                = -1;
   delay                    = 0;

   preActivityIsNotRate = 0;
   writeCompressedCheckpoints = 0;
   nxp = -1;
   nyp = -1;
};

BIDSConn "Lateral Excitation" = {   			// This connects the image to the BIDS_receptor so that the sensor(s) on the receptor can detect active pixels
   preLayerName 			= "BIDS_Node";
   postLayerName 			= "BIDS_Node";
   weightInitType 			= "BIDSLateral"; 	// determines how PetaVision distributes and handles the weights for neurons/nodes 
   jitterSource             = "BIDS_Movie";
   channelCode 				= 0;               		// forward
   normalize     			= 0;  
   delay         			= 0.0; 					// in time steps, additional to the one you always get
   writeStep             	= -1.0;  				// do not write these out
   numAxonalArbors			= 1;
   plasticityFlag			= 0;
   stochasticReleaseFlag	= 0;
   writeCompressedWeights	= 1;
   selfFlag				    = 0;
   shrinkPatches			= 0;
   nfp 					    = 1;
   aspect					= 1;
   sigma					= 32;
   rMax					    = 32;
   rMin					    = 0;
   wMinInit				    = 0;
   wMaxInit				    = 1;
   strength				    = 0.11; //0.025
   falloffType				= "Log";       //possible falloff rates right now are "Gaussian", "radSquared", and "Linear"
   lateralRadius			= 15;

   preActivityIsNotRate = 0;
   writeCompressedCheckpoints = 0;
   nxp = -1;
   nyp = -1;
};

BIDSConn "Lateral Inhibition" = {
   preLayerName 			= "BIDS_Node";
   postLayerName 			= "BIDS_Node";
   weightInitType 			= "BIDSLateral"; 	// determines how PetaVision distributes and handles the weights for neurons/nodes 
   jitterSource             = "BIDS_Movie";
   channelCode 				= 1;               		// forward
   normalize     			= 0;  
   delay         			= 10; 					// in time steps, additional to the one you always get
   writeStep             	= -1.0;  				// do not write these out
   numAxonalArbors			= 1;
   plasticityFlag			= 0;
   stochasticReleaseFlag	= 0;
   writeCompressedWeights	= 1;
   selfFlag				    = 0;
   shrinkPatches			= 0;
   nfp 					    = 1;
   aspect					= 1;
   sigma					= 32;
   rMax					    = 32;
   rMin					    = 0;
   wMinInit				    = 0;
   wMaxInit				    = 1;
   strength				    = 0.22; //0.025
   falloffType				= "Log";       //possible falloff rates right now are "Gaussian", "radSquared", and "Linear"
   lateralRadius			= 15;

   preActivityIsNotRate = 0;
   writeCompressedCheckpoints = 0;
   nxp = -1;
   nyp = -1;
};
