function [pvp_params_file] = ...
      pvp_makeCatParams(DATASET_ID, ...
			FLAVOR_ID, ...
			pvp_repo_path, ...
			pvp_program_path, ...
			pvp_target_id, ...
			pvp_target_flag, ...
			pvp_num_ODD_kernels, ...
			pvp_bootstrap_str, ...
			pvp_edge_type, ...
			pvp_clique_id, ...
			pvp_version_str, ...
			pvp_num_versions, ...
			pvp_input_path, ...
			pvp_num_weight_files, ...
			pvp_file_of_weights_file, ...
			pvp_params_template, ...
			pvp_frame_size, ...
			pvp_num_frames, ...
			pvp_list_path, ...
			pvp_fileOfFrames, ...
			pvp_fileOfMasks, ...
			pvp_output_path, ...
			pvp_checkpoint_read_path, ...
			pvp_checkpoint_write_path, ...
			pvp_params_filename)
  
  %%keyboard;
  global PVP_VERBOSE_FLAG
  if ~exist("PVP_VERBOSE_FLAG") || isempty(PVP_VERBOSE_FLAG)
    PVP_VERBOSE_FLAG = 0;
  endif
  global pvp_home_path
  global pvp_workspace_path
  global pvp_mlab_path
  global pvp_clique_path
  if isempty(pvp_home_path)
    pvp_home_path = ...
	[filesep, "home", filesep, "gkenyon", filesep];
    %%[filesep, "Users", filesep, "gkenyon", filesep];
  endif
  if isempty(pvp_workspace_path)
    pvp_workspace_path = ...
	[pvp_home_path, "workspace", filesep];
  endif
  if isempty(pvp_mlab_path)
    pvp_mlab_path = ...
	[pvp_home_path, "workspace", filesep, "PetaVision", filesep, "mlab", filesep];
  endif
  if isempty(pvp_clique_path)
    pvp_clique_path = ...
	[pvp_workspace_path, "SynthCog3", filesep];
  endif

  more off;
  begin_time = time();

  num_argin = 0;
  num_argin = num_argin + 1;
  if nargin < num_argin || ~exist("DATASET_ID") || isempty(DATASET_ID)
    DATASET_ID = "CatVsNoCatDog";
  endif
  dataset_id = tolower(DATASET_ID); %% 
  num_argin = num_argin + 1;
  if nargin < num_argin || ~exist("FLAVOR_ID") || isempty(FLAVOR_ID)
    FLAVOR_ID = "Train"; 
  endif
  flavor_id = tolower(FLAVOR_ID); %% 
  num_argin = num_argin + 1;
  if nargin < num_argin || ~exist("pvp_repo_path") || isempty(pvp_repo_path)
    pvp_repo_path = ...
	[filesep, "mnt", filesep, "data", filesep, "ImageNet", filesep];
  endif
  num_argin = num_argin + 1;
  if nargin < num_argin || ~exist("pvp_program_path") || isempty(pvp_program_path)
    pvp_program_path = ...
	[pvp_repo_path, "PetaVision", filesep, ...
	 DATASET_ID, filesep, ...
	 FLAVOR_ID, filesep];
  endif
  num_argin = num_argin + 1;
  if nargin < num_argin || ~exist("pvp_target_id") || isempty(pvp_target_id)
    pvp_target_id =  {"cat", "nocatdog"};%% 
  endif
  num_argin = num_argin + 1;
  if nargin < num_argin || ~exist("pvp_target_flag") || isempty(pvp_target_flag)
    pvp_target_flag =  strcmp(FLAVOR_ID, "Test");%% 
  endif
  num_argin = num_argin + 1;
  if nargin < num_argin || ~exist("pvp_num_ODD_kernels") || isempty(pvp_num_ODD_kernels)
    pvp_num_ODD_kernels =  1; %% 3; %%
  endif
  pvp_num_ODD_kernels_str = "";
  if pvp_num_ODD_kernels > 1
    pvp_num_ODD_kernels_str = num2str(pvp_num_ODD_kernels);
  endif
  num_argin = num_argin + 1;
  if nargin < num_argin || ~exist("pvp_bootstrap_str") %% string can be empty
    pvp_bootstrap_str =  ""; %% "_bootstrap"; %%
  endif
  num_argin = num_argin + 1;
  if nargin < num_argin || ~exist("pvp_edge_type") || isempty(pvp_edge_type)
    pvp_edge_type =  "canny"; %%""; %% 
  endif
  num_argin = num_argin + 1;
  if nargin < num_argin || ~exist("pvp_clique_id") || isempty(pvp_clique_id)
    pvp_clique_id =  "3way"; %%""; %% 
  endif
  num_argin = num_argin + 1;
  if nargin < num_argin || ~exist("pvp_version_str") %% string can be empty
    pvp_version_str =  "001"; %%
  endif
  num_argin = num_argin + 1;
  if nargin < num_argin || ~exist("pvp_num_versions") || isempty(pvp_num_versions)
    pvp_num_versions = 1; %%
  endif
  num_argin = num_argin + 1;
  if nargin < num_argin || ~exist("pvp_input_path") || isempty(pvp_input_path)
    pvp_input_path = ...
	[pvp_clique_path, "input", filesep, ...
	 DATASET_ID, filesep, ...
	 FLAVOR_ID, filesep, ...
	 pvp_target_id{pvp_target_flag}, pvp_num_ODD_kernels_str, filesep, ...
	 pvp_edge_type, pvp_clique_id, filesep, ...
	 pvp_version_str, filesep];
    disp(["pvp_input_path = ", pvp_input_path]);
  endif
  num_argin = num_argin + 1;
  if nargin < num_argin || ~exist("pvp_num_weight_files") || isempty(pvp_num_weight_files)
    pvp_num_weight_files = zeros(1,2); %%
  endif
  num_argin = num_argin + 1;
  if nargin < num_argin || ~exist("pvp_file_of_weights_file") 
    pvp_file_of_weights_path2 = ...
	[pvp_clique_path, "weights", filesep]; %%, ...
    pvp_file_of_weights_path3 = ...
	[pvp_file_of_weights_path2, ...
	 DATASET_ID, filesep]; %%, ...
    pvp_file_of_weights_path = ...
	[pvp_file_of_weights_path3, ...
	 FLAVOR_ID, filesep];
    pvp_file_of_weights_file = cell(1,2);
    for target_flag = 1:2
      file_of_weights_object_path2 = ...
	  [pvp_file_of_weights_path, ...
	   target_id{i_object, target_flag}, pvp_num_ODD_kernels_str, filesep];
      file_of_weights_object_path = ...
	  [file_of_weights_object_path2, ...
	   pvp_edge_type, pvp_clique_id, filesep];
      pvp_file_of_weights_filename = ...
	  [DATASET_ID, ...
	   "_", ...
	   FLAVOR_ID, ...
	   "_", ...
	   target_id{i_object, target_flag}, ...
	   pvp_num_ODD_kernels_str, ...
	   "_", ...
	   pvp_edge_type, pvp_clique_id, ...
	   ".weights"];	
      pvp_file_of_weights_file{1, target_flag} = ...
	  [pvp_file_of_weights_path, pvp_file_of_weights_filename];
    endfor
  endif
  num_argin = num_argin + 1;
  if nargin < num_argin || ~exist("pvp_params_template") || isempty(pvp_params_template)
    pvp_params_template = ...
	[pvp_clique_path, ...
	 "templates", filesep, ...
	 DATASET_ID, filesep, ...
	 FLAVOR_ID, filesep, ...
	 pvp_target_id{pvp_target_flag}, pvp_num_ODD_kernels_str, filesep, ...
	 DATASET_ID, "_", FLAVOR_ID, "_", ...
	 pvp_target_id{pvp_target_flag}, num2str(pvp_num_ODD_kernels), pvp_bootstrap_str, "_", pvp_edge_type, pvp_clique_id, "_", pvp_version_str,  "_", ...
	 "template.params"];
  endif
  num_argin = num_argin + 1;
  if nargin < num_argin || ~exist("pvp_frame_size") || isempty(pvp_frame_size)
    pvp_frame_size =  [256 360]; %%
    disp(["frame_size = ", num2str(pvp_frame_size)]);
  endif
  num_argin = num_argin + 1;
  if nargin < num_argin || ~exist("pvp_num_frames") %% || isempty(pvp_num_frames)
    pvp_num_frames = 0;
  endif
  num_argin = num_argin + 1;
  if nargin < num_argin || ~exist("pvp_list_path") || isempty(pvp_list_path)
    pvp_list_path = ...
	[pvp_repo_path, 
	 "list", filesep];
  endif
  num_argin = num_argin + 1;
  if nargin < num_argin || ~exist("pvp_fileOfFrames") || isempty(pvp_fileOfFrames)
    pvp_fileOfFrames_path = ...
	[list_path]; 
    pvp_fileOfFrames_file = ...
	[flavo_id, "_", "fileOfFilenames1.txt"];
    %%[DATASET_ID, "_", FLAVOR_ID, "_", pvp_clip_name, "_", pvp_edge_type, "_", "frames"];
    pvp_fileOfFrames = ...
	[pvp_fileOfFrames_path, pvp_fileOfFrames_file];
  endif
  num_argin = num_argin + 1;
  if nargin < num_argin || ~exist("pvp_fileOfMasks") %% || isempty(pvp_fileOfMasks)
    pvp_fileOfMasks_path = ...
	[list_path]; 
    pvp_fileOfMasks_file = ...
	[flavor_id, "_", "fileOfMasknames.txt"];
    pvp_fileOfMasks = ...
	[pvp_fileOfMasks_path, pvp_fileOfMasks_file];
  endif
  num_argin = num_argin + 1;
  if nargin < num_argin || ~exist("pvp_output_path") || isempty(pvp_output_path)
    output_activity_path = ...
	[pvp_program_path, ...
	 "activity", filesep];
    mkdir(output_activity_path);
    output_object_path = ...
	[output_activity_path, ...
	 pvp_target_id{pvp_target_flag}, filesep];
    mkdir(output_object_path);
    output_version_path = ...
	[output_object_path, ...
	 pvp_version_str, filesep];
    mkdir(output_version_path);
    pvp_output_path = output_version_path;
  endif
  num_argin = num_argin + 1;
  if nargin < num_argin || ~exist("pvp_checkpoint_read_path") || isempty(pvp_checkpoint_read_path)
    pvp_checkpoint_read_path = "";
  endif
  num_argin = num_argin + 1;
  if nargin < num_argin || ~exist("pvp_checkpoint_write_path") || isempty(pvp_checkpoint_write_path)
    checkpoint_activity_path = ...
	[pvp_program_path, ...
	 "checkpoints", filesep];
    mkdir(checkpoint_write_path);
    checkpoint_object_path = ...
	[checkpoint_write_path, ...
	 pvp_target_id{pvp_target_flag}, filesep];
    mkdir(checkpoint_object_path);
    checkpoint_version_path = ...
	[checkpoint_object_path, ...
	 pvp_version_str, filesep];
    mkdir(checkpoint_version_path);
    pvp_checkpoint_write_path = checkpoint_version_path;
  endif
  num_argin = num_argin + 1;
  if nargin < num_argin || ~exist("pvp_params_filename") || isempty(pvp_params_filename)
    pvp_params_filename = ...
	[DATASET_ID, ...
	 "_", ...
	 FLAVOR_ID, ...
	 "_", ...
	 pvp_target_id{pvp_target_flag}, ...
	 num2str(pvp_num_ODD_kernels), pvp_bootstrap_str, ...
	 "_", ...
	 pvp_edge_type, pvp_clique_id, ...
	 "_", ...
	 pvp_version_str, ...
	 ".params"];
  endif
  
  pvp_version_id = str2num(pvp_version_str);
  disp(["pvp_version_id = ", num2str(pvp_version_id)]);



  pvp_params_file = [pvp_input_path, pvp_params_filename];
  pvp_params_fid = ...
      fopen(pvp_params_file, "w");
  if pvp_params_fid < 0
    disp(["fopen failed: ", pvp_params_file]);
    return;
  endif
  
  pvp_template_fid = ...
      fopen(pvp_params_template, "r");
  if pvp_template_fid < 0
    disp(["fopen failed: ", pvp_params_template]);
    return;
  endif

  start_frame_index = pvp_version_id;
  skip_frame_index_str = num2str(pvp_num_versions);
  disp(["pvp_checkpoint_read_path = ", pvp_checkpoint_read_path]);
  pvp_checkpoint_read_flag = "false";
  checkpoint_ndx = 0;
  pvp_checkpoint_read_parent = "";
  if ~isempty(pvp_checkpoint_read_path)
    pvp_checkpoint_read_flag = "true";
    checkpoint_folder = strFolderFromPath(pvp_checkpoint_read_path);
    checkpoint_ndx = str2num(checkpoint_folder(11:end-1));
    pvp_checkpoint_read_parent = strExtractPath(pvp_checkpoint_read_path);
    start_frame_index = start_frame_index + (checkpoint_ndx+0) * pvp_num_versions;
  endif
  start_frame_index_str = num2str(start_frame_index);
  disp(["start_frame_index_str = ", start_frame_index_str]);

  %% hack, assumes only boot from checkpoint for training runs
  if strcmp(FLAVOR_ID,"Training")
    pvp_num_frames = pvp_num_frames - start_frame_index;
  endif
  pvp_num_frames = ceil(pvp_num_frames / pvp_num_versions);

  %%keyboard;
  %% note, the syntax ["""", ..., """"] is to specify double quotes in a string, the second double quote escapse the third double quote, the first and last indicate a string
  pvp_params_token_left = "$$$_";
  pvp_params_token_right = "_$$$";
  pvp_params_hash = ...
      {"numSteps", "numSteps", num2str(pvp_num_frames + 2*pvp_num_ODD_kernels + 4); ...
       "outputPath", "outputPath", ["""", pvp_output_path, """"]; ...
       "checkpointRead", "checkpointRead", ...
       pvp_checkpoint_read_flag; ...
       "checkpointReadDir", "checkpointReadDir", ...
       ["""", pvp_checkpoint_read_parent, """"]; ...
       "checkpointReadDirIndex", "checkpointReadDirIndex", ...
       num2str(checkpoint_ndx); ...
       "checkpointWriteDir", "checkpointWriteDir", ...
       ["""", pvp_checkpoint_write_path, """"]; ...
       "printParamsFilename", "printParamsFilename", ...
       ["""", pvp_output_path, pvp_params_filename, """"]; ...
       "imageListPath", "imageListPath", ["""", pvp_fileOfFrames, """"]; ...
       "image_start_frame_index", "start_frame_index", start_frame_index_str; ...
       "image_skip_frame_index", "skip_frame_index", skip_frame_index_str; ...
       "maskListPath", "imageListPath", ["""", pvp_fileOfMasks, """"]; ...
       "mask_start_frame_index", "start_frame_index", start_frame_index_str; ...
       "mask_skip_frame_index", "skip_frame_index", skip_frame_index_str; ...
       "endStim", "endStim", num2str(pvp_num_frames); ...
       "VgainL1Clique", "Vgain", num2str(1.0, "%5.3f"); ...
       "VgainL2Clique", "Vgain", num2str(1.0, "%5.3f"); ...
       "VgainL3Clique", "Vgain", num2str(1.0, "%5.3f"); ...
       "VgainL4Clique", "Vgain", num2str(1.0, "%5.3f"); ...
       "numWeightFilesTarget", "numWeightFiles", num2str(pvp_num_weight_files(1)); ...
       "initWeightsFileL1ToL1CliqueTarget", "initWeightsFile", ...
       ["""", pvp_file_of_weights_file{1}, """"]; ...  
       "initWeightsFileL1ToL1PostTarget", "initWeightsFile", ...
       ["""", pvp_file_of_weights_file{1}, """"]; ...  
       "numWeightFilesDistractor", "numWeightFiles", num2str(pvp_num_weight_files(2)); ...
       "initWeightsFileL1ToL1CliqueDistractor", "initWeightsFile", ...
       ["""", pvp_file_of_weights_file{2}, """"]; ...
       "initWeightsFileL1ToL1PostDistractor", "initWeightsFile", ...
       ["""", pvp_file_of_weights_file{2}, """"]; ...
       "initWeightsFileL1ToL2CliqueTarget", "initWeightsFile", ...
       ["""", pvp_file_of_weights_file{1}, """"]; ...  
       "initWeightsFileL1CliqueToL2PostTarget", "initWeightsFile", ...
       ["""", pvp_file_of_weights_file{1}, """"]; ...  
       "initWeightsFileL1ToL2CliqueDistractor", "initWeightsFile", ...
       ["""", pvp_file_of_weights_file{2}, """"]; ...
       "initWeightsFileL1CliqueToL2PostDistractor", "initWeightsFile", ...
       ["""", pvp_file_of_weights_file{2}, """"]; ...
       "initWeightsFileL2ToL3CliqueTarget", "initWeightsFile", ...
       ["""", pvp_file_of_weights_file{1}, """"]; ...  
       "initWeightsFileL2CliqueToL3PostTarget", "initWeightsFile", ...
       ["""", pvp_file_of_weights_file{1}, """"]; ...  
       "initWeightsFileL2ToL3CliqueDistractor", "initWeightsFile", ...
       ["""", pvp_file_of_weights_file{2}, """"]; ...
       "initWeightsFileL2CliqueToL3PostDistractor", "initWeightsFile", ...
       ["""", pvp_file_of_weights_file{2}, """"]; ...
       "initWeightsFileL3ToL4CliqueTarget", "initWeightsFile", ...
       ["""", pvp_file_of_weights_file{1}, """"]; ...  
       "initWeightsFileL3CliqueToL4PostTarget", "initWeightsFile", ...
       ["""", pvp_file_of_weights_file{1}, """"]; ...  
       "initWeightsFileL3ToL4CliqueDistractor", "initWeightsFile", ...
       ["""", pvp_file_of_weights_file{2}, """"]; ...
       "initWeightsFileL3CliqueToL4PostDistractor", "initWeightsFile", ...
       ["""", pvp_file_of_weights_file{2}, """"] ...
       };

  pvp_num_params = size(pvp_params_hash, 1);
  
  %%keyboard;
  while(~feof(pvp_template_fid))
    pvp_template_str = fgets(pvp_template_fid);
    pvp_params_str = pvp_template_str;
    for pvp_params_ndx = 1 : pvp_num_params
      pvp_str_ndx = ...
	  strfind(pvp_template_str, ...
		  [pvp_params_token_left, ...
		   pvp_params_hash{pvp_params_ndx, 1}, ...
		   pvp_params_token_right]);
      if ~isempty(pvp_str_ndx)
	pvp_hash_len = ...
	    length(pvp_params_hash{pvp_params_ndx, 1}) + ...
	    length(pvp_params_token_left) + ...
	    length(pvp_params_token_right);
	pvp_template_len = ...
	    length(pvp_template_str);
	pvp_prefix = pvp_template_str(1:pvp_str_ndx-1);
	pvp_suffix = pvp_template_str(pvp_str_ndx+pvp_hash_len:pvp_template_len-1);
	pvp_params_str = ...
	    [pvp_prefix, ...
	     pvp_params_hash{pvp_params_ndx, 2}, ...
	     " = ", ...
	     num2str(pvp_params_hash{pvp_params_ndx, 3}), ...
	     pvp_suffix, ";", "\n"];
	break;
      endif
    endfor  %% pvp_params_ndx
    fputs(pvp_params_fid, pvp_params_str);
    %%keyboard;
  endwhile
  fclose(pvp_params_fid);
  fclose(pvp_template_fid);

endfunction %% pvp_makeParams
