//
// params.geisler
//  - input parameters for geisler.cpp, a study of geisler kernels with amoeba/no-amoeba images
//

HyPerCol "column" = {
   nx = 128;   // until we get going with images
   ny = 128;
   dt = 1.0;
   mirrorBCflag = 1;
};

//
// Three layers, "Retina"+"Image", "L1", "L1Inh"
//

HyPerLayer "Image" = {
   // unnecessary ?
  marginWidth = 8; 
    // burstFreq = 12;
};

HyPerLayer "Retina" = {
   nxScale = 1;
   nyScale = 1;
   marginWidth = 8;

   beginStim = 200;
   endStim   = 800;

   burstFreq = 1;      // Hz
   burstDuration = 1000;  // ms

   spikingFlag = 1;        // spike as poisson

   noiseOnFreq  = 200;//100;     // (Hz) when this is defined poissonEdge overridden
   noiseOffFreq = 10;//50;     // (Hz) when this is defined poissonEdge overridden
};

HyPerLayer "LGN" = {
   nxScale = 1; // 8;
   nyScale = 1; // 8;
   nf = 1;
   
   marginWidth = 8;
   
   noiseAmpE = 1.0;
   noiseAmpI = 2.0;
};

HyPerLayer "LGNInh" = {
   nxScale = 1; // 8;
   nyScale = 1; // 8;
   nf = 1;
   
   marginWidth = 8;
   
   VthRest = -45.0;

   noiseAmpE = 1.0;
   noiseAmpI = 2.0;
};

HyPerLayer "L1" = {
   nxScale = 1; 
   nyScale = 1; 
   nf = 12;
   
   marginWidth = 8;
   
   noiseAmpE = 1.0;
   noiseAmpI = 2.0;
};


HyPerLayer "L1Inh" = {
   nxScale = 1; 
   nyScale = 1; 
   nf = 12;
   
   marginWidth = 8;
   
   VthRest = -45.0;
   
   noiseAmpE = 1.0;
   noiseAmpI = 2.0;
};


///////
// 12 connections: 
//    "Retina to LGN"
//    "LGN to L1"
//    "LGNInh to LGN"
//    "LGNInh to LGNInh Exc"
//    "LGNInh to LGNInh Inh"
//    "L1 to LGN"
//    "L1 to LGNInh"
//    "L1 to L1"
//    "L1 to L1Inh"
//    "L1Inh to L1"
//    "L1Inh to L1Inh Exc"
//    "L1Inh to L1Inh Inh"


HyPerConn "Retina to LGN" = {
   nxp = 3; 
   nyp = 3; 
   
   stdpFlag   = 0;
   randomFlag = 0;
   
   initFromLastFlag = 0;  

   aspect = 1;
   sigma = 0.5;
   rMax  = 3;
   strength = 8.0;  
};


HyPerConn "LGNInh to LGN" = {
   nxp = 3; 
   nyp = 3; 
   
   stdpFlag   = 0;
   randomFlag = 0;
   
   initFromLastFlag = 0;  // 1;  // restart

   aspect = 1;
   sigma = 1.5;
   rMax  = 3;
   strength = 64.0;  
   
};


HyPerConn "LGNInh to LGNInh Exc" = {
   nxp = 7; 
   nyp = 7; 
   
   stdpFlag   = 0;
   randomFlag = 0;
   
   initFromLastFlag = 0;  // 1;  
   
   aspect = 1;
   sigma = 3.5;
   rMax  = 7;
   strength = 8.0;  
   
};

HyPerConn "LGNInh to LGNInh Inh" = {
   nxp = 7; 
   nyp = 7; 
   
   stdpFlag   = 0;
   randomFlag = 0;
   
   initFromLastFlag = 0; // 1;   

   aspect = 1;
   sigma = 3.5;
   rMax  = 7;
   strength = 16.0;  
   
   delay = 2.0;
   
};


HyPerConn "LGN to L1" = {
   nxp = 7; 
   nyp = 7; 
   
   stdpFlag   = 0;
   randomFlag = 0;
   
   initFromLastFlag = 0;  // 1;  // restart

   aspect = 7;
   sigma = 7;
   rMax  = 7;
   strength = 128.0;  
   
   delay = 1.0;
};

HyPerConn "L1 to LGN" = {
   nxp = 7; 
   nyp = 7; 
   
   stdpFlag   = 0;
   randomFlag = 0;
   
   initFromLastFlag = 0;  // 1;  // restart

   aspect = 7;
   sigma = 7;
   rMax  = 7;
   strength = 16.0;  
   
   delay = 1.0;
};


HyPerConn "L1 to LGNInh" = {
   nxp = 7; 
   nyp = 7; 
   
   stdpFlag   = 0;
   randomFlag = 0;
   
   initFromLastFlag = 0;  // 1;  // restart

   aspect = 7;
   sigma = 7;
   rMax  = 7;
   strength = 32.0;  
   
   delay = 1.0;
};


HyPerConn "L1 to L1" = {
   nxp = 15; // 87;
   nyp = 15; // 87;
   strength = 32;
   
   delay = 1.0;
   
};

HyPerConn "L1 to L1Inh" = {
   nxp = 15; 
   nyp = 15; 
   strength = 128;
      
   delay = 1.0;
};

HyPerConn "L1Inh to L1" = {
   nxp = 7;
   nyp = 7;
   strength = 256;

   aspect = 3.5;
   sigma = 7;
   rMax  = 7;
   sigma_cocirc = 0.26179; // PI / 12.0;
   deltaThetaMax = 3.1415926535897931; //PI;
};


HyPerConn "L1Inh to L1Inh Exc" = {
   nxp = 7;
   nyp = 7;
   strength = 16;

   aspect = 3.5;
   sigma = 7;
   rMax  = 7;
   sigma_cocirc = 0.26179; // PI / 12.0;
   deltaThetaMax = 3.1415926535897931; //PI;
};

HyPerConn "L1Inh to L1Inh Inh" = {
   nxp = 7;
   nyp = 7;
   strength = 32;

   aspect = 3.5;
   sigma = 7;
   rMax  = 7;
   sigma_cocirc = 0.26179; // PI / 12.0;
   deltaThetaMax = 3.1415926535897931; //PI;
   
   delay = 2.0;
   
};




