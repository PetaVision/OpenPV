//
// clique_train.params
//  - input parameters for learning clique kernels
//

HyPerCol "column" = {
   nx = 256;   // until we get going with images
   ny = 256;
   dt = 1.0;
   randomSeed = 1;  // if not set here,  clock time is used to generate seed
   numSteps = 36006;  // num images plus (num layers + 1) * delay
   outputPath = "/Users/gkenyon/workspace-indigo/Clique2/input/noamoeba/";
   progressStep = 2000;
   filenamesContainLayerNames = false;
   checkpointRead = false;
   checkpointWrite = false;
};

//
// layers
//

Movie "Image" = {
    imageListPath = "/Users/gkenyon/Pictures/amoeba/256/noamoeba4x9000_fileNames.txt";
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 1;
    marginWidth = 0;
    writeStep = 0;
    mirrorBCflag = 0;
    spikingFlag = 0;
    writeNonspikingActivity = 0;
    writeImages = 0;
    displayPeriod = 1;
    jitterFlag = 0;
    randomMovie = 0;
    offsetX = 0;
    offsetY = 0;
};


Retina "Retina" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 1;
    marginWidth = 3;
    writeStep = -1.0;
    mirrorBCflag = 1;
    spikingFlag = 0;
    writeNonspikingActivity = 0;

    poissonEdgeProb = 1;
    poissonBlankProb = 0;
    burstFreq = 1;
    burstDuration = 1;

    beginStim = 1;
    endStim = 36000;
    InitVType = "ConstantV";
    valueV = 0;
};



ANNLayer "L1" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 8;
    marginWidth = 32;
    writeStep = -1.0;
    mirrorBCflag = 1;
    spikingFlag = 0;
    writeNonspikingActivity = 0;

    VThresh = 0.5;
    VMax = 1.0;
    VMin = 0.0;
    InitVType = "ConstantV";
    valueV = 0;
};





//  connections: 

IdentConn "Movie to Retina" = {
    preLayerName = "Image";
    postLayerName = "Retina";
    channelCode = 0;
    writeStep = -1;
    initFromLastFlag = 0;
    weightInitType = "IdentWeight";

    delay = 0;     
};


// Retina connections

KernelConn "Retina to L1" = {
   preLayerName = "Retina";
   postLayerName = "L1";
   channelCode = 0;
   nxp = 7; 
   nyp = 7; 
   nfp = 8;
   numAxonalArbors = 1;
   initFromLastFlag = 0;  // 1;  // restart
   writeStep = -1;
   
   weightInitType = "Gauss2DWeight";
   aspect = 7;
   sigma = 7;
   rMax  = 7;
   rMin = 0;
   deltaThetaMax = 6.2832;
   thetaMax = 1;
   bowtieFlag = 0;
   numFlanks = 1;
   flankShift = 0;
   rotate = 1;
       
   strength = 25.0;  
   normalize = 1.0;
   normalize_zero_offset = 0.0;
   normalize_max = 0.0;
   normalize_cutoff = 0;
   symmetrizeWeights = 0;

   shrinkPatches = false;
   writeCompressedWeights = 0.0;
   plasticityFlag = 0;
   stochasticReleaseFlag = false;
    
   delay = 0;
};



KernelConn "Retina to L1 Inh" = {
   preLayerName = "Retina";
   postLayerName = "L1";
   channelCode = 1;
   nxp = 7; 
   nyp = 7; 
   nfp = 8;
   numAxonalArbors = 1;
   initFromLastFlag = 0;  // 1;  // restart
   writeStep = -1;
   
   weightInitType = "Gauss2DWeight";
   aspect = 7;
   sigma = 7;
   rMax  = 7;
   rMin = 0;
   deltaThetaMax = 6.2832;
   thetaMax = 1;
   bowtieFlag = 0;
   numFlanks = 2;
   flankShift = 1.41;
   rotate = 1;
       
   strength = 50.0;  
   normalize = 1.0;
   normalize_zero_offset = 0.0;
   normalize_max = 0.0;
   normalize_cutoff = 0;
   symmetrizeWeights = 0;
   
   shrinkPatches = false;
   writeCompressedWeights = 0.0;
   plasticityFlag = 0;
   stochasticReleaseFlag = false;

   delay = 0;
};





// Clique connections


CliqueConn "L1 to L1" = {
   preLayerName = "L1";
   postLayerName = "L1";
   channelCode = 2;
   nxp = 65;
   nyp = 65;
   nfp = 8;
//    int nyCliqueRadius = (int) (nyPostPatch/2);
//    int nxCliqueRadius = (int) (nxPostPatch/2);
//    int cliquePatchSize = (2*nxCliqueRadius + 1) * (2*nyCliqueRadius + 1) * nfPre;
//    int cliqueSize = 1;// number of presynaptic cells in clique (traditional ANN uses 1)
   numAxonalArbors = 1; // pow(cliquePatchSize, cliqueSize-1), 
   initFromLastFlag = 0;  // 1;  // restart
   writeStep = -1;

   weightInitType = "UniformWeight";
   weightInit = 0;
   
   strength = 1.0;
   normalize = 0.0;
   symmetrizeWeights = 0;
   
   plasticityFlag = 1;
   shrinkPatches = false;
   writeCompressedWeights = 0.0;
   stochasticReleaseFlag = false;
   weightUpdatePeriod = 1.0;

   delay = 0; 
};



StatsProbe "Retina Stats" = {
    targetLayer = "Retina";
};

StatsProbe "L1 Stats" = {
    targetLayer = "L1";
};


StatsProbe "Retina Stats File" = {
    targetLayer = "Retina";
    probeOutputFile = "Retina_Stats.txt";
};

StatsProbe "L1 Stats File" = {
    targetLayer = "L1";
    probeOutputFile = "L1_Stats.txt";
};


