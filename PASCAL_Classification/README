This directory contains a demonstration of PetaVision using the PASCAL
classification task.

It takes a list of image files from stdin and generates heat maps showing
the confidence of each category.

After downloading and compiling, there is some preparation that needs to
be done before running.

1. Copy src/template-config.txt to src/config.txt
   The config file controls the following settings:
      imageLayer          The name of the ImageFromMemoryBuffer layer used for input
      resultLayer         The name of the HyPerLayer containing the confidences
      octaveCommand       The octave shell command.  The function m-file heatMapMontage.m is called
                          using <octaveCommand> --eval "heatMapMontage(arguments);".
                          Octave is called in parallel with PetaVision, but the demo does not start a new
                          octave until the previous octave has completed.
      octaveLogFile       The log file for the octave jobs
                          (clobbered at beginning of running the demo; each octave process
                          appends to the existing octaveLogFile).
      heatMapMontageDir   The directory to write the generated heat maps into.
                          Filenames in this directory have the form frame1.png, frame2.png, etc.
                          Absolute paths and relative paths are both allowed; relative paths are
                          relative to PetaVision's working directory.
      displayCommand      (optional) The external shell command to display the generated heat map.
                          It is called each time a heat map image is generated, with the path to the
                          new heat map filename as the argument.  If present, the demo will wait until
                          the display command completes before continuing the run.
   The template-config.txt file shows the expected format.

2. The params files look for files in a directory called CurrentModel.
   Because of the size of the files involved, we are not saving initialization
   pvp files on the repository.  You can get them by going to
   <google drive link goes here>
   The CurrentModel directory needs to contain the following pvp files:
      Classifiers/BiasS2ToGroundTruthReconS2Error_16X12_W.pvp
      Classifiers/BiasS2ToGroundTruthReconS2Error_4X3_W.pvp
      Classifiers/S2MaxPooledToGroundTruthReconS2Error_16X12_W.pvp
      Classifiers/S2MaxPooledToGroundTruthReconS2Error_4X3_W.pvp
      Classifiers/S2SumPooledToGroundTruthReconS2Error_16X12_W.pvp
      Classifiers/S2SumPooledToGroundTruthReconS2Error_4X3_W.pvp
      InitialV/S1Landscape_V.pvp (used by landscape.params)
      InitialV/S1Portrait_V.pvp (used by portrait.params)
      InitialV/S1Square_V.pvp (used by square.params)
      InitialV/S2Landscape_V.pvp (used by landscape.params)
      InitialV/S2Portrait_V.pvp (used by portrait.params)
      InitialV/S2Square_V.pvp (used by square.params)
      S1S2Weights/S1ToImageReconS1Error_W.pvp
      S1S2Weights/S2ToS1ReconS2Error_W.pvp
      Thresholds/ThresholdConn_16.pvp (currently the 16:1 downsampling part of the hierarchy is commented out)
      Thresholds/ThresholdConn_64.pvp
