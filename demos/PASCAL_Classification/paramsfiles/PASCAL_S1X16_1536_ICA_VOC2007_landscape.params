// PetaVision, git repository version 70fa010123349243f86b54d34eda5b190d75349f (Thu Oct 29 12:55:51 2015 -0600)
// Run time Fri Oct 30 14:29:14 2015
// Compiled with MPI and run using 1 rows and 4 columns.
// Compiled without OpenCL.
// Compiled with CUDA.
// Compiled with OpenMP parallel code and run using 8 threads.
debugParsing = false;

HyPerCol "column" = {
    startTime                           = 0;
    dt                                  = 1;
    dtAdaptFlag                         = true;
    dtAdaptController                   = "TimeScale";
    dtScaleMax                          = 10;
    dtScaleMin                          = 0.01;
    dtChangeMax                         = 0.01;
    dtChangeMin                         = -0.02;
    dtMinToleratedTimeScale             = 0.0001;
    stopTime                            = 2400;
    progressInterval                    = 0;
    writeProgressToErr                  = false;
    verifyWrites                        = false;
    outputPath                          = "output/";
    printParamsFilename                 = "PASCAL_S1X16_1536_ICA_VOC2007_landscape.params";
    randomSeed                          = 1234567890;
    nx                                  = 256;
    ny                                  = 192;
    nbatch                              = 1;
    filenamesContainLayerNames          = 2;
    filenamesContainConnectionNames     = 2;
    initializeFromCheckpointDir         = "";
    //defaultInitializeFromCheckpointFlag = false;
    checkpointWrite                     = false;
    //checkpointWriteDir                  = "/home/ec2-user/mountData/PASCAL_VOC/PASCAL_S1X16_1536_ICA/VOC2007_landscape7/Checkpoints";
    //checkpointWriteTriggerMode          = "step";
    //checkpointWriteStepInterval         = 120000;
    //deleteOlderCheckpoints              = false;
    //suppressNonplasticCheckpoints       = false;
    suppressLastOutput                  = true;
    writeTimescales                     = false;
    errorOnNotANumber                   = false;
};

Movie "UpdateTrigger" = { // Dummy movie for triggering
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 1;
    phase                               = 0;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    writeStep                           = -1;
    sparseLayer                         = false;
    updateGpu                           = false;
    dataType                            = NULL;
    inputPath                           = "UpdateTrigger.txt";
    offsetAnchor                        = "tl";
    offsetX                             = 0;
    offsetY                             = 0;
    writeImages                         = 0;
    inverseFlag                         = false;
    normalizeLuminanceFlag              = false;
    jitterFlag                          = 0;
    useImageBCflag                      = false;
    padValue                            = 0;
    autoResizeFlag                      = false;
    displayPeriod                       = 100;
    echoFramePathnameFlag               = true;
    batchMethod                         = "bySpecified";
    start_frame_index                   = 0;
    skip_frame_index                    = 1;
    writeFrameToTimestamp               = false; //true;
    flipOnTimescaleError                = true;
    resetToStartOnLoop                  = false;
};

//Movie "Image" = {
//    nxScale                             = 1;
//    nyScale                             = 1;
//    nf                                  = 3;
//    phase                               = 0;
//    mirrorBCflag                        = true;
//    initializeFromCheckpointFlag        = false;
//    writeStep                           = -1;
//    //initialWriteTime                    = 120000;
//    sparseLayer                         = false;
//    updateGpu                           = false;
//    dataType                            = NULL;
//    inputPath                           = "output/list.txt";
//    offsetAnchor                        = "tl";
//    offsetX                             = 0;
//    offsetY                             = 0;
//    writeImages                         = 0;
//    inverseFlag                         = false;
//    normalizeLuminanceFlag              = false;
//    normalizeStdDev                     = false;
//    jitterFlag                          = 0;
//    useImageBCflag                      = false;
//    padValue                            = 0;
//    autoResizeFlag                      = true;
//    displayPeriod                       = 2400;
//    echoFramePathnameFlag               = true;
//    batchMethod                         = "bySpecified";
//    start_frame_index                   = [0.000000];
//    skip_frame_index                    = [0.000000];
//    writeFrameToTimestamp               = false;
//    flipOnTimescaleError                = true;
//    resetToStartOnLoop                  = false;
//};

ImageFromMemoryBuffer "Image" = {
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 3;
    phase                               = 0;
    mirrorBCflag                        = true;
    writeStep                           = -1;
    //initialWriteTime                    = 120000;
    sparseLayer                         = false;
    updateGpu                           = false;
    dataType                            = NULL;
    //offsetAnchor                        = "tl";
    offsetAnchor                        = "cc";
    offsetX                             = 0;
    offsetY                             = 0;
    writeImages                         = 0;
    inverseFlag                         = false;
    jitterFlag                          = 0;
    useImageBCflag                      = false;
    padValue                            = 0;
};

RescaleLayer "ImageRescaled" = {
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 3;
    phase                               = 1;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    //triggerLayerName                    = NULL;
    triggerLayerName                    = "UpdateTrigger";
    triggerOffset                       = 0;
    triggerBehavior                     = "updateOnlyOnTrigger";
    writeStep                           = -1; //200;
    //initialWriteTime                    = 0;
    sparseLayer                         = false;
    updateGpu                           = false;
    dataType                            = NULL;
    originalLayerName                   = "Image";
    rescaleMethod                       = "meanstd";
    targetMean                          = 0;
    targetStd                           = 1;
};

ANNNormalizedErrorLayer "ImageReconS1Error" = {
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 3;
    phase                               = 2;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    initializeFromCheckpointFlag        = false;
    InitVType                           = "ZeroV";
    triggerLayerName                    = NULL;
    writeStep                           = -1;
    sparseLayer                         = false;
    updateGpu                           = false;
    dataType                            = NULL;
    VThresh                             = 0;
    clearGSynInterval                   = 0;
    errScale                            = 1;
    useMask                             = false;
};

HyPerLCALayer "S1" = {
    nxScale                             = 0.25;
    nyScale                             = 0.25;
    nf                                  = 1536;
    phase                               = 3;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    initializeFromCheckpointFlag        = false;
    InitVType                           = "InitVFromFile";
    Vfilename                           = "CurrentModel/InitialV/S1X16_1536_ICA/S1_V.pvp";
    triggerLayerName                    = NULL;
    writeStep                           = 100; //-1;
    initialWriteTime                    = 0;
    sparseLayer                         = true;
    writeSparseValues                   = true;
    updateGpu                           = true;
    dataType                            = NULL;
    VThresh                             = 0.025;
    AMin                                = 0;
    AMax                                = infinity;
    AShift                              = 0;
    VWidth                              = 100;
    clearGSynInterval                   = 0;
    timeConstantTau                     = 400;
    selfInteract                        = true;
};

ANNLayer "ImageReconS1" = {
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 3;
    phase                               = 5; 
    mirrorBCflag                        = false;
    valueBC                             = 0;
    initializeFromCheckpointFlag        = false;
    InitVType                           = "ZeroV";
    //triggerLayerName                    = NULL;
    triggerLayerName                    = "UpdateTrigger";
    triggerOffset                       = 1;
    triggerBehavior                     = "updateOnlyOnTrigger";
    writeStep                           = -1;
    //initialWriteTime                    = 0;
    sparseLayer                         = false;
    updateGpu                           = false;
    dataType                            = NULL;
    VThresh                             = -infinity;
    AMin                                = -infinity;
    AMax                                = infinity;
    AShift                              = 0;
    VWidth                              = 0;
    clearGSynInterval                   = 0;
};

ANNLayer "S1MaxPooled" = {
    nxScale                             = 0.015625;
    nyScale                             = 0.015625;
    nf                                  = 1536;
    phase                               = 4;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    initializeFromCheckpointFlag        = false;
    InitVType                           = "ZeroV";
    //triggerLayerName                    = NULL;
    triggerLayerName                    = "UpdateTrigger";
    triggerOffset                       = 1;
    triggerBehavior                     = "updateOnlyOnTrigger";
    writeStep                           = -1;
    sparseLayer                         = false;
    updateGpu                           = false;
    dataType                            = NULL;
    VThresh                             = -infinity;
    AMin                                = -infinity;
    AMax                                = infinity;
    AShift                              = 0;
    VWidth                              = 0;
    clearGSynInterval                   = 0;
};

ConstantLayer "BiasS1" = {
    nxScale                             = 0.015625;
    nyScale                             = 0.015625;
    nf                                  = 1;
    phase                               = 0;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    initializeFromCheckpointFlag        = false;
    InitVType                           = "ConstantV";
    valueV                              = 1;
    triggerLayerName                    = NULL;
    writeStep                           = -1;
    sparseLayer                         = false;
    updateGpu                           = false;
    dataType                            = NULL;
    VThresh                             = -infinity;
    AMin                                = -infinity;
    AMax                                = infinity;
    AShift                              = 0;
    VWidth                              = 0;
    clearGSynInterval                   = 0;
};

ANNLayer "GroundTruthReconS1" = {
    nxScale                             = 0.015625;
    nyScale                             = 0.015625;
    nf                                  = 21;
    phase                               = 5;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    initializeFromCheckpointFlag        = false;
    InitVType                           = "ZeroV";
    //triggerLayerName                    = NULL;
    triggerLayerName                    = "UpdateTrigger";
    triggerOffset                       = 1;
    triggerBehavior                     = "updateOnlyOnTrigger";
    writeStep                           = -1; //1200;
    //initialWriteTime                    = 1200;
    sparseLayer                         = false;
    updateGpu                           = false;
    dataType                            = NULL;
    VThresh                             = -infinity;
    AMin                                = -infinity;
    AMax                                = infinity;
    AShift                              = 0;
    VWidth                              = 0;
    clearGSynInterval                   = 0;
};

MomentumConn "S1ToImageReconS1Error" = {
    preLayerName                        = "S1";
    postLayerName                       = "ImageReconS1Error";
    channelCode                         = 1;
    delay                               = [0.000000];
    numAxonalArbors                     = 1;
    plasticityFlag                      = false;
    convertRateToSpikeCount             = false;
    receiveGpu                          = false;
    sharedWeights                       = true;
    weightInitType                      = "FileWeight";
    initWeightsFile                     = "CurrentModel/S1ToImageWeights/S1X16_1536_ICA/S1ToImageReconS1Error_W.pvp";
    useListOfArborFiles                 = false;
    combineWeightFiles                  = false;
    initializeFromCheckpointFlag        = false;
    updateGSynFromPostPerspective       = false;
    pvpatchAccumulateType               = "convolve";
    writeStep                           = -1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    nxp                                 = 16;
    nyp                                 = 16;
    nfp                                 = 3;
    shrinkPatches                       = false;
    normalizeMethod                     = "normalizeL2";
    strength                            = 1;
    normalizeArborsIndividually         = false;
    normalizeOnInitialize               = true;
    normalizeOnWeightUpdate             = true;
    rMinX                               = 0;
    rMinY                               = 0;
    nonnegativeConstraintFlag           = false;
    normalize_cutoff                    = 0;
    normalizeFromPostPerspective        = false;
    minL2NormTolerated                  = 0;
};

HyPerConn "ImageRescaledToImageReconS1Error" = {
    preLayerName                        = "ImageRescaled";
    postLayerName                       = "ImageReconS1Error";
    channelCode                         = 0;
    delay                               = [0.000000];
    numAxonalArbors                     = 1;
    plasticityFlag                      = false;
    convertRateToSpikeCount             = false;
    receiveGpu                          = false;
    sharedWeights                       = true;
    weightInitType                      = "OneToOneWeights";
    initWeightsFile                     = NULL;
    weightInit                          = 0.032075;
    initializeFromCheckpointFlag        = false;
    updateGSynFromPostPerspective       = false;
    pvpatchAccumulateType               = "convolve";
    writeStep                           = -1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    nxp                                 = 1;
    nyp                                 = 1;
    nfp                                 = 3;
    shrinkPatches                       = false;
    normalizeMethod                     = "none";
};

HyPerConn "BiasS1ToGroundTruthReconS1" = {
    preLayerName                        = "BiasS1";
    postLayerName                       = "GroundTruthReconS1";
    channelCode                         = 0;
    delay                               = [0.000000];
    numAxonalArbors                     = 1;
    plasticityFlag                      = false;
    convertRateToSpikeCount             = false;
    receiveGpu                          = false;
    sharedWeights                       = true;
    weightInitType                      = "FileWeight";
    initWeightsFile                     = "CurrentModel/Classifiers/S1X16_1536_ICA/BiasS1ToGroundTruthReconS1Error_W.pvp";
    useListOfArborFiles                 = false;
    combineWeightFiles                  = false;
    updateGSynFromPostPerspective       = false;
    pvpatchAccumulateType               = "convolve";
    writeStep                           = -1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    nxp                                 = 1;
    nyp                                 = 1;
    nfp                                 = 21;
    shrinkPatches                       = false;
    normalizeMethod                     = "none";
};

TransposeConn "ImageReconS1ErrorToS1" = {
    preLayerName                        = "ImageReconS1Error";
    postLayerName                       = "S1";
    channelCode                         = 0;
    delay                               = [0.000000];
    convertRateToSpikeCount             = false;
    receiveGpu                          = true;
    updateGSynFromPostPerspective       = true;
    pvpatchAccumulateType               = "convolve";
    writeStep                           = -1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    gpuGroupIdx                         = -1;
    originalConnName                    = "S1ToImageReconS1Error";
};

CloneConn "S1ToImageReconS1" = {
    preLayerName                        = "S1";
    postLayerName                       = "ImageReconS1";
    channelCode                         = 0;
    delay                               = [0.000000];
    convertRateToSpikeCount             = false;
    receiveGpu                          = false;
    updateGSynFromPostPerspective       = false;
    pvpatchAccumulateType               = "convolve";
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    originalConnName                    = "S1ToImageReconS1Error";
};

PoolingConn "S1ToS1MaxPooled" = {
    preLayerName                        = "S1";
    postLayerName                       = "S1MaxPooled";
    channelCode                         = 0;
    delay                               = [0.000000];
    numAxonalArbors                     = 1;
    convertRateToSpikeCount             = false;
    receiveGpu                          = false;
    sharedWeights                       = true;
    initializeFromCheckpointFlag        = false;
    updateGSynFromPostPerspective       = false;
    pvpatchAccumulateType               = "maxpooling";
    writeStep                           = -1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    nxp                                 = 1; 
    nyp                                 = 1;
    nfp                                 = 1536;
    shrinkPatches                       = false;
    needPostIndexLayer                  = false;
};

HyPerConn "S1MaxPooledToGroundTruthReconS1" = {
    preLayerName                        = "S1MaxPooled";
    postLayerName                       = "GroundTruthReconS1";
    channelCode                         = 0;
    delay                               = [0.000000];
    numAxonalArbors                     = 1;
    plasticityFlag                      = false;
    convertRateToSpikeCount             = false;
    receiveGpu                          = false;
    sharedWeights                       = true;
    weightInitType                      = "FileWeight";
    initWeightsFile                     = "CurrentModel/Classifiers/S1X16_1536_ICA/S1MaxPooledToGroundTruthReconS1Error_W.pvp";
    useListOfArborFiles                 = false;
    combineWeightFiles                  = false;
    updateGSynFromPostPerspective       = false;
    pvpatchAccumulateType               = "convolve";
    writeStep                           = -1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    nxp                                 = 1;
    nyp                                 = 1;
    nfp                                 = 21;
    shrinkPatches                       = false;
    normalizeMethod                     = "none";
    
};

//IdentConn "ImageReconS1ToImageReconS1Error" = {
//    preLayerName                        = "ImageReconS1";
//    postLayerName                       = "ImageReconS1Error";
//    channelCode                         = 1;
//    delay                               = [0.000000];
//    initWeightsFile                     = NULL;
//    writeStep                           = -1;
//};

//ColumnEnergyProbe "S1EnergyProbe" = {
//    message                             = NULL;
//    textOutputFlag                      = true;
//    probeOutputFile                     = "S1EnergyProbe.txt";
//    triggerLayerName                    = NULL;
//    energyProbe                         = NULL;
//};
//
//L2NormProbe "ImageReconS1ErrorL2NormEnergyProbe" = {
//    targetLayer                         = "ImageReconS1Error";
//    message                             = NULL;
//    textOutputFlag                      = true;
//    probeOutputFile                     = "ImageReconS1ErrorL2NormEnergyProbe.txt";
//    triggerLayerName                    = "Image";
//    triggerOffset                       = 1;
//    energyProbe                         = "S1EnergyProbe";
//    coefficient                         = 0.5;
//    maskLayerName                       = NULL;
//    exponent                            = 2;
//};
//
//L1NormProbe "S1L1NormEnergyProbe" = {
//    targetLayer                         = "S1";
//    message                             = NULL;
//    textOutputFlag                      = true;
//    probeOutputFile                     = "S1L1NormEnergyProbe.txt";
//    triggerLayerName                    = "Image";
//    triggerOffset                       = 1;
//    energyProbe                         = "S1EnergyProbe";
//    coefficient                         = 0.025;
//    maskLayerName                       = NULL;
//};


////// Having a movie layer for triggering the output calculations was causing the adaptive timestep to
////// reset to dtScaleMin on every flip of that movie. The following probes perform the correct calculation 
ColumnEnergyProbe "InputEnergyColProbe" = {
    probeOutputFile                     = NULL; //"input_energy.txt";
    textOutputFlag                      = false;
};

L2NormProbe "InputEnergyProbe" = {
    targetLayer                         = "ImageRescaled";
    message                             = NULL;
    probeOutputFile                     = NULL; //"image_l2norm.txt";
    textOutputFlag                      = false;
    triggerLayerName                    = NULL;
    energyProbe                         = "InputEnergyColProbe";
    coefficient                         = 1.0;
    exponent                            = 1.0;
};

ColumnEnergyProbe "ReconstructionErrorColProbe" = {
    probeOutputFile                     = NULL; //"recon_energy.txt";
    textOutputFlag                      = false;
};

L2NormProbe "ReconstructionErrorProbe" = {
    targetLayer                         = "ImageReconS1Error";
    message                             = NULL;
    probeOutputFile                     = NULL; //"recon_error_l2norm.txt";
    textOutputFlag                      = false;
    triggerLayerName                    = NULL;
    energyProbe                         = "ReconstructionErrorColProbe";
    coefficient                         = 1.0;
    exponent                            = 1.0;
};

QuotientColProbe "TimeScale" = {
    numerator                           = "InputEnergyColProbe";
    denominator                         = "ReconstructionErrorColProbe";
    probeOutputFile                     = NULL; //"timescale.txt";
    textOutputFlag                      = false;
    valueDescription                    = "TimeScale";
};

////// The probe for calculating intermediate analyses for the demo:
HeatMapProbe "HeatMapProbe" = {
    probeOutputFile                     = NULL;
    confidenceTable                     = "CurrentModel/ConfidenceTables/S1X16_1536_ICA/confidenceTable.mat";
    imageLayer                          = "Image";
    resultLayer                         = "GroundTruthReconS1";
    reconLayer                          = "ImageReconS1";
    classNames                          = "classNames.txt";
    outputPeriod                        = 100;
};
