///////////////////////////////////////////////////////////////////////////////////////////
// Parameter file for iHouse - Oja STDPConn
// DPaiton et SLundquist
///////////////////////////////////////////////////////////////////////////////////////////

HyPerCol "column" = {
   nx  			= 64; 	// pixel width of input image
   ny           = 64; 	// pixel height of input image
   dt           = 1.;     // ms // according GK
   
   randomSeed 	= 1020304050.0;   

   numSteps     = 100000;	// amount of time steps performed during run-time
   progressStep = 100;
   
   outputPath   = "~/Documents/Work/LANL/workspace/iHouse/output";
   
   filenamesContainLayerNames = 2; 	// stores pvp files as: 0 = layer number/1 = layer number and layer name/2 = layer name
   
   checkpointRead  				= false;
   checkpointWrite 				= false;
   checkpointWriteDir  			= "~/Documents/Work/LANL/workspace/iHouse/output/checkpoints";
   checkpointWriteStepInterval  = 200;
};


////////////////////////////////////////////////////////////////////////////////
// Layers Layers Layers Layers Layers Layers Layers Layers Layers Layers Layers
// Layers Layers Layers Layers Layers Layers Layers Layers Layers Layers Layers
// Layers Layers Layers Layers Layers Layers Layers Layers Layers Layers Layers
// Layers Layers Layers Layers Layers Layers Layers Layers Layers Layers Layers
// Layers Layers Layers Layers Layers Layers Layers Layers Layers Layers Layers
////////////////////////////////////////////////////////////////////////////////


Patterns "input" = {
   patternType    = "DROP";
   dropSpeed      = 1;    //Radius expands dropSpeed pixles per timestep
   dropPeriod     = -1;   //-1 for random period, otherwise, number of frames inbetween drops
   dropRandomMax  = 90;   //Max random periods for each drop, 20 default
   dropRandomMin  = 30;   //Min random periods for each drop, 5 default
   halfNeutral    = true;
   startFrame     = 999999;
   //endFrame       = 1400;
   
   writeImages    = false;
   
   patternsOutputPath = "~/Documents/Work/LANL/workspace/iHouse/output/sourcefiles";
   
   displayPeriod  = 1;
   writeStep      = 1;
   useImageBCflag = false;
   mirrorBCflag   = false;
   inverseFlag    = false;
   
   writeNonspikingActivity = true;
};


ANNLayer "scaled input" = {
    nxScale      = 1;
    nyScale      = 1;
    nf           = 1;
    marginWidth  = 20;
    mirrorBCflag = 1;
    spikingFlag  = false;
    writeStep    = -1.0;

    InitVType    = "ZeroV";

    VThresh      = -infinity;
    VMax         = infinity;
    VMin         = -infinity;
    writeNonspikingActivity = 1;
};


Retina "RetinaON" = {
    nxScale       = 1;
    nyScale       = 1;
    nf            = 1;
    marginWidth   = 24;
    writeStep     = -1.0;
    mirrorBCflag  = 0;
    spikingFlag   = true;  // false (no quotes) is translated to 0

    noiseOnFreq   = 200;   // Hz // Max poisson spiking rate when input is 255
    noiseOffFreq  = 20;    // Hz // Min poisson spiking rate when input is 0

    burstFreq     = 50;    // Hz // Everything coming into the retina should be burstin burstFreq times per sec
    burstDuration = 20;    // ms // Bursts last burstDuration ms

    //beginStim   = 1;       // Restrict stimulus to a window of time
    //endStim     = 50000;

    //no          = 1.0;
    Vrest         = 0.0;
    
    refractoryPeriod    = 0;
    absRefractoryPeriod = 0;
};


Retina "RetinaOFF" = {
    nxScale       = 1;
    nyScale       = 1;
    nf            = 1;
    
    marginWidth   = 24;
    writeStep     = -1.0;
    mirrorBCflag  = 0;
    spikingFlag   = true;  // false (no quotes) is translated to 0

    noiseOnFreq   = 200;   // Hz // Max poisson spiking rate when input is 255
    noiseOffFreq  = 20;    // Hz // Min poisson spiking rate when input is 0

    burstFreq     = 50;    // Hz // Everything coming into the retina should be burstin burstFreq times per sec
    burstDuration = 20;    // ms // Bursts last burstDuration ms

    //beginStim   = 1;       // Restrict stimulus to a window of time
    //endStim     = 50000;
    
    //no = 1.0;
    Vrest = 0.0;
    
    refractoryPeriod    = 0;
    absRefractoryPeriod = 0;
};


LCALIFLayer "lif" = {
   tauLCA           = 200;
   tauTHR           = 20000;
   targetRate       = 1;
   nxScale          = 1;		
   nyScale          = 1;		
   nf               = 1;       	// one feature for now
   spikingFlag      = 1;       	// the whole idea 
   marginWidth      = 0;     	// for MPI running - based on lateral radius and jitter
   writeStep        = 1.0;
   mirrorBCflag     = 0;     	// mirroring boundary conditions
   InitVType        = "ConstantV";
   method           = "beginning";
   valueV			= -70.0;
   Vrest            = -70.0;    
   restart          = 0.0;     	// from graylast
   Vexc             = 0.0;     	// reversal potential 
   Vinh             = -75.0;   	// chloride channel
   VinhB            = -90.0;   	// potassium reversal
   tau              = 10.0;    	// intrinsic leak membrane time constant (max)
   tauE             = 1.0;     	// how long glutamine stays bound
   tauI             = 5.0;     	// how long GABA stays bound
   tauIB            = 10.0;    	// inhibitory potassium channel 
   VthRest          = -55.0;   	// firing threshold 15 mV above rest
   tauVth           = 10.0;    	// 10.0 relative refractory period
   deltaVth         = 5.0;     	// jump of threshold when firing
   noiseAmpE        = 1;     	// 0.5 1 means conductance is equal to lead conductance  gjk
   noiseAmpI        = 1;     	// 0,5 "twice as easy for the membrane capacitance to discharge" gjk
   noiseAmpIB       = 0.0;     	// no noise here 
   noiseFreqE       = 250.;    	// spontaneous transmitter release/channel openings
   noiseFreqI       = 250.;    	// correlation to time step size !!!
   noiseFreqIB      =   0.;    	// should be scaled by the time constant - look at LIF model
   dynVthScale      = 15.0;     // Scale for the change of dynVthRest. Must be positive; defaults to VthRest - Vrest
};


////////////////////////////////////////////////////////////////////////////////
// Connections Connections Connections Connections Connections Connections
// Connections Connections Connections Connections Connections Connections
// Connections Connections Connections Connections Connections Connections
// Connections Connections Connections Connections Connections Connections
// Connections Connections Connections Connections Connections Connections
// Connections Connections Connections Connections Connections Connections
////////////////////////////////////////////////////////////////////////////////

KernelConn "input to scaled input" = {
    preLayerName  = "input";
    postLayerName = "scaled input";
    nxp           = 1;
    nyp           = 1;
    nfp           = 1;
    channelCode   = 0;
    delay         = 0;

    numAxonalArbors  = 1;
    writeStep        = -1;
    initFromLastFlag = 0;
    
    weightInitType = "OneToOneWeights";
    weightInit     = 2.0;
      
    normalize              = false;
    symmetrizeWeights      = false;
    plasticityFlag         = false;
    stochasticReleaseFlag  = false;
    writeCompressedWeights = true;
    selfFlag               = false;
    shrinkPatches          = false;
};

KernelConn "ImagetoRetinaONCenter" = {
   preLayerName  = "scaled input";
   postLayerName = "RetinaON";
   channelCode   = 0;
   nxp           = 1; 
   nyp           = 1; 
   nfp           = 1;
   delay         = 0;
   
   stdpFlag         = 0;
   initFromLastFlag = 0;  
   writeStep        = -1;

   weightInitType = "InitGauss2DWeights";
   aspect         = 1;
   sigma          = 1;
   rMax           = 1;   
   strength       = 50;

   normalize             = false;
   normalize_zero_offset = 0.0;
   normalize_max 	     = 0.0;
   symmetrizeWeights     = 0;
};

KernelConn "ImagetoRetinaONSurround" = {
   preLayerName  = "scaled input";
   postLayerName = "RetinaON";
   channelCode   = 1;
   nxp           = 3;
   nyp           = 3;
   nfp           = 1;
   delay         = 0;

   stdpFlag         = 0;
   initFromLastFlag = 0;
   writeStep        = -1;

   weightInitType = "InitGauss2DWeights";
   aspect         = 1;
   sigma          = 1;
   rMax           = 5;
   rMin           = 0;
   strength       = 50;

   normalize             = true;
   normalize_zero_offset = 0.0;
   normalize_max         = 0.0;
   symmetrizeWeights     = 0;
};


KernelConn "ImagetoRetinaOFFCenter" = {
   preLayerName     = "scaled input";
   postLayerName    = "RetinaOFF";
   channelCode      = 1;
   nxp              = 1; 
   nyp              = 1; 
   nfp              = 1;
   delay            = 0;
   
   stdpFlag         = 0;
   initFromLastFlag = 0;  
   writeStep        = -1;

   weightInitType   = "InitGauss2DWeights";
   aspect           = 1;
   sigma            = 1;
   rMax             = 1;   
   strength         = 50;

   normalize             = false;
   normalize_zero_offset = 0.0;
   normalize_max 	     = 0.0;
   symmetrizeWeights     = 0;
};


KernelConn "ImagetoRetinaOFFSurround" = {
   preLayerName     = "scaled input";
   postLayerName    = "RetinaOFF";
   channelCode      = 0;
   nxp              = 3;
   nyp              = 3;
   nfp              = 1;
   delay            = 0;

   stdpFlag         = 0;
   initFromLastFlag = 0;
   writeStep        = -1;

   weightInitType   = "InitGauss2DWeights";
   aspect           = 1;
   sigma            = 1;
   rMax             = 5;
   rMin             = 0;
   strength              = 50;

   normalize             = true;
   normalize_zero_offset = 0.0;
   normalize_max         = 0.0;
   symmetrizeWeights     = 0;
};


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// STDP connections      STDP connections      STDP connections      STDP connections      STDP connections      STDP connections      
// STDP connections      STDP connections      STDP connections      STDP connections      STDP connections      STDP connections      
// STDP connections      STDP connections      STDP connections      STDP connections      STDP connections      STDP connections      
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
OjaSTDPConn "RetinaONtoS1" = {
   preLayerName  = "RetinaON";
   postLayerName = "lif";
   nxp           = 5;
   nyp           = 5;
   nfp           = 1;
   channelCode   = 0;
   stdpFlag      = 1;
   delay         = 0.0;
   
   initFromLastFlag = 0;  // 1;  /dr/ restart
   
   writeStep = 200;
   
   normalize             = false;
   normalize_max         = true;
   normalize_zero_offset = 0.0;
   
   strength        = 10;
   ampLTP          = 0.02; //amp sets ratio of LTP to LTD, or how much more/less effective LTP is than LTD. LTP/LTD should ~= 0.9 per Gar
   ampLTD          = 0.0071;
   tauLTP          = 8.4;
   tauLTD          = 33.7;
   tauLTPLong      = 84;
   tauLTDLong      = 337;
   weightDecay     = 0;
   ojaScale        = 0;
   STDPScale       = 1;
   dWMax           = 10;
   wMin            = 0.001;
   wMax 	       = 5;
   numAxonalArbors = 1;
   
   combine_dW_with_W_flag = false;
   selfFlag               = false;

   weightInitType = "UniformRandomWeight";
   weightInit     = 0.001;
   wMaxInit       = 0.5;
   wMinInit       = 0.005;
   
   symmetrizeWeights = 0;
   
   plasticityFlag         = true;
   shrinkPatches          = false;
   writeCompressedWeights = 0.0;
   stochasticReleaseFlag  = false;
   weightUpdatePeriod     = 1.0;
   
   synscalingFlag = 0;
   synscaling_v   = 5;
};


OjaSTDPConn "RetinaOFFtoS1" = {
   preLayerName = "RetinaOFF";
   postLayerName = "lif";
   nxp           = 5;
   nyp           = 5;
   nfp           = 1;
   channelCode   = 0;
   stdpFlag      = 1;
   delay         = 0.0;
   
   initFromLastFlag = 0;  // 1;  /dr/ restart
   
   writeStep = 200;
   
   normalize             = false;
   normalize_max         = true;
   normalize_zero_offset = 0.0;
   
   strength        = 10;
   ampLTP          = 0.02; //amp sets ratio of LTP to LTD, or how much more/less effective LTP is than LTD. LTP/LTD should ~= 0.9 per Gar
   ampLTD          = 0.0071;
   tauLTP          = 8.4;
   tauLTD          = 33.7;
   tauLTPLong      = 84;
   tauLTDLong      = 337;
   weightDecay     = 0;
   ojaScale        = 0;
   STDPScale       = 1;
   dWMax           = 10;
   wMin            = 0.001;
   wMax 	       = 5;
   numAxonalArbors = 1;
   
   combine_dW_with_W_flag = false;
   selfFlag               = false;

   weightInitType = "UniformRandomWeight";
   weightInit     = 0.001;
   wMaxInit       = 0.5;
   wMinInit       = 0.005;
   
   symmetrizeWeights = 0;
   
   plasticityFlag         = true;
   shrinkPatches          = false;
   writeCompressedWeights = 0.0;
   stochasticReleaseFlag  = false;
   weightUpdatePeriod     = 1.0;
   
   synscalingFlag = 0;
   synscaling_v   = 5;
};
