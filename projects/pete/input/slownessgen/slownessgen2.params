// slownessgen.params
//     input parameters file for a 3-layer generative model with pooling
//     slowness dynamics and pooling between simple and complex layers.
//     Uses log-lateral competition between features at the S- and C- layers
//     Image space is eight horizontal and eight vertical lines.

debugParsing = false;

HyPerCol "column" = {
    nx = 8;
    ny = 8;
    dt = 1;
    randomSeed = 1;
    numSteps = 200000;
    outputPath = "output/slownessgen/";
    filenamesContainLayerNames = false;
    outputNamesOfLayersAndConns = "LayerAndConnNames.txt";
    progressStep = 2000;
    checkpointRead = true;
    checkpointReadDir = "output/slownessgen/checkpoints/";
    checkpointReadDirIndex = 180000;
    checkpointWrite = false;
};

// 19 layers:
//           0 Input                                            Patterns
//           1 Retina                                           Retina
//           2 AnaRetina                                        ANNLayer
//           3 CataSimple Pooling 1                     bias 1  PoolingANNLayer
//           4 CataSimple Pooling 2                     bias -1 PoolingANNLayer
//           5 CataSimple Layer                                 ANNLayer
//           6 Simple Layer                                     LogLatWTAGenLayer
//           7 Simple Increment Pre                             IncrementLayer
//           8 Simple Increment Post                            ANNLayer
//           9 AnaSimple Layer                                  ANNLayer
//          10 AnaSimple Pooling 1                      bias 1  PoolingANNLayer
//          11 AnaSimple Pooling 2                      bias -1 PoolingANNLayer
//          12 CataComplex Pooling 1                    bias 1  PoolingANNLayer
//          13 CataComplex Pooling 2                    bias -1 PoolingANNLayer
//          14 CataComplex Layer                                ANNLayer
//          15 Complex Layer                                    LogLatWTAGenLayer
//  The last four layers accumulate quantities whose L^2 norm appears in the energy
//          16 Energy CataSimple Layer                          PtwiseProductLayer
//          17 Energy AnaSimple Layer                           PtwiseProductLayer
//          18 Energy CataComplex Layer                         PtwiseProductLayer

Patterns "Input" = {
    patternType = "BARS";

    nxScale = 1;
    nyScale = 1;
    nf = 1;
    marginWidth = 0;
    writeStep = -1;
    spikingFlag = false;
    writeNonspikingActivity = true;
    mirrorBCflag = false;
    restart = false;
    writeImages = false;
    orientation = "VERTICAL";
    movementType = "RANDOMJUMP";
    width = 1;
    height = 1;
    wavelengthHoriz = 8;
    wavelengthVert = 8;
    pMove = 0.2;
    pSwitch = 0.05;
    movementSpeed = 1;
    writePosition = false;
    maxValue = 0.35355339;
    displayPeriod = 500;
};

Retina "Retina" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 1;
    marginWidth = 0;
    writeStep = 1.0;
    mirrorBCflag = 1;
    spikingFlag = 0;
    writeNonspikingActivity = 1;

    poissonEdgeProb = 1;
    poissonBlankProb = 0;
    burstFreq = 1;
    burstDuration = 40000;

    beginStim = 1;
    endStim = 40000;
};

ANNLayer "AnaRetina" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 1;
    marginWidth = 0;
    writeStep = -1;
    mirrorBCflag = 1;
    spikingFlag = 0;
    writeNonspikingActivity = -1;

    InitVType = "ConstantV";
    valueV = 0.0;

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
};

PoolingANNLayer "CataSimple Pooling 1" = {
    restart = 0;
    nxScale = 0.125;
    nyScale = 0.125;
    nf = 16;
    marginWidth = 0;
    writeStep = -1;
    mirrorBCflag = 1;
    spikingFlag = 0;
    writeNonspikingActivity = -1;

    InitVType = "ConstantV";
    valueV = 0.0;

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
    
    bias = 1;
};

PoolingANNLayer "CataSimple Pooling 2" = {
    restart = 0;
    nxScale = 0.125;
    nyScale = 0.125;
    nf = 16;
    marginWidth = 0;
    writeStep = -1;
    mirrorBCflag = 1;
    spikingFlag = 0;
    writeNonspikingActivity = -1;

    InitVType = "ConstantV";
    valueV = 0.0;

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
    
    bias = -1;
};

ANNLayer "CataSimple Layer" = {
    restart = 0;
    nxScale = 0.125;
    nyScale = 0.125;
    nf = 16;
    marginWidth = 0;
    writeStep = -1;
    mirrorBCflag = 1;
    spikingFlag = 0;
    writeNonspikingActivity = -1;

    InitVType = "ConstantV";
    valueV = 0.0;

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
};

LogLatWTAGenLayer "Simple Layer" = {
    restart = 0;
    nxScale = 0.125;
    nyScale = 0.125;
    nf = 16;
    marginWidth = 0;
    writeStep = 1.0;
    mirrorBCflag = 1;
    spikingFlag = 0;
    writeNonspikingActivity = 1;

    InitVType = "ConstantV";
    valueV = 0.0;

    AMax = infinity;
    VThresh = 0;
    AMin = 0;

    relaxation = 1E-2;
    activityThreshold = 0;
    auxChannelCoeff = -0.5;
    persistence = 0;
    
    sparsityTermCoefficient = 0.5;
};

IncrementLayer "Simple Increment Pre" = {
    restart = 0;
    nxScale = 0.125;
    nyScale = 0.125;
    nf = 16;
    marginWidth = 0;
    writeStep = 1.0;
    mirrorBCflag = false;
    spikingFlag = false;
    writeNonspikingActivity = 1;

    InitVType = "ConstantV";
    valueV = 0.0;

    displayPeriod = 500;
    firstUpdateTime = 4; 
};

ANNLayer "Simple Increment Post" = {
    restart = 0;
    nxScale = 0.125;
    nyScale = 0.125;
    nf = 2;
    marginWidth = 0;
    writeStep = 1.0;
    mirrorBCflag = false;
    spikingFlag = false;
    writeNonspikingActivity = 1;

    InitVType = "ConstantV";
    valueV = 0.0;

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
};

ANNLayer "AnaSimple Layer" = {
    restart = 0;
    nxScale = 0.125;
    nyScale = 0.125;
    nf = 16;
    marginWidth = 0;
    writeStep = -1;
    mirrorBCflag = 1;
    spikingFlag = 0;
    writeNonspikingActivity = -1;

    InitVType = "ConstantV";
    valueV = 0.0;

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
};

PoolingANNLayer "AnaSimple Pooling 1" = {
    restart = 0;
    nxScale = 0.125;
    nyScale = 0.125;
    nf = 16;
    marginWidth = 0;
    writeStep = -1;
    mirrorBCflag = 1;
    spikingFlag = 0;
    writeNonspikingActivity = -1;

    InitVType = "ConstantV";
    valueV = 0.0;

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
    
    bias = 1;
};

PoolingANNLayer "AnaSimple Pooling 2" = {
    restart = 0;
    nxScale = 0.125;
    nyScale = 0.125;
    nf = 16;
    marginWidth = 0;
    writeStep = -1;
    mirrorBCflag = 1;
    spikingFlag = 0;
    writeNonspikingActivity = -1;

    InitVType = "ConstantV";
    valueV = 0.0;

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
    
    bias = -1;
};

PoolingANNLayer "CataComplex Pooling 1" = {
    restart = 0;
    nxScale = 0.125;
    nyScale = 0.125;
    nf = 2;
    marginWidth = 0;
    writeStep = -1;
    mirrorBCflag = 1;
    spikingFlag = 0;
    writeNonspikingActivity = -1;

    InitVType = "ConstantV";
    valueV = 0.0;

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
    
    bias = 1;
};

PoolingANNLayer "CataComplex Pooling 2" = {
    restart = 0;
    nxScale = 0.125;
    nyScale = 0.125;
    nf = 2;
    marginWidth = 0;
    writeStep = -1;
    mirrorBCflag = 1;
    spikingFlag = 0;
    writeNonspikingActivity = -1;

    InitVType = "ConstantV";
    valueV = 0.0;

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
    
    bias = -1;
};

ANNLayer "CataComplex Layer" = {
    restart = 0;
    nxScale = 0.125;
    nyScale = 0.125;
    nf = 2;
    marginWidth = 0;
    writeStep = -1;
    mirrorBCflag = 1;
    spikingFlag = 0;
    writeNonspikingActivity = -1;

    InitVType = "ConstantV";
    valueV = 0.0;

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
};

LogLatWTAGenLayer "Complex Layer" = {
    restart = 0;
    nxScale = 0.125;
    nyScale = 0.125;
    nf = 2;
    marginWidth = 0;
    writeStep = 1.0;
    mirrorBCflag = 1;
    spikingFlag = 0;
    writeNonspikingActivity = -1;

    InitVType = "ConstantV";
    valueV = 0.0;
    
    AMax = infinity;
    VThresh = 0;
    AMin = 0;

    relaxation = 1E-2;
    activityThreshold = 0;
    auxChannelCoeff = -0.5;
    persistence = 0;
    
    sparsityTermCoefficient = 0.5;
};

PtwiseProductLayer "Energy CataSimple Layer" = {
    restart = 0;
    nxScale = 0.125;
    nyScale = 0.125;
    nf = 16;
    marginWidth = 0;
    writeStep = -1;
    mirrorBCflag = 1;
    spikingFlag = 0;
    writeNonspikingActivity = -1;

    InitVType = "ConstantV";
    valueV = 0.0;

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
};

PtwiseProductLayer "Energy AnaSimple Layer" = {
    restart = 0;
    nxScale = 0.125;
    nyScale = 0.125;
    nf = 16;
    marginWidth = 0;
    writeStep = -1;
    mirrorBCflag = 1;
    spikingFlag = 0;
    writeNonspikingActivity = -1;

    InitVType = "ConstantV";
    valueV = 0.0;

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
};

PtwiseProductLayer "Energy CataComplex Layer" = {
    restart = 0;
    nxScale = 0.125;
    nyScale = 0.125;
    nf = 2;
    marginWidth = 0;
    writeStep = -1;
    mirrorBCflag = 1;
    spikingFlag = 0;
    writeNonspikingActivity = -1;

    InitVType = "ConstantV";
    valueV = 0.0;

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
};


// 38 connections:
//           0 Input to Retina                          +       IdentConn
//           1 AnaRetina to Simple Layer                    + (A)   PoolingGenConn
//           2 Retina to AnaRetina                          +       IdentConn
//           3 Retina to CataSimple Layer                   - (A)   CloneKernelConn
//           4 CataSimple Pooling 1 to Simple Layer         -       IdentConn
//           5 CataSimple Pooling 2 to Simple Layer         -       IdentConn
//           6 CataSimple Layer to CataSimple Pooling 1     -       IdentConn
//           7 CataSimple Layer to CataSimple Pooling 2     -       IdentConn
//           8 AnaSimple Pooling 1 to Simple Layer          -       IdentConn
//           9 AnaSimple Pooling 1 to Complex Layer         + (B)   PoolingGenConn
//          10 AnaSimple Pooling 2 to Simple Layer          -       IdentConn
//          11 Simple Layer to AnaRetina                    - (A^T) TransposeConn
// Note: Because of the update rule for A, it is more natural to define
//       A^T as a connection from CataSimple Pooling 1 to Retina.  However,
//       in this training run there is no connection.  If doing top-down
//       reconstruction, there will be and it would make sense to use
//       A^T there and define Simple Layer to AnaRetina with a CloneKernelConn
//       of that connection.
//          12 Simple Layer to CataSimple Pooling 1         +       IdentConn
//          13 Simple Layer to CataSimple Pooling 2         +       IdentConn
//          14 Simple Layer to CataSimple Layer             +       IdentConn
//          15 Simple Layer to Simple Increment Pre         +       IdentConn
//          15 Simple Layer to AnaSimple Layer              +       IdentConn
//          16 Simple Layer to AnaSimple Pooling 1          +       IdentConn
//          17 Simple Layer to AnaSimple Pooling 2          +       IdentConn
//          18 Simple Layer to CataComplex Layer            - (B)   CloneKernelConn
//          19 Simple Increment Pre to Simple Increment Post + (B)  CloneKernelConn
//          20 Simple Increment Post to Simple Layer        - (B^T) TransposeConn
//          21 AnaSimple Layer to AnaSimple Pooling 1       -       IdentConn
//          22 AnaSimple Layer to AnaSimple Pooling 2       -       IdentConn
//          23 CataComplex Pooling 1 to Simple Layer        + (B^T) CloneKernelConn
//          24 CataComplex Pooling 1 to Complex Layer       -       IdentConn
//          25 CataComplex Pooling 2 to Complex Layer       -       IdentConn
//          26 CataComplex Layer to CataComplex Pooling 1   -       IdentConn
//          27 CataComplex Layer to CataComplex Pooling 2   -       IdentConn
//          28 Complex Layer to AnaSimple Layer             - (B^T) CloneKernelConn
//          29 Complex Layer to CataComplex Pooling 1       +       IdentConn
//          30 Complex Layer to CataComplex Pooling 2       +       IdentConn
//          31 Complex Layer to CataComplex Layer           +       IdentConn
// The last six connections are to the energy layers
//          32 Simple Layer to Energy CataSimple Layer      +       IdentConn
//          33 CataSimple Layer to Energy CataSimple Layer  -       IdentConn
//          34 Simple Layer to Energy AnaSimple Layer       +       IdentConn
//          35 AnaSimple Layer to Energy AnaSimple Layer    -       IdentConn
//          36 Complex Layer to Energy CataComplex Layer    +       IdentConn
//          37 CataCompex Layer to Energy CataComplex Layer -       IdentConn

IdentConn "Input to Retina" = {
    preLayerName = "Input";
    postLayerName = "Retina";
    channelCode = 0;
    writeStep = -1;
    delay = 0;
};

PoolingGenConn "AnaRetina to Simple Layer" = {
    preLayerName = "AnaRetina";
    postLayerName = "Simple Layer";
    secondaryPreLayerName = "Retina";
    secondaryPostLayerName = "CataSimple Pooling 1";
    channelCode = 0;
    nxp = 1;
    nyp = 1;
    nfp = 16;
    numAxonalArbors = 1;
    writeStep = 1.0;
    writeCompressedWeights = false;
    delay = 0;
    stochasticReleaseFlag = false;
    shrinkPatches = false;
    weightInitType = "UniformRandomWeight";
    wMinInit = 0;
    wMaxInit = 1;
    // weightInitType = "FileWeight";
    // initWeightsFile = "input/slownessgen/correctA.pvp";
    normalize = 1;
    plasticityFlag = true;
    symmetrizeWeights = 0;
    weightUpdatePeriod = 50;
    relaxation = 5E-2;
    nonnegConstraintFlag = 1;
    normalizeMethod = 3;
    normalizeConstant = 0.5;
};

IdentConn "Retina to AnaRetina" = {
    preLayerName = "Retina";
    postLayerName = "AnaRetina";
    channelCode = 0;
    writeStep = -1;
    delay = 0;
};

CloneKernelConn "Retina to CataSimple Layer" = {
    preLayerName = "Retina";
    postLayerName = "CataSimple Layer";
    originalConnName = "AnaRetina to Simple Layer";
    channelCode = 1;
    writeStep = -1;
    writeCompressedWeights = false;
    delay = 0;
};

IdentConn "CataSimple Pooling 1 to Simple Layer" = {
    preLayerName = "CataSimple Pooling 1";
    postLayerName = "Simple Layer";
    channelCode = 1;
    writeStep = -1;
    delay = 0;
};

IdentConn "CataSimple Pooling 2 to Simple Layer" = {
    preLayerName = "CataSimple Pooling 2";
    postLayerName = "Simple Layer";
    channelCode = 1;
    writeStep = -1;
    delay = 0;
};

IdentConn "CataSimple Layer to CataSimple Pooling 1" = {
    preLayerName = "CataSimple Layer";
    postLayerName = "CataSimple Pooling 1";
    channelCode = 1;
    writeStep = -1;
    delay = 0;
};

IdentConn "CataSimple Layer to CataSimple Pooling 2" = {
    preLayerName = "CataSimple Layer";
    postLayerName = "CataSimple Pooling 2";
    channelCode = 1;
    writeStep = -1;
    delay = 0;
};

IdentConn "AnaSimple Pooling 1 to Simple Layer" = {
    preLayerName = "AnaSimple Pooling 1";
    postLayerName = "Simple Layer";
    channelCode = 1;
    writeStep = -1;
    delay = 0;
};

PoolingGenConn "AnaSimple Pooling 1 to Complex Layer" = {
    preLayerName = "AnaSimple Pooling 1";
    postLayerName = "Complex Layer";
    secondaryPreLayerName = "Simple Layer";
    secondaryPostLayerName = "CataComplex Pooling 1";
    channelCode = 0;
    nxp = 1;
    nyp = 1;
    nfp = 2;
    numAxonalArbors = 1;
    writeStep = 1.0;
    writeCompressedWeights = false;
    delay = 0;
    stochasticReleaseFlag = false;
    shrinkPatches = false;
    weightInitType = "UniformRandomWeight";
    wMinInit = 0;
    wMaxInit = 1;
    normalize = 1;
    plasticityFlag = true;
    slownessFlag = true;
    slownessPre = "Simple Increment Pre";
    slownessPost = "Simple Increment Post";
    symmetrizeWeights = 0;
    weightUpdatePeriod = 50;
    relaxation = 5E-2;
    nonnegConstraintFlag = 1;
    normalizeMethod = 3; // 2;
    normalizeConstant = 1; // 2.8284271;
};

IdentConn "AnaSimple Pooling 2 to Simple Layer" = {
    preLayerName = "AnaSimple Pooling 2";
    postLayerName = "Simple Layer";
    channelCode = 1;
    writeStep = -1;
    delay = 0;
};

TransposeConn "Simple Layer to AnaRetina" = {
    preLayerName = "Simple Layer";
    postLayerName = "AnaRetina";
    originalConnName = "Retina to CataSimple Layer";
    channelCode = 1;
    writeStep = -1;
    writeCompressedWeights = true;
    delay = 0;
    stochasticReleaseFlag = false;
};

IdentConn "Simple Layer to CataSimple Pooling 1" = {
    preLayerName = "Simple Layer";
    postLayerName = "CataSimple Pooling 1";
    channelCode = 0;
    writeStep = -1;
    delay = 0;
};

IdentConn "Simple Layer to CataSimple Pooling 2" = {
    preLayerName = "Simple Layer";
    postLayerName = "CataSimple Pooling 2";
    channelCode = 0;
    writeStep = -1;
    delay = 0;
};

IdentConn "Simple Layer to CataSimple Layer" = {
    preLayerName = "Simple Layer";
    postLayerName = "CataSimple Layer";
    channelCode = 0;
    writeStep = -1;
    delay = 0;
};

IdentConn "Simple Layer to Simple Increment Pre" = {
    preLayerName = "Simple Layer";
    postLayerName = "Simple Increment Pre";
    channelCode = 0;
    writeStep = -1;
    delay = 0;
};

IdentConn "Simple Layer to AnaSimple Layer" = {
    preLayerName = "Simple Layer";
    postLayerName = "AnaSimple Layer";
    channelCode = 0;
    writeStep = -1;
    delay = 0;
};

IdentConn "Simple Layer to AnaSimple Pooling 1" = {
    preLayerName = "Simple Layer";
    postLayerName = "AnaSimple Pooling 1";
    channelCode = 0;
    writeStep = -1;
    delay = 0;
};

IdentConn "Simple Layer to AnaSimple Pooling 2" = {
    preLayerName = "Simple Layer";
    postLayerName = "AnaSimple Pooling 2";
    channelCode = 0;
    writeStep = -1;
    delay = 0;
};

CloneKernelConn "Simple Layer to CataComplex Layer" = {
    preLayerName = "Simple Layer";
    postLayerName = "CataComplex Layer";
    originalConnName = "AnaSimple Pooling 1 to Complex Layer";
    channelCode = 1;
    writeStep = -1;
    writeCompressedWeights = false;
    delay = 0;
    stochasticReleaseFlag = false;
};

CloneKernelConn "Simple Increment Pre to Simple Increment Post" = {
    preLayerName = "Simple Increment Pre";
    postLayerName = "Simple Increment Post";
    originalConnName = "AnaSimple Pooling 1 to Complex Layer";
    channelCode = 0;
    writeStep = -1;
    writeCompressedWeights = false;
    delay = 0;
    stochasticReleaseFlag = false;
};

TransposeConn "Simple Increment Post to Simple Layer" = {
    preLayerName = "Simple Increment Post";
    postLayerName = "Simple Layer";
    originalConnName = "AnaSimple Pooling 1 to Complex Layer";
    channelCode = 1;
    writeStep = -1;
    writeCompressedWeights = false;
    delay = 0;
    stochasticReleaseFlag = false;
};

IdentConn "AnaSimple Layer to AnaSimple Pooling 1" = {
    preLayerName = "AnaSimple Layer";
    postLayerName = "AnaSimple Pooling 1";
    channelCode = 1;
    writeStep = -1;
    delay = 0;
};

IdentConn "AnaSimple Layer to AnaSimple Pooling 2" = {
    preLayerName = "AnaSimple Layer";
    postLayerName = "AnaSimple Pooling 2";
    channelCode = 1;
    writeStep = -1;
    delay = 0;
};

CloneKernelConn "CataComplex Pooling 1 to Simple Layer" = {
    preLayerName = "CataComplex Pooling 1";
    postLayerName = "Simple Layer";
    originalConnName = "Simple Increment Post to Simple Layer";
    channelCode = 0;
    writeStep = -1;
    writeCompressedWeights = false;
    delay = 0;
    stochasticReleaseFlag = false;
};

IdentConn "CataComplex Pooling 1 to Complex Layer" = {
    preLayerName = "CataComplex Pooling 1";
    postLayerName = "Complex Layer";
    channelCode = 1;
    writeStep = -1;
    delay = 0;
};

IdentConn "CataComplex Pooling 2 to Complex Layer" = {
    preLayerName = "CataComplex Pooling 2";
    postLayerName = "Complex Layer";
    channelCode = 1;
    writeStep = -1;
    delay = 0;
};

IdentConn "CataComplex Layer to CataComplex Pooling 1" = {
    preLayerName = "CataComplex Layer";
    postLayerName = "CataComplex Pooling 1";
    channelCode = 1;
    writeStep = -1;
    delay = 0;
};

IdentConn "CataComplex Layer to CataComplex Pooling 2" = {
    preLayerName = "CataComplex Layer";
    postLayerName = "CataComplex Pooling 2";
    channelCode = 1;
    writeStep = -1;
    delay = 0;
};

CloneKernelConn "Complex Layer to AnaSimple Layer" = {
    preLayerName = "Complex Layer";
    postLayerName = "AnaSimple Layer";
    originalConnName = "Simple Increment Post to Simple Layer";
    channelCode = 1;
    writeStep = -1;
    writeCompressedWeights = false;
    delay = 0;
    stochasticReleaseFlag = false;
};

IdentConn "Complex Layer to CataComplex Pooling 1" = {
    preLayerName = "Complex Layer";
    postLayerName = "CataComplex Pooling 1";
    channelCode = 0;
    writeStep = -1;
    delay = 0;
};

IdentConn "Complex Layer to CataComplex Pooling 2" = {
    preLayerName = "Complex Layer";
    postLayerName = "CataComplex Pooling 2";
    channelCode = 0;
    writeStep = -1;
    delay = 0;
};

IdentConn "Complex Layer to CataComplex Layer" = {
    preLayerName = "Complex Layer";
    postLayerName = "CataComplex Layer";
    channelCode = 0;
    writeStep = -1;
    delay = 0;
};

IdentConn "Simple Layer to Energy CataSimple Layer" = {
    preLayerName = "Simple Layer";
    postLayerName = "Energy CataSimple Layer";
    channelCode = 0;
    writeStep = -1;
    delay = 0;
};

IdentConn "CataSimple Layer to Energy CataSimple Layer" = {
    preLayerName = "CataSimple Layer";
    postLayerName = "Energy CataSimple Layer";
    channelCode = 1;
    writeStep = -1;
    delay = 0;
};

IdentConn "Simple Layer to Energy AnaSimple Layer" = {
    preLayerName = "Simple Layer";
    postLayerName = "Energy AnaSimple Layer";
    channelCode = 0;
    writeStep = -1;
    delay = 0;
};

IdentConn "AnaSimple Layer to Energy AnaSimple Layer" = {
    preLayerName = "AnaSimple Layer";
    postLayerName = "Energy AnaSimple Layer";
    channelCode = 1;
    writeStep = -1;
    delay = 0;
};

IdentConn "Complex Layer to Energy CataComplex Layer" = {
    preLayerName = "Complex Layer";
    postLayerName = "Energy CataComplex Layer";
    channelCode = 0;
    writeStep = -1;
    delay = 0;
};

IdentConn "CataComplex Layer to Energy CataComplex Layer" = {
    preLayerName = "CataComplex Layer";
    postLayerName = "Energy CataComplex Layer";
    channelCode = 1;
    writeStep = -1;
    delay = 0;
};

GenColProbe "Total Energy Probe" = {
    probeOutputFile = "TotalEnergy.txt";
};

L2NormProbe "AnaRetina Energy" = {
    targetLayer = "AnaRetina";
    parentGenColProbe = "Total Energy Probe";
    coeff = 1;
    probeOutputFile = "AnaRetina_Energy.txt";
};

L2NormProbe "CataSimple Layer Energy" = {
    targetLayer = "Energy CataSimple Layer";
    parentGenColProbe = "Total Energy Probe";
    coeff = 1;
    probeOutputFile = "CataSimple_Layer_Energy.txt";
};

L2NormProbe "AnaSimple Layer Energy" = {
    targetLayer = "Energy AnaSimple Layer";
    parentGenColProbe = "Total Energy Probe";
    coeff = 1;
    probeOutputFile = "AnaSimple_Layer_Energy.txt";
};

L2NormProbe "CataComplex Layer Energy" = {
    targetLayer = "Energy CataComplex Layer";
    parentGenColProbe = "Total Energy Probe";
    coeff = 1;
    probeOutputFile = "CataComplex_Layer_Energy.txt";
};

L2NormProbe "Slowness Term Penalty" = {
    targetLayer = "Simple Increment Post";
    parentGenColProbe = "Total Energy Probe";
    coeff = 1;
    probeOutputFile = "Slowness_Term_Penalty.txt";
};

LogLatWTAProbe "Simple Layer Lateral Competition Penalty" = {
    targetLayer = "Simple Layer";
    parentGenColProbe = "Total Energy Probe";
    coeff = 0.5;
    probeOutputFile = "Simple_Layer_LatCompPenalty.txt";
};

LogLatWTAProbe "Complex Layer Lateral Competition Penalty" = {
    targetLayer = "Complex Layer";
    parentGenColProbe = "Total Energy Probe";
    coeff = 0.5;
    probeOutputFile = "Complex_Layer_LatCompPenalty.txt";
};
