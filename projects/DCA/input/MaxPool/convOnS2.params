// PetaVision, svn repository version 10315 with local modifications, run at Thu Aug 27 12:17:30 2015
// Compiled with MPI and run using 1 rows and 1 columns.
// Compiled without OpenCL.
// Compiled with CUDA.
// Compiled with OpenMP parallel code and run using 64 threads.

HyPerCol "column" = {
    startTime                           = 0;
    dt                                  = 1;
    dtAdaptFlag                         = false;
    dtScaleMax                          = 1;
    dtScaleMin                          = 0.02;
    dtChangeMax                         = 0.01;
    dtChangeMin                         = -0.02;
    dtMinToleratedTimeScale             = 0.0001;
    stopTime                            = 256;
    progressInterval                    = 1000;
    writeProgressToErr                  = true;
    verifyWrites                        = false;
    outputPath                          = "~/mountData/MAX/convOnS2/";
    printParamsFilename                 = "convOnS2.params";
    randomSeed                          = 1234567890;
    nx                                  = 72;
    ny                                  = 72;
    filenamesContainLayerNames          = 1;
    filenamesContainConnectionNames     = 1;
    //initializeFromCheckpointDir         = "/nh/compneuro/Data/PASCAL_VOC/PASCAL_S1_128_S2_256_S3_512_DCNN/VOC2007_landscape12/Checkpoints/Checkpoint950000";
    defaultInitializeFromCheckpointFlag = false;
    checkpointWrite                     = false;
    deleteOlderCheckpoints              = false;
    suppressNonplasticCheckpoints       = false;
    writeTimescales                     = true;
    errorOnNotANumber                   = false;
};

//Movie layer that loops through neurons
MoviePvp "InputMovie" = {
    restart = 0; 
    nxScale = 1;
    nyScale = 1;
    inputPath = "~/mountData/MAX/deconvolveS2/a3_ImageDeconS2.pvp";
    nf = 3; //number of features. For a grey image, it's 1. For a color image, it could be either 1 or 3.
    phase = 0; //phase defines an order in which layers should be executed.
    writeStep = -1;  //-1 means doesn't write for log
    sparseLayer = false;
    mirrorBCflag = false;    //board condition flag
    useImageBCflag = false;
    inverseFlag = false; 
    normalizeLuminanceFlag = false;
    normalizeStdDev = false;
    writeImages = false;
    offsetX = 0;  //No offsets, as this layer is exactly the size of the image
    offsetY = 0;
    offsetAnchor = "cc"; //Neuron in center
    jitterFlag = false; // moving around like an eyeball. our eyeballs are not still even when we are gazing at something.
    batchMethod = "byImage";
    displayPeriod = 1;
};

RescaleLayer "Input" = {
    restart                         = false;
    originalLayerName               = "InputMovie";
    nxScale                         = 1;
    nyScale                         = 1;
    nf                              = 3;
    mirrorBCflag                    = true;
    //
    writeStep                       = -1;
    initialWriteTime                = 400;
    writeSparseActivity             = false;
    //
    rescaleMethod                   = "l2NoMean"; //Can be either meanstd or maxmin
    patchSize                       = 972; //18*18*3
    valueBC = 0;
    phase                           = 1;
};

ANNLayer "S1" = {
    nxScale                             = 0.5;
    nyScale                             = 0.5;
    nf                                  = 128;
    phase                               = 2;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    initializeFromCheckpointFlag        = false;
    InitVType                           = "ZeroV";
    triggerFlag                         = false;
    writeStep                           = 1;
    initialWriteTime                    = 1;
    sparseLayer                         = false;
    updateGpu                           = false;
    dataType                            = NULL;
    VThresh                             = 0; //Rectified
    AMin                                = 0;
    AMax                                = 3.40282e+38;
    AShift                              = 0;
    VWidth                              = 0;
    clearGSynInterval                   = 0;
};

ANNLayer "S1Pool" = {
    nxScale                             = 0.25;
    nyScale                             = 0.25;
    nf                                  = 128;
    phase                               = 3;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    initializeFromCheckpointFlag        = false;
    InitVType                           = "ZeroV";
    triggerFlag                         = false;
    writeStep                           = 1;
    initialWriteTime                    = 1;
    sparseLayer                         = false;
    updateGpu                           = false;
    dataType                            = NULL;
    VThresh                             = 0; //Rectified
    AMin                                = 0;
    AMax                                = 3.40282e+38;
    AShift                              = 0;
    VWidth                              = 0;
    clearGSynInterval                   = 0;
};

ANNLayer "S2" = {
    nxScale                             = 0.25;
    nyScale                             = 0.25;
    nf                                  = 256;
    phase                               = 4;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    initializeFromCheckpointFlag        = false;
    InitVType                           = "ZeroV";
    triggerFlag                         = false;
    writeStep                           = 1;
    initialWriteTime                    = 1;
    sparseLayer                         = false;
    updateGpu                           = false;
    dataType                            = NULL;
    VThresh                             = 0; //Rectified
    AMin                                = 0;
    AMax                                = 3.40282e+38;
    AShift                              = 0;
    VWidth                              = 0;
    clearGSynInterval                   = 0;
};

ANNLayer "S2Pool" = {
    nxScale                             = 0.125;
    nyScale                             = 0.125;
    nf                                  = 256;
    phase                               = 5;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    initializeFromCheckpointFlag        = false;
    InitVType                           = "ZeroV";
    triggerFlag                         = false;
    writeStep                           = 1;
    initialWriteTime                    = 1;
    sparseLayer                         = false;
    updateGpu                           = false;
    dataType                            = NULL;
    VThresh                             = 0; //Rectified
    AMin                                = 0;
    AMax                                = 3.40282e+38;
    AShift                              = 0;
    VWidth                              = 0;
    clearGSynInterval                   = 0;
};

ANNLayer "S3" = {
    nxScale                             = 0.125;
    nyScale                             = 0.125;
    nf                                  = 512;
    phase                               = 6;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    initializeFromCheckpointFlag        = false;
    InitVType                           = "ZeroV";
    triggerFlag                         = false;
    writeStep                           = 1;
    initialWriteTime                    = 1;
    sparseLayer                         = false;
    updateGpu                           = false;
    dataType                            = NULL;
    VThresh                             = 0;
    AMin                                = 0;
    AMax                                = 3.40282e+38;
    AShift                              = 0;
    VWidth                              = 0;
    clearGSynInterval                   = 0;
};

HyPerConn "S3ToS2Pool" = {
    preLayerName                        = "S3";
    postLayerName                       = "S2Pool";
    channelCode                         = -1;
    delay                               = [0.000000];
    numAxonalArbors                     = 1;
    plasticityFlag                      = false;
    convertRateToSpikeCount             = false;
    receiveGpu                          = false;
    sharedWeights                       = true;
    weightInitType                      = "FileWeight";
    initWeightsFile                     = "~/mountData/DCA/data/S3ToS2MaxPoolReconS3Error_W.pvp";
    useListOfArborFiles                 = false;
    combineWeightFiles                  = false;
    initializeFromCheckpointFlag        = false;
    updateGSynFromPostPerspective       = false;
    pvpatchAccumulateType               = "convolve";
    writeStep                           = -1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    combine_dW_with_W_flag              = false;
    nxp                                 = 5;
    nyp                                 = 5;
    shrinkPatches                       = false;
    normalizeMethod                     = "normalizeL2";
    strength                            = 1;
    normalizeArborsIndividually         = false;
    normalizeOnInitialize               = true;
    normalizeOnWeightUpdate             = true;
    rMinX                               = 0;
    rMinY                               = 0;
    nonnegativeConstraintFlag           = false;
    normalize_cutoff                    = 0;
    normalizeFromPostPerspective        = false;
    minL2NormTolerated                  = 0;
    dWMax                               = 10;
    keepKernelsSynchronized             = true;
    useMask                             = false;
    momentumTau                         = 400;
    momentumMethod                      = "viscosity";
    momentumDecay                       = 0;
    batchPeriod                         = 1;
};

TransposeConn "S2PoolToS3" = {
    preLayerName                        = "S2Pool";
    postLayerName                       = "S3";
    channelCode                         = 0;
    delay                               = [0.000000];
    convertRateToSpikeCount             = false;
    receiveGpu                          = true;
    updateGSynFromPostPerspective       = true;
    pvpatchAccumulateType               = "convolve";
    writeStep                           = -1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    gpuGroupIdx                         = -1;
    originalConnName                    = "S3ToS2Pool";
};

HyPerConn "S2ToS1Pool" = {
    preLayerName                        = "S2";
    postLayerName                       = "S1Pool";
    channelCode                         = -1;
    delay                               = [0.000000];
    numAxonalArbors                     = 1;
    plasticityFlag                      = false;
    convertRateToSpikeCount             = false;
    receiveGpu                          = false;
    sharedWeights                       = true;
    weightInitType                      = "FileWeight";
    initWeightsFile                     = "~/mountData/DCA/data/S2ToS1MaxPoolReconS2Error_W.pvp";
    useListOfArborFiles                 = false;
    combineWeightFiles                  = false;
    initializeFromCheckpointFlag        = false;
    updateGSynFromPostPerspective       = false;
    pvpatchAccumulateType               = "convolve";
    writeStep                           = -1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    combine_dW_with_W_flag              = false;
    nxp                                 = 5;
    nyp                                 = 5;
    shrinkPatches                       = false;
    normalizeMethod                     = "normalizeL2";
    strength                            = 1;
    normalizeArborsIndividually         = false;
    normalizeOnInitialize               = true;
    normalizeOnWeightUpdate             = true;
    rMinX                               = 0;
    rMinY                               = 0;
    nonnegativeConstraintFlag           = false;
    normalize_cutoff                    = 0;
    normalizeFromPostPerspective        = false;
    minL2NormTolerated                  = 0;
    dWMax                               = 10;
    keepKernelsSynchronized             = true;
    useMask                             = false;
    momentumTau                         = 400;
    momentumMethod                      = "viscosity";
    momentumDecay                       = 0;
    batchPeriod                         = 1;
};

TransposeConn "S1PoolToS2" = {
    preLayerName                        = "S1Pool";
    postLayerName                       = "S2";
    channelCode                         = 0;
    delay                               = [0.000000];
    convertRateToSpikeCount             = false;
    receiveGpu                          = true;
    updateGSynFromPostPerspective       = true;
    pvpatchAccumulateType               = "convolve";
    writeStep                           = -1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    gpuGroupIdx                         = -1;
    originalConnName                    = "S2ToS1Pool";
};

PoolingConn "S2ToS2Pool" = {
    preLayerName = "S2";
    postLayerName = "S2Pool";
    channelCode = 0; //Inhib b, doing nothing to input
    sharedWeights = true;
    nxp = 1; 
    nyp = 1; 
    numAxonalArbors = 1;
    writeStep = -1;
    initialWriteTime = 0.0;
    writeCompressedWeights = false;
    normalizeMethod                     = "none";
    shrinkPatches = false;
    writeCompressedCheckpoints = false;
    plasticityFlag = 0;
    pvpatchAccumulateType = "maxpooling";
    delay = 0;
    convertRateToSpikeCount = false;
    selfFlag = false;
    updateGSynFromPostPerspective = false;
    keepKernelsSynchronized             = true;
};

HyPerConn "S1ToInput" = {
    preLayerName                        = "S1";
    postLayerName                       = "Input";
    channelCode                         = -1;
    delay                               = [0.000000];
    numAxonalArbors                     = 1;
    plasticityFlag                      = false;
    convertRateToSpikeCount             = false;
    receiveGpu                          = false;
    sharedWeights                       = true;
    weightInitType                      = "FileWeight";
    initWeightsFile                     = "~/mountData/DCA/data/S1ToImageReconS1Error_W.pvp";
    useListOfArborFiles                 = false;
    combineWeightFiles                  = false;
    initializeFromCheckpointFlag        = false;
    updateGSynFromPostPerspective       = false;
    pvpatchAccumulateType               = "convolve";
    writeStep                           = -1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    combine_dW_with_W_flag              = false;
    nxp                                 = 18;
    nyp                                 = 18;
    shrinkPatches                       = false;
    normalizeMethod                     = "normalizeL2";
    strength                            = 1;
    normalizeArborsIndividually         = false;
    normalizeOnInitialize               = true;
    normalizeOnWeightUpdate             = true;
    rMinX                               = 0;
    rMinY                               = 0;
    nonnegativeConstraintFlag           = false;
    normalize_cutoff                    = 0;
    normalizeFromPostPerspective        = false;
    minL2NormTolerated                  = 0;
    dWMax                               = 10;
    keepKernelsSynchronized             = true;
    useMask                             = false;
};

TransposeConn "InputToS1" = {
    preLayerName                        = "Input";
    postLayerName                       = "S1";
    channelCode                         = 0;
    delay                               = [0.000000];
    convertRateToSpikeCount             = false;
    receiveGpu                          = true;
    updateGSynFromPostPerspective       = true;
    pvpatchAccumulateType               = "convolve";
    writeStep                           = -1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    gpuGroupIdx                         = -1;
    originalConnName                    = "S1ToInput";
};

PoolingConn "S1ToS1Pool" = {
    preLayerName = "S1";
    postLayerName = "S1Pool";
    channelCode = 0; //Inhib b, doing nothing to input
    sharedWeights = true;
    nxp = 1; 
    nyp = 1; 
    numAxonalArbors = 1;
    writeStep = -1;
    initialWriteTime = 0.0;
    writeCompressedWeights = false;
    normalizeMethod                     = "none";
    shrinkPatches = false;
    writeCompressedCheckpoints = false;
    plasticityFlag = 0;
    pvpatchAccumulateType = "maxpooling";
    delay = 0;
    convertRateToSpikeCount = false;
    selfFlag = false;
    updateGSynFromPostPerspective = false;
    keepKernelsSynchronized             = true;
};
