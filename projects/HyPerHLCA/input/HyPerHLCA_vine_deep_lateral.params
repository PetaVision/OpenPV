// // HyPerHLCA.params
//
// created by peteschultz: Sept 27, 2012, modified garkenyon, 1/20/13
//
//
// Implements the locally competitive algorithm described in
// Rozell et al., "Sparse Coding via Thresholding and Local Cometition
// in Neural Circuits," Neural Computation 20, 2526-2563 (2008).
///////////////////////////

debugParsing = true;

HyPerCol "column" = {
  nx = 480;  // vine value
  ny = 480;
  dt = 1.0;
  randomSeed = 1234567890;  // Must be at least 8 digits long.  // if not set here,  clock time is used to generate seed
  startTime = 0;
  numSteps = 46584000; // 116460 frames * 40 steps per frame * 10
  progressStep = 1000;
  outputPath = "/nh/compneuro/Data/vine/LCA/2013_01_24_2013_02_01/output_2013_01_24_2013_02_01_12x12x128_3x3_9x9x128_lambda_05X1_deep_lateral";
  filenamesContainLayerNames = true;
  filenamesContainConnectionNames = true;
  checkpointRead = false;
  checkpointReadDir = "/nh/compneuro/Data/vine/LCA/2013_01_24_2013_02_01/output_2013_01_24_2013_02_01_12x12x128_3x3_9x9x256_lambda_05X1_deep_lateral/Checkpoints";
  checkpointReadDirIndex = 8039600; //
  checkpointWrite = true;
  checkpointWriteDir = "/nh/compneuro/Data/vine/LCA/2013_01_24_2013_02_01/output_2013_01_24_2013_02_01_12x12x128_3x3_9x9x256_lambda_05X1_deep_lateral/Checkpoints";
  checkpointWriteStepInterval = 100000;
  deleteOlderCheckpoints = false;
  //suppressLastOutput = false;
  writeProgressToErr = true;
  outputNamesOfLayersAndConns = "LayerAndConnNames.txt";
};

//
// layers
//

Movie "Image" = {
  restart = 0;
  nxScale = 1;
  nyScale = 1;
  imageListPath = "/nh/compneuro/Data/vine/list/2013_01_24_2013_02_01/fileList_2013_01_24_2013_02_01.txt";
  nf = 3;
  writeStep = 2000.0;
  initialWriteTime = 1999.0;
  writeSparseActivity = false;
  displayPeriod = 40;
  start_frame_index = 1;
  skip_frame_index = 1;
  echoFramePathnameFlag = true;
  mirrorBCflag = true;
  jitterFlag = 0;
  useImageBCflag = false;
  inverseFlag = false;
  normalizeLuminanceFlag = true;
  writeImages = false;
  offsetX = 0;
  offsetY = 0;
  randomMovie = 0;
  autoResizeFlag = false;
  readPvpFile = false;
  phase = 0;
  //useParamsImage = true;
};

ANNTriggerUpdateOnNewImageLayer "Bipolar" = {
  restart = 0;
  nxScale = 1;
  nyScale = 1;
  nf = 3;
  writeStep = 2000.0;
  initialWriteTime = 1999.0;
  mirrorBCflag = 1;
  writeSparseActivity = 0;

  movieLayerName = "Image";
  InitVType = "ZeroV";

  VThresh = -infinity;
  VMax = infinity;
  VMin = -infinity;
  VShift = 0;
    
  phase = 1;
};

ANNTriggerUpdateOnNewImageLayer "Ganglion" = {
  restart = 0;
  nxScale = 1;
  nyScale = 1;
  nf = 3;
  writeStep = 2000.0;
  initialWriteTime = 2039.0;
  mirrorBCflag = 1;
  writeSparseActivity = 0;
  //
  movieLayerName = "Image";
  InitVType = "ZeroV";
  //
  VThresh = -infinity;
  VMax = infinity;
  VMin = -infinity;
  VShift = 0;
  // 
  phase = 2;
};

ANNErrorLayer "LGN" = {
  restart = 0;
  nxScale = 1;
  nyScale = 1;
  nf = 3;
  initialWriteTime = 1999.0;
  writeStep = 2000;
  mirrorBCflag = 0;
  valueBC = 0;
  writeSparseActivity = 0;
  //
  InitVType = "ZeroV";
  //InitVType = "InitVFromFile";
  //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output/Checkpoints/Checkpoint6000000/Error_V.pvp";
  //
  VThresh = 0.005;
  VMax =  infinity;
  VMin = 0;
  VShift = 0;
  //
  phase = 3;  
};



//  V1  ///

HyPerLCALayer "S1" = {
  restart = 0;
  nxScale = 0.25;
  nyScale = 0.25;
  nf = 128; 
  numChannels = 1; // should be 1
  numWindowX = 1;
  numWindowY = 1;
  initialWriteTime = 39.0;
  writeStep = 40.0;
  mirrorBCflag = 0;
  valueBC = 0;
  writeSparseActivity = 1;
  writeSparseValues = 1;
  //
  InitVType = "UniformRandomV";
  minV = -1.0;
  maxV = .15; //0.05 above VThresh
  //InitVType = "InitVFromFile";
  //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_30/output_2013_01_30_12x12x128_3x3_9x9x256_lambda_05X1_lateral/Checkpoints/Checkpoint8039600/V1_V.pvp";
  // 
  timeConstantTau = 200.0;
  timeConstantTauMinimum = 10.0;
  slopeErrorStd = 0.01;
  // 
  VThresh = 0.05; //  // 0.05 works for animalDB
  VMax = infinity;
  VMin = 0;
  VShift = 0.025;  // 0 -> hard threshold, 1 -> soft threshold
  //
  phase = 4;
};

// use for intra-column connections
ANNErrorLayer "C1ErrorLocal" = {
  restart = 0;
  nxScale = 0.25;
  nyScale = 0.25;
  nf = 128;
  initialWriteTime = 9999.0;
  writeStep = 10000;
  mirrorBCflag = 0;
  valueBC = 0;
  writeSparseActivity = 0;
  //
  InitVType = "ZeroV";
  //InitVType = "InitVFromFile";
  //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output/Checkpoints/Checkpoint6000000/Error_V.pvp";
  //
  VThresh = 0.005;
  VMax =  infinity;
  VMin =  0;
  VShift = 0;
  //
  phase = 5;  
};

// long-range lateral interactions
ANNErrorLayer "C1ErrorLateral" = {
  restart = 0;
  nxScale = 0.25;
  nyScale = 0.25;
  nf = 128;
  initialWriteTime = 9999.0;
  writeStep = 10000;
  mirrorBCflag = 0;
  valueBC = 0;
  writeSparseActivity = 0;
  //
  InitVType = "ZeroV";
  //InitVType = "InitVFromFile";
  //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output/Checkpoints/Checkpoint6000000/Error_V.pvp";
  //
  VThresh = 0.005;
  VMax =  infinity;
  VMin = 0;
  VShift = 0;
  //
  phase = 5;  
};

// V1 layers II-III (complex cells with lateral interactions)
HyPerLCALayer "C1" = {
  restart = 0;
  nxScale = 0.25;
  nyScale = 0.25;
  nf = 128; 
  numChannels = 1;  // should be 1
  numWindowX = 1;
  numWindowY = 1;
  // 
  initialWriteTime = 39.0;
  writeStep = 40.0;
  mirrorBCflag = 0;
  writeSparseActivity = 1;
  writeSparseValues = 1;
  //
  InitVType = "UniformRandomV";
  minV = -1.0;
  maxV = .15; //0.05 above VThresh
  //InitVType = "InitVFromFile";
  //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_30/output_2013_01_30_12x12x128_3x3_9x9x128_lambda_05X1_lateral/Checkpoints/Checkpoint8039600/V1_V.pvp";
  // 
  timeConstantTau = 200.0;
  timeConstantTauMinimum = 10.0;
  slopeErrorStd = 0.01;
  // 
  VThresh = 0.05; //0.05;
  VMax = infinity;
  VMin = 0;
  VShift = 0.025;  // 0 -> hard threshold, 1 -> soft threshold
  //
  phase = 6;
};


// HyPerComplex "H-cell" layer: reconstructions from inter and intra column and top-down connections
HyPerLCALayer "H1" = {
  restart = 0;
  nxScale = 0.25;
  nyScale = 0.25;
  nf = 128; 
  numChannels = 1; // should be 1
  numWindowX = 1;
  numWindowY = 1;
  initialWriteTime = 39.0;
  writeStep = 40.0;
  mirrorBCflag = 0;
  valueBC = 0;
  writeSparseActivity = 1;
  writeSparseValues = 1;
  //
  InitVType = "UniformRandomV";
  minV = -1.0;
  maxV = .15; //0.05 above VThresh
  //InitVType = "InitVFromFile";
  //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_30/output_2013_01_30_12x12x128_3x3_9x9x256_lambda_05X1_lateral/Checkpoints/Checkpoint8039600/V1_V.pvp";
  // 
  timeConstantTau = 200.0;
  timeConstantTauMinimum = 10.0;
  slopeErrorStd = 0.01;
  // 
  VThresh = 0.05; //  // 0.05 works for animalDB
  VMax = infinity;
  VMin = 0;
  VShift = 0.025;  // 0 -> hard threshold, 1 -> soft threshold
  //
  phase = 7;
};



// Thalamic layer for V2
ANNLayer "V2Pulvinar" = {
  restart = 0;
  nxScale = 1;
  nyScale = 1;
  nf = 3;
  initialWriteTime = 2039.0;
  writeStep = 2000.0;
  mirrorBCflag = 0;
  valueBC = 0;
  writeSparseActivity = 0;
  //
  //movieLayerName = "Image";
  InitVType = "ZeroV";
  //InitVType = "InitVFromFile";
  //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output/Checkpoints/Checkpoint6000000/Recon_V.pvp";
  //
  VThresh = -infinity;
  VMax = infinity;     // prevent reconstruction from exceeding reasonable bounds
  VMin = -infinity; 
  VShift = 0;
  // 
  phase = 8; 
};




//  V2 //

// inter-cortical V1<->V2 reconstructino error
ANNErrorLayer "S2Error" = {
  restart = 0;
  nxScale = 0.250;
  nyScale = 0.250;
  nf = 128;
  initialWriteTime = 1039.0;
  writeStep = 10000;
  mirrorBCflag = 0;
  valueBC = 0;
  writeSparseActivity = 0;
  //
  InitVType = "ZeroV";
  //InitVType = "InitVFromFile";
  //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output/Checkpoints/Checkpoint6000000/Error_V.pvp";
  //
  VThresh = 0.005;
  VMax =  infinity;
  VMin = 0;
  VShift = 0;
  //
  phase = 8;  
};

HyPerLCALayer "S2" = {
  restart = 0;
  nxScale = 0.1250;
  nyScale = 0.1250;
  nf = 256;
  numChannels = 1; // should be 1
  numWindowX = 1;
  numWindowY = 1;
  initialWriteTime = 39.0;
  writeStep = 40.0;
  mirrorBCflag = 0;
  valueBC = 0;
  writeSparseActivity = 1;
  writeSparseValues = 1;
  //
  InitVType = "UniformRandomV";
  minV = -1.0;
  maxV = .15; //0.05 above VThresh
  //InitVType = "InitVFromFile";
  //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output_2013_01_31_12x12x128_3x3_9x9x128_lambda_05X1_lateral/Checkpoints/Checkpoint8039600/V1_V.pvp";
  // 
  timeConstantTau = 200.0;
  timeConstantTauMinimum = 10.0;
  slopeErrorStd = 0.01;
  // 
  VThresh = 0.05; //  // 0.05 works for animalDB
  VMax = infinity;
  VMin = 0;
  VShift = 0.025;  // 0 -> hard threshold, 1 -> soft threshold
  //
  phase = 9;
};

// use for intra-column connections
ANNErrorLayer "C2ErrorLocal" = {
  restart = 0;
  nxScale = 0.1250;
  nyScale = 0.1250;
  nf = 256;
  initialWriteTime = 9999.0;
  writeStep = 10000;
  mirrorBCflag = 0;
  valueBC = 0;
  writeSparseActivity = 0;
  //
  InitVType = "ZeroV";
  //InitVType = "InitVFromFile";
  //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output/Checkpoints/Checkpoint6000000/Error_V.pvp";
  //
  VThresh = 0.005;
  VMax =  infinity;
  VMin =  0;
  VShift = 0;
  //
  phase = 10;  
};

// long-range lateral interactions
ANNErrorLayer "C2ErrorLateral" = {
  restart = 0;
  nxScale = 0.1250;
  nyScale = 0.1250;
  nf = 256;
  initialWriteTime = 9999.0;
  writeStep = 10000;
  mirrorBCflag = 0;
  valueBC = 0;
  writeSparseActivity = 0;
  //
  InitVType = "ZeroV";
  //InitVType = "InitVFromFile";
  //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output/Checkpoints/Checkpoint6000000/Error_V.pvp";
  //
  VThresh = 0.005;
  VMax =  infinity;
  VMin = 0;
  VShift = 0;
  //
  phase = 10;  
};

// V2 layers II-III (complex cells with lateral interactions)
HyPerLCALayer "C2" = {
  restart = 0;
  nxScale = 0.1250;
  nyScale = 0.1250;
  nf = 256;
  numChannels = 1;  // should be 1
  numWindowX = 1;
  numWindowY = 1;
  // 
  initialWriteTime = 39.0;
  writeStep = 40.0;
  mirrorBCflag = 0;
  writeSparseActivity = 1;
  writeSparseValues = 1;
  //
  InitVType = "UniformRandomV";
  minV = -1.0;
  maxV = .15; //0.05 above VThresh
  //InitVType = "InitVFromFile";
  //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output_2013_01_31_12x12x128_3x3_9x9x128_lambda_05X1_lateral/Checkpoints/Checkpoint8039600/V1_V.pvp";
  // 
  timeConstantTau = 200.0;
  timeConstantTauMinimum = 10.0;
  slopeErrorStd = 0.01;
  // 
  VThresh = 0.05; //0.05;
  VMax = infinity;
  VMin = 0;
  VShift = 0.025;  // 0 -> hard threshold, 1 -> soft threshold
  //
  phase = 11;
};


// HyPerComplex "H-cell" layer: reconstructions from inter and intra column and top-down connections
HyPerLCALayer "H2" = {
  restart = 0;
  nxScale = 0.1250;
  nyScale = 0.1250;
  nf = 256;
  numChannels = 1; // should be 1
  numWindowX = 1;
  numWindowY = 1;
  initialWriteTime = 39.0;
  writeStep = 40.0;
  mirrorBCflag = 0;
  valueBC = 0;
  writeSparseActivity = 1;
  writeSparseValues = 1;
  //
  InitVType = "UniformRandomV";
  minV = -1.0;
  maxV = .15; //0.05 above VThresh
  //InitVType = "InitVFromFile";
  //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output_2013_01_31_12x12x128_3x3_9x9x128_lambda_05X1_lateral/Checkpoints/Checkpoint8039600/V1_V.pvp";
  // 
  timeConstantTau = 200.0;
  timeConstantTauMinimum = 10.0;
  slopeErrorStd = 0.01;
  // 
  VThresh = 0.05; //  // 0.05 works for animalDB
  VMax = infinity;
  VMin = 0;
  VShift = 0.025;  // 0 -> hard threshold, 1 -> soft threshold
  //
  phase = 12;
};

// Thalamic layer for V4
ANNLayer "V4Pulvinar" = {
  restart = 0;
  nxScale = 0.250;
  nyScale = 0.250;
  nf = 128;
  initialWriteTime = 2039.0;
  writeStep = 2000.0;
  mirrorBCflag = 0;
  valueBC = 0;
  writeSparseActivity = 0;
  //
  //movieLayerName = "Image";
  InitVType = "ZeroV";
  //InitVType = "InitVFromFile";
  //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output/Checkpoints/Checkpoint6000000/Recon_V.pvp";
  //
  VThresh = -infinity;
  VMax = infinity;     // prevent reconstruction from exceeding reasonable bounds
  VMin = -infinity; 
  VShift = 0;
  // 
  phase = 13; 
};




//  V4 //

// inter-cortical V2<->V4 reconstructino error
ANNErrorLayer "S4Error" = {
  restart = 0;
  nxScale = 0.1250;
  nyScale = 0.1250;
  nf = 256;
  initialWriteTime = 1039.0;
  writeStep = 10000;
  mirrorBCflag = 0;
  valueBC = 0;
  writeSparseActivity = 0;
  //
  InitVType = "ZeroV";
  //InitVType = "InitVFromFile";
  //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output/Checkpoints/Checkpoint6000000/Error_V.pvp";
  //
  VThresh = 0.005;
  VMax =  infinity;
  VMin = 0;
  VShift = 0;
  //
  phase = 8;  
};

HyPerLCALayer "S4" = {
  restart = 0;
  nxScale = 0.06250;
  nyScale = 0.06250;
  nf = 512;
  numChannels = 1; // should be 1
  numWindowX = 1;
  numWindowY = 1;
  initialWriteTime = 39.0;
  writeStep = 40.0;
  mirrorBCflag = 0;
  valueBC = 0;
  writeSparseActivity = 1;
  writeSparseValues = 1;
  //
  InitVType = "UniformRandomV";
  minV = -1.0;
  maxV = .15; //0.05 above VThresh
  //InitVType = "InitVFromFile";
  //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output_2013_01_31_12x12x128_3x3_9x9x128_lambda_05X1_lateral/Checkpoints/Checkpoint8039600/V1_V.pvp";
  // 
  timeConstantTau = 200.0;
  timeConstantTauMinimum = 10.0;
  slopeErrorStd = 0.01;
  // 
  VThresh = 0.05; //  // 0.05 works for animalDB
  VMax = infinity;
  VMin = 0;
  VShift = 0.025;  // 0 -> hard threshold, 1 -> soft threshold
  //
  phase = 9;
};

// use for intra-column connections
ANNErrorLayer "C4ErrorLocal" = {
  restart = 0;
  nxScale = 0.06250;
  nyScale = 0.06250;
  nf = 512;
  initialWriteTime = 9999.0;
  writeStep = 10000;
  mirrorBCflag = 0;
  valueBC = 0;
  writeSparseActivity = 0;
  //
  InitVType = "ZeroV";
  //InitVType = "InitVFromFile";
  //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output/Checkpoints/Checkpoint6000000/Error_V.pvp";
  //
  VThresh = 0.005;
  VMax =  infinity;
  VMin =  0;
  VShift = 0;
  //
  phase = 10;  
};

// long-range lateral interactions
ANNErrorLayer "C4ErrorLateral" = {
  restart = 0;
  nxScale = 0.06250;
  nyScale = 0.06250;
  nf = 256;
  initialWriteTime = 9999.0;
  writeStep = 10000;
  mirrorBCflag = 0;
  valueBC = 0;
  writeSparseActivity = 0;
  //
  InitVType = "ZeroV";
  //InitVType = "InitVFromFile";
  //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output/Checkpoints/Checkpoint6000000/Error_V.pvp";
  //
  VThresh = 0.005;
  VMax =  infinity;
  VMin = 0;
  VShift = 0;
  //
  phase = 10;  
};

// V2 layers II-III (complex cells with lateral interactions)
HyPerLCALayer "C2" = {
  restart = 0;
  nxScale = 0.1250;
  nyScale = 0.1250;
  nf = 256;
  numChannels = 1;  // should be 1
  numWindowX = 1;
  numWindowY = 1;
  // 
  initialWriteTime = 39.0;
  writeStep = 40.0;
  mirrorBCflag = 0;
  writeSparseActivity = 1;
  writeSparseValues = 1;
  //
  InitVType = "UniformRandomV";
  minV = -1.0;
  maxV = .15; //0.05 above VThresh
  //InitVType = "InitVFromFile";
  //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output_2013_01_31_12x12x128_3x3_9x9x128_lambda_05X1_lateral/Checkpoints/Checkpoint8039600/V1_V.pvp";
  // 
  timeConstantTau = 200.0;
  timeConstantTauMinimum = 10.0;
  slopeErrorStd = 0.01;
  // 
  VThresh = 0.05; //0.05;
  VMax = infinity;
  VMin = 0;
  VShift = 0.025;  // 0 -> hard threshold, 1 -> soft threshold
  //
  phase = 11;
};


// HyPerComplex "H-cell" layer: reconstructions from inter and intra column and top-down connections
HyPerLCALayer "H2" = {
  restart = 0;
  nxScale = 0.1250;
  nyScale = 0.1250;
  nf = 256;
  numChannels = 1; // should be 1
  numWindowX = 1;
  numWindowY = 1;
  initialWriteTime = 39.0;
  writeStep = 40.0;
  mirrorBCflag = 0;
  valueBC = 0;
  writeSparseActivity = 1;
  writeSparseValues = 1;
  //
  InitVType = "UniformRandomV";
  minV = -1.0;
  maxV = .15; //0.05 above VThresh
  //InitVType = "InitVFromFile";
  //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output_2013_01_31_12x12x128_3x3_9x9x128_lambda_05X1_lateral/Checkpoints/Checkpoint8039600/V1_V.pvp";
  // 
  timeConstantTau = 200.0;
  timeConstantTauMinimum = 10.0;
  slopeErrorStd = 0.01;
  // 
  VThresh = 0.05; //  // 0.05 works for animalDB
  VMax = infinity;
  VMin = 0;
  VShift = 0.025;  // 0 -> hard threshold, 1 -> soft threshold
  //
  phase = 12;
};

// Thalamic layer for V4
ANNLayer "V4Pulvinar" = {
  restart = 0;
  nxScale = 0.250;
  nyScale = 0.250;
  nf = 128;
  initialWriteTime = 2039.0;
  writeStep = 2000.0;
  mirrorBCflag = 0;
  valueBC = 0;
  writeSparseActivity = 0;
  //
  //movieLayerName = "Image";
  InitVType = "ZeroV";
  //InitVType = "InitVFromFile";
  //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output/Checkpoints/Checkpoint6000000/Recon_V.pvp";
  //
  VThresh = -infinity;
  VMax = infinity;     // prevent reconstruction from exceeding reasonable bounds
  VMin = -infinity; 
  VShift = 0;
  // 
  phase = 13; 
};





// connections


KernelConn "ImageToBipolarCenter" = {
  preLayerName = "Image";
  postLayerName = "Bipolar";
  channelCode = 0;
  nxp = 3; 
  nyp = 3; 
  nfp = 3;
  numAxonalArbors = 1;
  initFromLastFlag = 0;  // 1;  // restart
  writeStep = -1;
  writeCompressedCheckpoints = false;
    
  weightInitType = "Gauss2DWeight";
  aspect = 1;
  sigma = 0.5;
  rMax  = 3;
  rMin = 0;
  numOrientationsPre = 1;
  numOrientationsPost = 1;
        
  strength = 1.0;  
  normalizeMethod = "normalizeSum";
  minSumTolerated = 0;
  normalizeArborsIndividually = 0;
  normalize_cutoff = 0.0;
  normalizeFromPostPerspective = true;
  symmetrizeWeights = false;
    
  shrinkPatches = false;
  //writeCompressedWeights = 0.0;
  plasticityFlag = 0;
  pvpatchAccumulateType = "convolve";
  updateGSynFromPostPerspective = false;     
     
  delay = 0;
     
  preActivityIsNotRate = false;
  selfFlag = false;
  shmget_flag = false;
};


KernelConn "BipolarToGanglionCenter" = {
  preLayerName = "Bipolar";
  postLayerName = "Ganglion";
  channelCode = 0;
  nxp = 1; 
  nyp = 1; 
  nfp = 3;
  numAxonalArbors = 1;
  initFromLastFlag = 0;  // 1;  // restart
  writeStep = -1;
  writeCompressedCheckpoints = false;
    
  weightInitType = "Gauss2DWeight";
  aspect = 1;
  sigma = 1;
  rMax  = 3;
  rMin = 0;
  numOrientationsPre = 1;
  numOrientationsPost = 1;
        
  strength = 1.0;  
  normalizeMethod = "normalizeSum";
  minSumTolerated = 0;
  normalizeArborsIndividually = 0;
  normalize_cutoff = 0.0;
  normalizeFromPostPerspective = true;
  symmetrizeWeights = false;
    
  shrinkPatches = false;
  //writeCompressedWeights = 0.0;
  plasticityFlag = 0;
  pvpatchAccumulateType = "convolve";
  updateGSynFromPostPerspective = false;     
     
  delay = 0;
     
  preActivityIsNotRate = false;
  selfFlag = false;
  shmget_flag = false;
};


KernelConn "BipolarToGanglionSurround" = {
  preLayerName = "Bipolar";
  postLayerName = "Ganglion";
  channelCode = 1;
  nxp = 11; 
  nyp = 11; 
  nfp = 3;
  numAxonalArbors = 1;
  initFromLastFlag = 0;  // 1;  // restart
  writeStep = -1;
  writeCompressedCheckpoints = false;
    
  weightInitType = "Gauss2DWeight";
  aspect = 1;
  sigma = 5.5;
  rMax  = 7.5;
  rMin = 0.5;
  numOrientationsPre = 1;
  numOrientationsPost = 1;
               
  strength = 1.0;  
  normalizeMethod = "normalizeSum";
  minSumTolerated = 0;
  normalizeArborsIndividually = 0;
  normalize_cutoff = 0.0;
  normalizeFromPostPerspective = true;
  symmetrizeWeights = false;
    
  shrinkPatches = false;
  //writeCompressedWeights = 0.0;
  plasticityFlag = 0;
  pvpatchAccumulateType = "convolve";
  updateGSynFromPostPerspective = false;     
     
  delay = 0;
     
  preActivityIsNotRate = false;
  selfFlag = false;
  shmget_flag = false;
};


IdentConn "GanglionToLGN" = {
  preLayerName = "Ganglion";
  postLayerName = "LGN";
  channelCode = 0;
  delay = 0;
  writeStep = -1;
};



// V1/LGN Thalamo-Cortical Connections


KernelConn "H1ToLGN" = {
  preLayerName = "H1";
  postLayerName = "LGN";
  channelCode = 1;
  nxp = 12;
  nyp = 12;
  nfp = 3;
  numAxonalArbors = 1;
  initFromLastFlag = 0;
  //
  //weightInitType = "FileWeight";
  //initWeightsFile = "/nh/compneuro/Data/vine/LCA/2013_01_31/output_2013_01_31_12x12x128_3x3_9x9x128_lambda_05X1_lateral/Checkpoints/Checkpoint8039600/V1ToError_W.pvp";
  weightInitType = "UniformRandomWeight";
  wMinInit = -1.0;
  wMaxInit = 1.0;
  sparseFraction = .90;
  //
  strength = 1.0;  
  normalizeMethod = "normalizeL2";
  minL2NormTolerated = 0;
  normalizeArborsIndividually = 0;
  normalize_cutoff = 0.0;
  normalizeFromPostPerspective = false;
  symmetrizeWeights = false;
  //
  preActivityIsNotRate = false;  // should help make response more indepenent of time step size dt
  keepKernelsSynchronized = true; 
  combine_dW_with_W_flag = false; 
  //
  writeStep = 1000000;
  writeCompressedWeights = false;
  writeCompressedCheckpoints = false;
  plasticityFlag = true;
  weightUpdatePeriod = 200.0;
  initialWeightUpdateTime = 199.0;
  initialWriteTime = 0.0;
  dWMax = 5; //2.0; 
  selfFlag = false;
  shmget_flag = false;
  //
  delay = 0;
  //
  pvpatchAccumulateType = "convolve";
  updateGSynFromPostPerspective = false;     
  shrinkPatches = false;
};


TransposeConn "LGNToS1" = {
  preLayerName = "LGN";
  postLayerName = "S1";
  channelCode = 0;
  originalConnName = "H1ToLGN";
  selfFlag = false;
  preActivityIsNotRate = false;  // should help make response more indepenent of time step size dt
  writeStep = -1;
  writeCompressedCheckpoints = false;
  shmget_flag = false;
  delay = 0;
  pvpatchAccumulateType = "convolve";
  updateGSynFromPostPerspective = false;     
};




IdentConn "S1ToC1ErrorLocal" = {
  preLayerName = "S1";
  postLayerName = "C1ErrorLocal";
  channelCode = 0;
  delay = 0;
  writeStep = -1;
};

KernelConn "C1ToC1ErrorLocal" = {
  preLayerName = "C1";
  postLayerName = "C1ErrorLocal";
  channelCode = 1;
  nxp = 1;
  nyp = 1;
  numAxonalArbors = 1;
  initFromLastFlag = 0;
  //
  //weightInitType = "FileWeight";
  //initWeightsFile = "/nh/compneuro/Data/vine/LCA/2013_01_31/output_2013_01_31_12x12x128_3x3_9x9x128_lambda_05X1_lateral/Checkpoints/Checkpoint8039600/C1ToError2_W.pvp";
  weightInitType = "UniformRandomWeight";
  wMinInit = -1.0;
  wMaxInit = 1.0;
  sparseFraction = .90;
  //
  strength = 0.70711;
  normalizeMethod = "normalizeL2";
  minL2NormTolerated = 0;
  normalizeArborsIndividually = 0;
  normalize_cutoff = 0.0;
  normalizeFromPostPerspective = false;
  symmetrizeWeights = false;
  //
  preActivityIsNotRate = false;  // should help make response more indepenent of time step size dt
  keepKernelsSynchronized = true; 
  combine_dW_with_W_flag = false; 
  //
  writeStep = 1000000;
  writeCompressedWeights = false;
  writeCompressedCheckpoints = false;
  plasticityFlag = true;
  weightUpdatePeriod = 200.0;
  initialWeightUpdateTime = 199.0;
  initialWriteTime = 0.0;
  dWMax = 5.0; //0.25; 
  selfFlag = false;
  shmget_flag = false;
  //
  delay = 0;
  //
  pvpatchAccumulateType = "convolve";
  updateGSynFromPostPerspective = false;     
  shrinkPatches = false;
};

TransposeConn "C1ErrorLocalToC1" = {
  preLayerName = "C1ErrorLocal";
  postLayerName = "C1";
  channelCode = 0;
  originalConnName = "C1ToC1ErrorLocal";
  selfFlag = false;
  preActivityIsNotRate = false;  // should help make response more indepenent of time step size dt	
  writeStep = -1;
  writeCompressedCheckpoints = false;
  shmget_flag = false;
  delay = 0;
  pvpatchAccumulateType = "convolve";
  updateGSynFromPostPerspective = false;     
};


CloneKernelConn "C1ToH1Local" = {
  preLayerName = "C1";
  postLayerName = "H1";
  channelCode = 0;
  writeStep = -1;
  writeCompressedCheckpoints = false;
  originalConnName = "C1ToC1ErrorLocal";
  selfFlag = false;
  pvpatchAccumulateType = "convolve";
  updateGSynFromPostPerspective = false;     
  delay = 0;
  preActivityIsNotRate = false;
};


// lateral connections

// bottom-up 
IdentConn "S1ToC1ErrorLateral" = {
  preLayerName = "S1";
  postLayerName = "C1ErrorLateral";
  channelCode = 0;
  delay = 0;
  writeStep = -1;
};

// long-range lateral
KernelConn "C1ToC1ErrorLateral" = {
  preLayerName = "C1";
  postLayerName = "C1ErrorLateral";
  channelCode = 1;
  nxp =  9;
  nyp =  9;
  rMinX = 1.5; // zero intra-column connections
  rMinY = 1.5;
  numAxonalArbors = 1;
  initFromLastFlag = 0;
  //
  //weightInitType = "FileWeight";
  //initWeightsFile = "/nh/compneuro/Data/vine/LCA/2013_01_31/output_2013_01_31_12x12x128_3x3_9x9x128_lambda_05X1_lateral/Checkpoints/Checkpoint8039600/C1ToError1_2_W.pvp";
  weightInitType = "UniformRandomWeight";
  wMinInit = -1.0;
  wMaxInit = 1.0;
  sparseFraction = .90;
  //
  strength = 0.70711; 
  normalizeMethod = "normalizeL2";
  minL2NormTolerated = 0;
  normalizeArborsIndividually = 0;
  normalize_cutoff = 0.0;
  normalizeFromPostPerspective = false;
  symmetrizeWeights = false;
  //
  preActivityIsNotRate = false;  // should help make response more indepenent of time step size dt
  keepKernelsSynchronized = true; 
  combine_dW_with_W_flag = false; 
  //
  writeStep = 100000;
  writeCompressedWeights = false;
  writeCompressedCheckpoints = false;
  plasticityFlag = true;
  weightUpdatePeriod = 200.0;
  initialWeightUpdateTime = 199.0;
  initialWriteTime = 0.0;
  dWMax = 5.0; //0.25; 
  selfFlag = false;
  shmget_flag = false;
  //
  delay = 0;
  //
  pvpatchAccumulateType = "convolve";
  updateGSynFromPostPerspective = false;     
  shrinkPatches = false;
};

TransposeConn "C1ErrorLateralToC1" = {
  preLayerName = "C1ErrorLateral";
  postLayerName = "C1";
  channelCode = 0;
  originalConnName = "C1ToC1ErrorLateral";
  selfFlag = false;
  preActivityIsNotRate = false;  // should help make response more indepenent of time step size dt
  writeStep = -1;
  writeCompressedCheckpoints = false;
  shmget_flag = false;
  delay = 0;
  pvpatchAccumulateType = "convolve";
  updateGSynFromPostPerspective = false;     
};


CloneKernelConn "C1ToH1Lateral" = {
  preLayerName = "C1";
  postLayerName = "H1";
  channelCode = 0;
  writeStep = -1;
  writeCompressedCheckpoints = false;
  originalConnName = "C1ToC1ErrorLateral"; 
  //writeCompressedWeights = 0.0;
  selfFlag = false;
  pvpatchAccumulateType = "convolve";
  updateGSynFromPostPerspective = false;     
  delay = 0;
  preActivityIsNotRate = false;
};





//***************************************
// V2/Pulvinar Thalamo-Cortical Connections
//***************************************

CloneKernelConn "H1ToV2Pulvinar" = {
  preLayerName = "H1";
  postLayerName = "V2Pulvinar";
  channelCode = 0;
  writeStep = -1;
  writeCompressedCheckpoints = false;
  originalConnName = "H1ToLGN";
  //writeCompressedWeights = 0.0;
  selfFlag = false;
  pvpatchAccumulateType = "convolve";
  updateGSynFromPostPerspective = false;     
  delay = 0;
  preActivityIsNotRate = false;
};

KernelConn "H2ToV2Pulvinar" = {
  preLayerName = "H2";
  postLayerName = "V2Pulvinar";
  channelCode = 1;
  nxp = 24;
  nyp = 24;
  nfp = 3;
  numAxonalArbors = 1;
  initFromLastFlag = 0;
  //
  //weightInitType = "FileWeight";
  //initWeightsFile = "/nh/compneuro/Data/vine/LCA/2013_01_31/output_2013_01_31_12x12x128_3x3_9x9x128_lambda_05X1_lateral/Checkpoints/Checkpoint8039600/V1ToError_W.pvp";
  weightInitType = "UniformRandomWeight";
  wMinInit = -1.0;
  wMaxInit = 1.0;
  sparseFraction = .90;
  //
  strength = 0.70711;  
  normalizeMethod = "normalizeL2";
  minL2NormTolerated = 0;
  normalizeArborsIndividually = 0;
  normalize_cutoff = 0.0;
  normalizeFromPostPerspective = false;
  symmetrizeWeights = false;
  //
  preActivityIsNotRate = false;  // should help make response more indepenent of time step size dt
  keepKernelsSynchronized = true; 
  combine_dW_with_W_flag = false; 
  //
  writeStep = 1000000;
  writeCompressedWeights = false;
  writeCompressedCheckpoints = false;
  plasticityFlag = true;
  weightUpdatePeriod = 200.0;
  initialWeightUpdateTime = 199.0;
  initialWriteTime = 0.0;
  dWMax = 5; //2.0; 
  selfFlag = false;
  shmget_flag = false;
  //
  delay = 0;
  //
  pvpatchAccumulateType = "convolve";
  updateGSynFromPostPerspective = false;     
  shrinkPatches = false;
};


TransposeConn "V2PulvinarToS2" = {
  preLayerName = "V2Pulvinar";
  postLayerName = "S2";
  channelCode = 0;
  originalConnName = "H2ToV2Pulvinar";
  selfFlag = false;
  preActivityIsNotRate = false;  // should help make response more indepenent of time step size dt
  writeStep = -1;
  writeCompressedCheckpoints = false;
  shmget_flag = false;
  delay = 0;
  pvpatchAccumulateType = "convolve";
  updateGSynFromPostPerspective = false;     
};


// cortico-cortico connections

IdentConn "C1ToS2Error" = {
  preLayerName = "C1";
  postLayerName = "S2Error";
  channelCode = 0;
  delay = 0;
  writeStep = -1;
};

KernelConn "S2ToS2Error" = {
  preLayerName = "S2";
  postLayerName = "S2Error";
  channelCode = 1;
  nxp = 6;
  nyp = 6;
  nxpShrunken = 4;
  nypShrunken = 4;
  numAxonalArbors = 1;
  initFromLastFlag = 0;
  //
  //weightInitType = "FileWeight";
  //initWeightsFile = "/nh/compneuro/Data/vine/LCA/2013_01_31/output_2013_01_31_12x12x128_3x3_9x9x128_lambda_05X1_lateral/Checkpoints/Checkpoint8039600/V1ToError_W.pvp";
  weightInitType = "UniformRandomWeight";
  wMinInit = -1.0;
  wMaxInit = 1.0;
  sparseFraction = .90;
  //
  strength = 0.70711;  
  normalizeMethod = "normalizeL2";
  minL2NormTolerated = 0;
  normalizeArborsIndividually = 0;
  normalize_cutoff = 0.0;
  normalizeFromPostPerspective = false;
  symmetrizeWeights = false;
  //
  preActivityIsNotRate = false;  // should help make response more indepenent of time step size dt
  keepKernelsSynchronized = true; 
  combine_dW_with_W_flag = false; 
  //
  writeStep = 1000000;
  writeCompressedWeights = false;
  writeCompressedCheckpoints = false;
  plasticityFlag = true;
  weightUpdatePeriod = 200.0;
  initialWeightUpdateTime = 199.0;
  initialWriteTime = 0.0;
  dWMax = 5; //2.0; 
  selfFlag = false;
  shmget_flag = false;
  //
  delay = 0;
  //
  pvpatchAccumulateType = "convolve";
  updateGSynFromPostPerspective = false;     
  shrinkPatches = false;
};

TransposeConn "S2ErrorToS2" = {
  preLayerName = "S2Error";
  postLayerName = "S2";
  channelCode = 0;
  originalConnName = "S2ToS2Error";
  selfFlag = false;
  preActivityIsNotRate = false;  // should help make response more indepenent of time step size dt
  writeStep = -1;
  writeCompressedCheckpoints = false;
  shmget_flag = false;
  delay = 0;
  pvpatchAccumulateType = "convolve";
  updateGSynFromPostPerspective = false;     
};


// intra-columnar

IdentConn "S2ToC2ErrorLocal" = {
  preLayerName = "S2";
  postLayerName = "C2ErrorLocal";
  channelCode = 0;
  delay = 0;
  writeStep = -1;
};

KernelConn "C2ToC2ErrorLocal" = {
  preLayerName = "C2";
  postLayerName = "C2ErrorLocal";
  channelCode = 1;
  nxp = 1;
  nyp = 1;
  numAxonalArbors = 1;
  initFromLastFlag = 0;
  //
  //weightInitType = "FileWeight";
  //initWeightsFile = "/nh/compneuro/Data/vine/LCA/2013_01_31/output_2013_01_31_12x12x128_3x3_9x9x128_lambda_05X1_lateral/Checkpoints/Checkpoint8039600/C1ToError2_W.pvp";
  weightInitType = "UniformRandomWeight";
  wMinInit = -1.0;
  wMaxInit = 1.0;
  sparseFraction = .90;
  //
  strength = 0.70711; //0.5;  
  normalizeMethod = "normalizeL2";
  minL2NormTolerated = 0;
  normalizeArborsIndividually = 0;
  normalize_cutoff = 0.0;
  normalizeFromPostPerspective = false;
  symmetrizeWeights = false;
  //
  preActivityIsNotRate = false;  // should help make response more indepenent of time step size dt
  keepKernelsSynchronized = true; 
  combine_dW_with_W_flag = false; 
  //
  writeStep = 1000000;
  writeCompressedWeights = false;
  writeCompressedCheckpoints = false;
  plasticityFlag = true;
  weightUpdatePeriod = 200.0;
  initialWeightUpdateTime = 199.0;
  initialWriteTime = 0.0;
  dWMax = 5.0; //0.25; 
  selfFlag = false;
  shmget_flag = false;
  //
  delay = 0;
  //
  pvpatchAccumulateType = "convolve";
  updateGSynFromPostPerspective = false;     
  shrinkPatches = false;
};

TransposeConn "C2ErrorLocalToC2" = {
  preLayerName = "C2ErrorLocal";
  postLayerName = "C2";
  channelCode = 0;
  originalConnName = "C2ToC2ErrorLocal";
  selfFlag = false;
  preActivityIsNotRate = false;  // should help make response more indepenent of time step size dt	
  writeStep = -1;
  writeCompressedCheckpoints = false;
  shmget_flag = false;
  delay = 0;
  pvpatchAccumulateType = "convolve";
  updateGSynFromPostPerspective = false;     
};


CloneKernelConn "C2ToH2Local" = {
  preLayerName = "C2";
  postLayerName = "H2";
  channelCode = 0;
  writeStep = -1;
  writeCompressedCheckpoints = false;
  originalConnName = "C2ToC2ErrorLocal";
  selfFlag = false;
  pvpatchAccumulateType = "convolve";
  updateGSynFromPostPerspective = false;     
  delay = 0;
  preActivityIsNotRate = false;
};


// lateral connections

// bottom-up 
IdentConn "S2ToC2ErrorLateral" = {
  preLayerName = "S2";
  postLayerName = "C2ErrorLateral";
  channelCode = 0;
  delay = 0;
  writeStep = -1;
};

// long-range lateral
KernelConn "C2ToC2ErrorLateral" = {
  preLayerName = "C2";
  postLayerName = "C2ErrorLateral";
  channelCode = 1;
  nxp =  9;
  nyp =  9;
  rMinX = 1.5; // zero intra-column connections
  rMinY = 1.5;
  numAxonalArbors = 1;
  initFromLastFlag = 0;
  //
  //weightInitType = "FileWeight";
  //initWeightsFile = "/nh/compneuro/Data/vine/LCA/2013_01_31/output_2013_01_31_12x12x128_3x3_9x9x128_lambda_05X1_lateral/Checkpoints/Checkpoint8039600/C1ToError1_2_W.pvp";
  weightInitType = "UniformRandomWeight";
  wMinInit = -1.0;
  wMaxInit = 1.0;
  sparseFraction = .90;
  //
  strength = 0.70711; //0.5;  
  normalizeMethod = "normalizeL2";
  minL2NormTolerated = 0;
  normalizeArborsIndividually = 0;
  normalize_cutoff = 0.0;
  normalizeFromPostPerspective = false;
  symmetrizeWeights = false;
  //
  preActivityIsNotRate = false;  // should help make response more indepenent of time step size dt
  keepKernelsSynchronized = true; 
  combine_dW_with_W_flag = false; 
  //
  writeStep = 100000;
  writeCompressedWeights = false;
  writeCompressedCheckpoints = false;
  plasticityFlag = true;
  weightUpdatePeriod = 200.0;
  initialWeightUpdateTime = 199.0;
  initialWriteTime = 0.0;
  dWMax = 5.0; //0.25; 
  selfFlag = false;
  shmget_flag = false;
  //
  delay = 0;
  //
  pvpatchAccumulateType = "convolve";
  updateGSynFromPostPerspective = false;     
  shrinkPatches = false;
};

TransposeConn "C2ErrorLateralToC2" = {
  preLayerName = "C2ErrorLateral";
  postLayerName = "C2";
  channelCode = 0;
  originalConnName = "C2ToC2ErrorLateral";
  selfFlag = false;
  preActivityIsNotRate = false;  // should help make response more indepenent of time step size dt
  writeStep = -1;
  writeCompressedCheckpoints = false;
  shmget_flag = false;
  delay = 0;
  pvpatchAccumulateType = "convolve";
  updateGSynFromPostPerspective = false;     
};


CloneKernelConn "C2ToH2Lateral" = {
  preLayerName = "C2";
  postLayerName = "H2";
  channelCode = 0;
  writeStep = -1;
  writeCompressedCheckpoints = false;
  originalConnName = "C2ToC2ErrorLateral"; 
  //writeCompressedWeights = 0.0;
  selfFlag = false;
  pvpatchAccumulateType = "convolve";
  updateGSynFromPostPerspective = false;     
  delay = 0;
  preActivityIsNotRate = false;
};


CloneKernelConn "H2ToV4Pulvinar" = {
  preLayerName = "H2";
  postLayerName = "V4Pulvinar";
  channelCode = 0;
  writeStep = -1;
  writeCompressedCheckpoints = false;
  originalConnName = "H2ToV2Pulvinar";
  //writeCompressedWeights = 0.0;
  selfFlag = false;
  pvpatchAccumulateType = "convolve";
  updateGSynFromPostPerspective = false;     
  delay = 0;
  preActivityIsNotRate = false;
};





// Probes

StatsProbe "ImageStatsFile" = {
    targetLayer = "Image";
    probeOutputFile = "Image_Stats.txt";
};

StatsProbe "GanglionStatsFile" = {
    targetLayer = "Ganglion";
    probeOutputFile = "Ganglion_Stats.txt";
};

StatsProbe "LGNStatsFile" = {
    targetLayer = "LGN";
    probeOutputFile = "LGN_Stats.txt";
};

StatsProbe "S1StatsFile" = {
    targetLayer = "S1";
    probeOutputFile = "S1_Stats.txt";
};

StatsProbe "C1StatsFile" = {
    targetLayer = "C1";
    probeOutputFile = "C1_Stats.txt";
};

StatsProbe "H1StatsFile" = {
    targetLayer = "H1";
    probeOutputFile = "H1_Stats.txt";
};

StatsProbe "C1ErrorLocalStatsFile" = {
    targetLayer = "C1ErrorLocal";
    probeOutputFile = "C1ErrorLocal_Stats.txt";
};

StatsProbe "C1ErrorLateralStatsFile" = {
    targetLayer = "C1ErrorLateral";
    probeOutputFile = "C1ErrorLateral_Stats.txt";
};

StatsProbe "V2PulvinarStatsFile" = {
    targetLayer = "V2Pulvinar";
    probeOutputFile = "V2Pulvinar_Stats.txt";
};




