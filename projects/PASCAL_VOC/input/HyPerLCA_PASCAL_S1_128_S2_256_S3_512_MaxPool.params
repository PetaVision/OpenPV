
///////////////////////////
// created by garkenyon, 06/12/15
//
//  strips out the deconvolutional neural network portion (DCNN)
//  replaces competition between layers with MAX pooling
//
// implements a 3 layer multi-strided, multi-scale, multi-temporal deep sparse convolutional neural network (dSCANN) with symmetrical bottom-up and top-down connectivity
//   designed to minimize an energy function that penalizes reconstruction error of the form:
//    E = E_DCNN + E_DBN + E_Task + S(S1) + S(S2) + S(S3)
//      = ||I - W1*S1 - W1*W2*S2 - W1*W2*W3*S3||^2 + ||S1 - V2*S2||^2 + ||S2 - V3*S3||^2 + ||GT - T*S3||^2
//   the eq. of motion for d(S2)/dt is of the form:
//      W2^T * W1^T * [I - W1*S1 - W1*W2*S2 - W1*W2*W3*S3] + V2^T * [S1 - V2*S2] - [S2 - V3*S3]
//   which in terms of class names defined below becomes:
//      S1DeconErrorToS2 * ImageDeconErrorToS1 * ImageDeconError + S1ReconS2ErrorToS2 * S1ReconS2Error
//   where
//      ImageDeconError = Image - ImageDecon = Image - S1ToImageDeconError * [S1 + S2ToS1DeconError * [S2 + S3ToS2DeconError * S3]]  
//   the top-level S3 reconstructs PASCAL ground truth
//   stride_S3 = 2*stride_S2 = 4*stride_S1
//   nxp_S3 = 2*nxp_S2 = 4*nxp_S1 {18X18 -> 36X36 -> 72X72}
//   S(A) = integral{T(A) - u}dA
//
///////////////////////////
// // Based on HyPerHLCA.params
//
// created by peteschultz: Sept 27, 2012, modified garkenyon, 1/20/13
//
// Implements the locally competitive algorithm described in
// Rozell et al., "Sparse Coding via Thresholding and Local Cometition
// in Neural Circuits," Neural Computation 20, 2526-2563 (2008).



debugParsing = true;

//
// layers
//

HyPerCol "column" = {
    startTime                           = 0;
    dt                                  = 1;
    dtAdaptFlag                         = true;
    dtScaleMax                          = 1; //8;
    dtScaleMin                          = 0.02; //0.1;
    dtChangeMax                         = 0.01; //0.025;
    dtChangeMin                         = -0.02; //0;
    dtMinToleratedTimeScale             = 0.0001;
    stopTime                            = 9549600; //3.1832e+06;
    progressInterval                    = 1000;
    writeProgressToErr                  = true;
    verifyWrites                        = false;
    outputPath                          = "/nh/compneuro/Data/PASCAL_VOC/PASCAL_S1_128_S2_256_S3_512_MaxPool/VOC2007_landscape10";
    printParamsFilename                 = "PASCAL_S1_128_S2_256_S3_512_MaxPool_VOC2007_landscape10.params";
    randomSeed                          = 1234567890;
    nx                                  = 256;
    ny                                  = 192;
    filenamesContainLayerNames          = 1;
    filenamesContainConnectionNames     = 1;
    initializeFromCheckpointDir         = "/nh/compneuro/Data/PASCAL_VOC/PASCAL_S1_128_S2_256_S3_512_MaxPool/VOC2007_landscape9/Checkpoints/Checkpoint2112000";
    defaultInitializeFromCheckpointFlag = true; //false;
    checkpointWrite                     = true;
    checkpointWriteDir                  = "/nh/compneuro/Data/PASCAL_VOC/PASCAL_S1_128_S2_256_S3_512_MaxPool/VOC2007_landscape10/Checkpoints";
    checkpointWriteTriggerMode          = "step";
    checkpointWriteStepInterval         = 48000;
    deleteOlderCheckpoints              = false;
    suppressNonplasticCheckpoints       = false;
    writeTimescales                     = true;
    errorOnNotANumber                   = false;
};

// Image layers

Movie "Image" = {
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 3;
    phase                               = 0;
    mirrorBCflag                        = true;
    initializeFromCheckpointFlag        = false;
    writeStep                           = 1200; //4800;
    initialWriteTime                    = 1200; //4800;
    sparseLayer                         = false;
    updateGpu                           = false;
    dataType                            = NULL;
    offsetAnchor                        = "tl";
    offsetX                             = 0;
    offsetY                             = 0;
    writeImages                         = 0;
    useImageBCflag                      = false;
    autoResizeFlag                      = false;
    inverseFlag                         = false;
    normalizeLuminanceFlag              = true;
    normalizeStdDev                     = true;
    jitterFlag                          = 0;
    padValue                            = 0;
    inputPath                           = "/nh/compneuro/Data/PASCAL_VOC/VOC2007/VOC2007_landscape_192X256_list.txt";
    displayPeriod                       = 1200;
    echoFramePathnameFlag               = true;
    start_frame_index                   = 0;
    skip_frame_index                    = 0;
    writeFrameToTimestamp               = true;
    flipOnTimescaleError                = true;
    resetToStartOnLoop                  = false;
};

// S1 layers

ANNLayer "ImageReconS1" = {
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 3;
    phase                               = 4;
    triggerLayerName                    = NULL;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    initializeFromCheckpointFlag        = false;
    InitVType                           = "ZeroV";
    writeStep                           = 1200; //4800;
    initialWriteTime                    = 1200; //4800;
    sparseLayer                         = false;
    updateGpu                           = false;
    dataType                            = NULL;
    VThresh                             = -3.40282e+38;
    AMin                                = -3.40282e+38;
    AMax                                = 3.40282e+38;
    AShift                              = 0;
    VWidth                              = 0;
    clearGSynInterval                   = 0;
};


ANNNormalizedErrorLayer "ImageReconS1Error" = {
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 3;
    phase                               = 1;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    initializeFromCheckpointFlag        = false;
    InitVType                           = "ZeroV";
    triggerLayerName                    = NULL;
    writeStep                           = 1200;
    initialWriteTime                    = 1200;
    sparseLayer                         = false;
    updateGpu                           = false;
    dataType                            = NULL;
    VThresh                             = 0;
    AMin                                = 0;
    AMax                                = 3.40282e+38;
    AShift                              = 0;
    VWidth                              = 0;
    clearGSynInterval                   = 0;
    errScale                            = 1;
};

ConstantLayer "ConstantS1" = {
    nxScale                             = 0.5;
    nyScale                             = 0.5;
    nf                                  = 128;
    phase                               = 0;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    initializeFromCheckpointFlag        = false;
    InitVType                           = "ConstantV";
    valueV                              = 0.0125; 
    writeStep                           = -1;
    sparseLayer                         = false;
    updateGpu                           = false;
    VThresh                             = -3.40282e+38;
    AMin                                = -3.40282e+38;
    AMax                                = 3.40282e+38;
    AShift                              = 0;
    VWidth                              = 0;
};


HyPerLCALayer "S1" = {
  nxScale                             = 0.5;
  nyScale                             = 0.5;
  nf                                  = 128;
  phase                               = 3;
  mirrorBCflag                        = false;
  valueBC                             = 0;
  initializeFromCheckpointFlag        = false;
  InitVType                           = "InitVFromFile";
  Vfilename                           = "/nh/compneuro/Data/PASCAL_VOC/PASCAL_S1_128_S2_256_S3_512_MaxPool/VOC2007_landscape9/Checkpoints/Checkpoint2112000/S1_V.pvp";
  //InitVType                           = "UniformRandomV";
  //minV                                = -1.0;
  //maxV                                = .05; //0.05 above VThresh    
  triggerLayerName                    = "Image";
  triggerBehavior                     = "resetStateOnTrigger";
  triggerResetLayerName               = "ConstantS1";
  triggerOffset                       = 0;
  writeStep                           = 1200;
  initialWriteTime                    = 1200;
  sparseLayer                         = true;
  writeSparseValues                   = true;
  updateGpu                           = false; //true;
  dataType                            = NULL;
  VThresh                             = 0.0125; 
  AMin                                = 0;
  AMax                                = 3.40282e+38;
  AShift                              = 0;
  VWidth                              = 10;
  clearGSynInterval                   = 0;
  //numChannels                         = 2;
  timeConstantTau                     = 400;
  numWindowX                          = 1;
  numWindowY                          = 1;
  selfInteract                        = true;
};

ANNLayer "S1MaxPool" = {
#include "ImageReconS1";
  @phase                               = 4; 
  @nxScale                             = 0.25;
  @nyScale                             = 0.25;
  @nf                                  = 128;
};


PoolingIndexLayer "S1MaxPoolIdx" = {
    restart                            = 0;
    nxScale                            = .25;
    nyScale                            = .25;
    nf                                 = 128;
    writeStep                          = -1.0;
    initialWriteTime                   = 0.0;
    mirrorBCflag                       = false;
    valueBC                            = 0.0;
    sparseLayer                        = 0;
    //
    InitVType                          = "ZeroV"; 
    VThresh                            = -infinity;
    AMax                               = infinity;
    AMin                               = -infinity; 
    AShift                             = 0.0;
    VWidth                             = 0.0;
    // 
    phase                              = 5; 
    triggerLayerName                    = NULL;
};

// S2 layers

ANNErrorLayer "S1MaxPoolReconS2Error" = {
    nxScale                             = 0.25;
    nyScale                             = 0.25;
    nf                                  = 128;
    phase                               = 6;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    initializeFromCheckpointFlag        = false;
    InitVType                           = "ZeroV";
    triggerLayerName                    = NULL;
    writeStep                           = 4800;
    initialWriteTime                    = 4800;
    sparseLayer                         = false;
    updateGpu                           = false;
    dataType                            = NULL;
    VThresh                             = 0;
    AMin                                = 0;
    AMax                                = 3.40282e+38;
    AShift                              = 0;
    VWidth                              = 0;
    clearGSynInterval                   = 0;
    errScale                            = 1;
};

ConstantLayer "ConstantS2" = {
#include "ConstantS1";
  @nxScale                             = 0.25;
  @nyScale                             = 0.25;
  @nf                                  = 256;
  @valueV                              = 0.0125; //;
};


HyPerLCALayer "S2" = {
#include "S1";
  @nxScale                             = 0.25;
  @nyScale                             = 0.25;
  @nf                                  = 256; 
  @timeConstantTau                     = 400; // 800; //
  @Vfilename = "/nh/compneuro/Data/PASCAL_VOC/PASCAL_S1_128_S2_256_S3_512_MaxPool/VOC2007_landscape9/Checkpoints/Checkpoint2112000/S2_V.pvp";
  @VThresh                             = 0.0125; 
  @phase                               = 7;  
  @triggerResetLayerName               = "ConstantS2";
};


ANNLayer "S1MaxPoolReconS2" = {
#include "ImageReconS1";
  @nxScale                             = 0.25;
  @nyScale                             = 0.25;
  @nf                                  = 128;
  @initialWriteTime                    = -1;
  @writeStep                           = -1;
  @phase                               = 8;  
};

ANNLayer "S1ReconS2" = {
#include "ImageReconS1";
  @nxScale                             = 0.5;
  @nyScale                             = 0.5;
  @nf                                  = 128;
  @phase                               = 9;
  @initialWriteTime                    = -1;
  @writeStep                           = -1;
  @triggerLayerName                     = "Image";
  triggerBehavior                     = "updateOnlyOnTrigger";
  triggerOffset                        = 1;
};


ANNLayer "ImageReconS2" = {
#include "ImageReconS1";
  @phase                               = 10;  
  @triggerLayerName                     = "Image";
  triggerBehavior                     = "updateOnlyOnTrigger";
  triggerOffset                        = 1;
};


ANNLayer "S2MaxPool" = {
#include "S1MaxPool";
  @phase                               = 8; 
  @nxScale                             = 0.125;
  @nyScale                             = 0.125;
  @nf                                  = 256;
};

PoolingIndexLayer "S2MaxPoolIdx" = {
#include "S1MaxPoolIdx";
  @phase                               = 9; 
  @nxScale                             = 0.125;
  @nyScale                             = 0.125;
  @nf                                  = 256;
};


// S3 layers

ANNErrorLayer "S2MaxPoolReconS3Error" = {
#include "S1MaxPoolReconS2Error";
  @nxScale                             = 0.125;
  @nyScale                             = 0.125;
  @nf                                  = 256;
  @phase                               = 10;
};

ConstantLayer "ConstantS3" = {
#include "ConstantS2";
  @nxScale                             = 0.125;
  @nyScale                             = 0.125;
  @nf                                  = 512;
  @valueV                              = 0.003125; 
};


HyPerLCALayer "S3" = {
#include "S2";
  @nxScale                             = 0.125;
  @nyScale                             = 0.125;
  @nf                                  = 512; 
  @timeConstantTau                     = 400; // 1200; //
  @Vfilename = "/nh/compneuro/Data/PASCAL_VOC/PASCAL_S1_128_S2_256_S3_512_MaxPool/VOC2007_landscape9/Checkpoints/Checkpoint2112000/S3_V.pvp";
  @VThresh                             = 0.003125; 
  @phase                               = 11;  
  @triggerResetLayerName               = "ConstantS3";
};

ANNLayer "S2MaxPoolReconS3" = {
#include "S1MaxPoolReconS2";
  @nxScale                             = 0.125;
  @nyScale                             = 0.125;
  @nf                                  = 256;
  @phase                               = 12;  
};

ANNLayer "S2ReconS3" = {
#include "S1ReconS2";
  @nxScale                             = 0.25;
  @nyScale                             = 0.25;
  @nf                                  = 256;
  @phase                               = 12;  
};

ANNLayer "S1MaxPoolReconS3" = {
#include "S1ReconS2";
  @nxScale                             = 0.25;
  @nyScale                             = 0.25;
  @phase                               = 13;  
};

ANNLayer "S1ReconS3" = {
#include "S1ReconS2";
  @phase                               = 14;  
};

ANNLayer "ImageReconS3" = {
#include "ImageReconS2";
  @phase                               = 15;  
};


// Ground Truth
MoviePvp "GroundTruthPixels" = {
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 20;
    sparseLayer                         = true;
    writeStep                           = -1;
    initialWriteTime                    = -1;
    writeSparseValues                   = false;
    autoResizeFlag                      = false;
    normalizeLuminanceFlag              = false;
    inputPath                       = "/nh/compneuro/Data/PASCAL_VOC/VOC2007/VOC2007_landscape_192X256.pvp";
    readPvpFile                         = true;
    phase                               = 0;
    mirrorBCflag                        = true;
    initializeFromCheckpointFlag        = false;
    updateGpu                           = false;
    dataType                            = NULL;
    offsetAnchor                        = "tl";
    offsetX                             = 0;
    offsetY                             = 0;
    writeImages                         = 0;
    useImageBCflag                      = false;
    inverseFlag                         = false;
    normalizeStdDev                     = true;
    jitterFlag                          = 0;
    padValue                            = 0;
    displayPeriod                       = 1200;
    echoFramePathnameFlag               = true;
    start_frame_index                   = 0;
    skip_frame_index                    = 0;
    writeFrameToTimestamp               = true;
    flipOnTimescaleError                = true;
    resetToStartOnLoop                  = false;
};

ANNLayer "GroundTruthNoBackground" = {
#include "ImageReconS1";
  @nxScale                             = 0.03125;
  @nyScale                             = 0.03125;
  @nf                                  = 20;
  @phase                               = 1;
  @triggerLayerName                    = "GroundTruthPixels";
  triggerBehavior                      = "updateOnlyOnTrigger";
  triggerOffset                        = 0;
  @sparseLayer                         = true;
  writeSparseValues                    = false;
  @writeStep                           = -1;
  @initialWriteTime                    = -1;
};

BackgroundLayer "GroundTruth" = {
  nxScale                             = 0.03125;
  nyScale                             = 0.03125;
  nf                                  = 21; //One more than input * rep
  writeStep                           = 1200; //4800.0;
  initialWriteTime                    = 1200; //4800.0;
  mirrorBCflag                        = false;
  valueBC                             = 0.0;
  sparseLayer                         = true;
  writeSparseValues                   = false;
  //
  InitVType                           = "ZeroV";
  //repFeatureNum = 4; //Replicating each feature 4 times
  // 
  phase                               = 2; 
  triggerLayerName                    = "GroundTruthPixels";
  triggerBehavior                     = "updateOnlyOnTrigger";
  triggerOffset                       = 0;
  originalLayerName                   = "GroundTruthNoBackground";
};

ANNErrorLayer "GroundTruthReconS3Error" = {
#include "S1MaxPoolReconS2Error";
  @nxScale                             = 0.03125;
  @nyScale                             = 0.03125;
  @nf                                  = 21;
  @phase                               = 10;
  @writeStep                           = 1200; //4800.0;
  @initialWriteTime                    = 1200; //4800.0;
  @triggerLayerName                     = "GroundTruthPixels";
  triggerBehavior                     = "updateOnlyOnTrigger";
  triggerOffset                        = 1;
};

ANNLayer "GroundTruthReconS3" = {
#include "ImageReconS1";
  @nxScale                             = 0.03125;
  @nyScale                             = 0.03125;
  @nf                                  = 21;
  @phase                               = 9;
  @writeStep                           = 1200; //4800.0;
  @initialWriteTime                    = 1200; //4800.0;
  @triggerLayerName                     = "GroundTruthPixels";
  triggerBehavior                     = "updateOnlyOnTrigger";
  triggerOffset                        = 1;
};

ConstantLayer "BiasS3" = {
    nxScale                             = 0.03125;
    nyScale                             = 0.03125;
    nf                                  = 1;
    phase                               = 0;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    initializeFromCheckpointFlag        = false;
    InitVType                           = "ConstantV";
    valueV                              = 1;
    writeStep                           = -1;
    sparseLayer                         = false;
    updateGpu                           = false;
    VThresh                             = -3.40282e+38;
    AMin                                = -3.40282e+38;
    AMax                                = 3.40282e+38;
    AShift                              = 0;
    VWidth                              = 0;
};

ANNLayer "S3MaxPooled" = {
#include "GroundTruthReconS3";
  @nf                                  = 512;
  @phase                               = 8;
  @writeStep                           = -1;
};

ANNErrorLayer "GroundTruthReconS2Error" = {
#include "GroundTruthReconS3Error";
};

ANNLayer "GroundTruthReconS2" = {
#include "GroundTruthReconS3";
};

ConstantLayer "BiasS2" = {
#include "BiasS3";
};

ANNLayer "S2MaxPooled" = {
#include "S3MaxPooled";
  @nf                                  = 256;
};

ANNErrorLayer "GroundTruthReconS1Error" = {
#include "GroundTruthReconS2Error";
};

ANNLayer "GroundTruthReconS1" = {
#include "GroundTruthReconS3";
};

ConstantLayer "BiasS1" = {
#include "BiasS3";
};

ANNLayer "S1MaxPooled" = {
#include "S3MaxPooled";
  @nf                                  = 128;
};

ANNErrorLayer "GroundTruthReconS1S2S3Error" = {
#include "GroundTruthReconS3Error";
};

ANNLayer "GroundTruthReconS1S2S3" = {
#include "GroundTruthReconS3";
};

ConstantLayer "BiasS1S2S3" = {
#include "BiasS3";
};





//
//Connections
//

//  Image connections

HyPerConn "ImageToImageReconS1Error" = {
    preLayerName                        = "Image";
    postLayerName                       = "ImageReconS1Error";
    channelCode                         = 0;
    delay                               = [0.000000];
    numAxonalArbors                     = 1;
    plasticityFlag                      = false;
    convertRateToSpikeCount             = false;
    receiveGpu                          = false;
    sharedWeights                       = true;
    weightInitType                      = "OneToOneWeights";
    initWeightsFile                     = NULL;
    weightInit                          = 0.032075;
    initializeFromCheckpointFlag        = false;
    updateGSynFromPostPerspective       = false;
    pvpatchAccumulateType               = "convolve";
    writeStep                           = -1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    nxp                                 = 1;
    nyp                                 = 1;
    shrinkPatches                       = false;
    normalizeMethod                     = "none";
};

// S1 Connections

MomentumConn "S1ToImageReconS1Error" = {
    preLayerName                        = "S1";
    postLayerName                       = "ImageReconS1Error";
    channelCode                         = -1;
    delay                               = [0.000000];
    numAxonalArbors                     = 1;
    plasticityFlag                      = true;
    convertRateToSpikeCount             = false;
    receiveGpu                          = false;
    sharedWeights                       = true;
    weightInitType                      = "FileWeight";
    initWeightsFile                     = "/nh/compneuro/Data/PASCAL_VOC/PASCAL_S1_128_S2_256_S3_512_MaxPool/VOC2007_landscape9/Checkpoints/Checkpoint2112000/S1ToImageReconS1Error_W.pvp";
    useListOfArborFiles                 = false;
    combineWeightFiles                  = false;
    //weightInitType                      = "UniformRandomWeight";
    //wMinInit                            = -1.0;
    //wMaxInit                            = 1.0;
    //sparseFraction                      = .90;
    initializeFromCheckpointFlag        = true; //false;
    triggerFlag                         = true;
    triggerLayerName                    = "Image";
    triggerOffset                       = 1;
    updateGSynFromPostPerspective       = false;
    pvpatchAccumulateType               = "convolve";
    writeStep                           = -1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    combine_dW_with_W_flag              = false;
    nxp                                 = 18;
    nyp                                 = 18;
    shrinkPatches                       = false;
    normalizeMethod                     = "normalizeL2";
    strength                            = 1;
    normalizeArborsIndividually         = false;
    normalizeOnInitialize               = true;
    normalizeOnWeightUpdate             = true;
    rMinX                               = 0;
    rMinY                               = 0;
    nonnegativeConstraintFlag           = false;
    normalize_cutoff                    = 0;
    normalizeFromPostPerspective        = false;
    minL2NormTolerated                  = 0;
    dWMax                               = 10.0; //1.0; //0.5; //0.1;
    keepKernelsSynchronized             = true;
    useMask                             = false;
    momentumTau                         = 400;
    momentumMethod                      = "viscosity";
    momentumDecay                       = 0;
};

TransposeConn "ImageReconS1ErrorToS1" = {
    preLayerName                        = "ImageReconS1Error";
    postLayerName                       = "S1";
    channelCode                         = 0;
    delay                               = [0.000000];
    convertRateToSpikeCount             = false;
    receiveGpu                          = true;
    updateGSynFromPostPerspective       = true;
    pvpatchAccumulateType               = "convolve";
    writeStep                           = -1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    gpuGroupIdx                         = -1;
    originalConnName                    = "S1ToImageReconS1Error";
};


CloneConn "S1ToImageReconS1" = {
    preLayerName                        = "S1";
    postLayerName                       = "ImageReconS1";
    channelCode                         = 0;
    delay                               = [0.000000];
    convertRateToSpikeCount             = false;
    receiveGpu                          = false;
    updateGSynFromPostPerspective       = false;
    pvpatchAccumulateType               = "convolve";
    writeStep                           = -1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    originalConnName                    = "S1ToImageReconS1Error";
};

IdentConn "ImageReconS1ToImageReconS1Error" = {
    preLayerName                        = "ImageReconS1";
    postLayerName                       = "ImageReconS1Error";
    channelCode                         = 1;
    delay                               = 0;
    writeStep                           = -1;
};



// S2 connections


PoolingConn "S1ToS1MaxPool" = {
    preLayerName                        = "S1";
    postLayerName                       = "S1MaxPool";
    channelCode                         = 0;
    delay                               = [0.000000];
    numAxonalArbors                     = 1;
    plasticityFlag                      = false;
    convertRateToSpikeCount             = false;
    receiveGpu                          = false;
    sharedWeights                       = true;
    // initWeightsFile                     was set to (NULL);
    initializeFromCheckpointFlag        = false;
    updateGSynFromPostPerspective       = true;
    pvpatchAccumulateType               = "maxpooling";
    writeStep                           = -1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    nxp                                 = 1;
    nyp                                 = 1;
    //nfp                                 = 20;
    shrinkPatches                       = false;
    normalizeMethod                     = "none";
    needPostIndexLayer                  = true;
    postIndexLayerName                  = "S1MaxPoolIdx";
};


IdentConn "S1MaxPoolToS1MaxPoolReconS2Error" = {
    preLayerName                        = "S1MaxPool";
    postLayerName                       = "S1MaxPoolReconS2Error";
    channelCode                         = 0;
    delay                               = 0;
    writeStep                           = -1;
};


MomentumConn "S2ToS1MaxPoolReconS2Error" = {
#include "S1ToImageReconS1Error";
  @preLayerName                         = "S2";
  @postLayerName                        = "S1MaxPoolReconS2Error";
  @nxp                                  = 5;
  @nyp                                  = 5;
  @initWeightsFile = "/nh/compneuro/Data/PASCAL_VOC/PASCAL_S1_128_S2_256_S3_512_MaxPool/VOC2007_landscape9/Checkpoints/Checkpoint2112000/S2ToS1MaxPoolReconS2Error_W.pvp";
  //@dWMax                                = 1.0;
  //@normalizeMethod                      = "normalizeGroup";
  //normalizeGroupName                    = "S2ToS1ReconS2Error";
};


TransposeConn "S1MaxPoolReconS2ErrorToS2" = {
#include "ImageReconS1ErrorToS1";
  @preLayerName                         = "S1MaxPoolReconS2Error";
  @postLayerName                        = "S2";
  @originalConnName                     = "S2ToS1MaxPoolReconS2Error";
};

CloneConn "S2ToS1MaxPoolReconS2" = {
#include "S1ToImageReconS1";
  @preLayerName                         = "S2";
  @postLayerName                        = "S1MaxPoolReconS2";
  @originalConnName                     = "S2ToS1MaxPoolReconS2Error";
};

IdentConn "S1MaxPoolReconS2ToS1MaxPoolReconS2Error" = {
    preLayerName                        = "S1MaxPoolReconS2";
    postLayerName                       = "S1MaxPoolReconS2Error";
    channelCode                         = 1;
    delay                               = 0;
    writeStep                           = -1;
};

TransposePoolingConn "S1MaxPoolReconS2ToS1ReconS2" = {
    preLayerName = "S1MaxPoolReconS2";
    postLayerName = "S1ReconS2";
    channelCode = 0;
    originalConnName = "S1ToS1MaxPool";
    selfFlag = false;
    preActivityIsNotRate = false;  // should help make response more indepenent of time step size dt
    writeStep = -1;
    writeCompressedCheckpoints = false;
    shmget_flag = false;
    delay = 0;
    pvpatchAccumulateType = "maxpooling";
    updateGSynFromPostPerspective = false;
};


CloneConn "S1ReconS2ToImageReconS2" = {
#include "S1ToImageReconS1";
  @preLayerName                         = "S1ReconS2";
  @postLayerName                        = "ImageReconS2";
  @originalConnName                     = "S1ToImageReconS1Error";
  @receiveGpu                          = true;
  @updateGSynFromPostPerspective       = true;
};



// S3 connections

PoolingConn "S2ToS2MaxPool" = {
#include "S1ToS1MaxPool";
  @preLayerName                        = "S2";
  @postLayerName                       = "S2MaxPool";
  @postIndexLayerName                  = "S1MaxPoolIdx";
};


IdentConn "S2MaxPoolToS2MaxPoolReconS3Error" = {
    preLayerName                        = "S2MaxPool";
    postLayerName                       = "S2MaxPoolReconS3Error";
    channelCode                         = 0;
    delay                               = 0;
    writeStep                           = -1;
};


MomentumConn "S3ToS2MaxPoolReconS3Error" = {
#include "S2ToS1MaxPoolReconS2Error";
  @preLayerName                         = "S3";
  @postLayerName                        = "S2MaxPoolReconS3Error";
  @initWeightsFile = "/nh/compneuro/Data/PASCAL_VOC/PASCAL_S1_128_S2_256_S3_512_MaxPool/VOC2007_landscape9/Checkpoints/Checkpoint2112000/S3ToS2MaxPoolReconS3Error_W.pvp";
  //@dWMax                                = 1.0;
  //@normalizeMethod                      = "normalizeGroup";
  //normalizeGroupName                    = "S2ToS1ReconS2Error";
};


TransposeConn "S2MaxPoolReconS3ErrorToS3" = {
#include "S1MaxPoolReconS2ErrorToS2";
  @preLayerName                         = "S2MaxPoolReconS3Error";
  @postLayerName                        = "S3";
  @originalConnName                     = "S3ToS2MaxPoolReconS3Error";
};

CloneConn "S3ToS2MaxPoolReconS3" = {
#include "S2ToS1MaxPoolReconS2";
  @preLayerName                         = "S3";
  @postLayerName                        = "S2MaxPoolReconS3";
  @originalConnName                     = "S3ToS2MaxPoolReconS3Error";
};

IdentConn "S2MaxPoolReconS3ToS2MaxPoolReconS3Error" = {
    preLayerName                        = "S2MaxPoolReconS3";
    postLayerName                       = "S2MaxPoolReconS3Error";
    channelCode                         = 1;
    delay                               = 0;
    writeStep                           = -1;
};

TransposePoolingConn "S2MaxPoolReconS3ToS2ReconS3" = {
#include "S1MaxPoolReconS2ToS1ReconS2";
  @preLayerName = "S2MaxPoolReconS3";
  @postLayerName = "S2ReconS3";
  @originalConnName = "S2ToS2MaxPool";
};

CloneConn "S2ReconS3ToS1MaxPoolReconS3" = {
#include "S2ToS1MaxPoolReconS2";
  @preLayerName                         = "S2ReconS3";
  @postLayerName                        = "S1MaxPoolReconS3";
  @originalConnName                     = "S2ToS1MaxPoolReconS2Error";
};

TransposePoolingConn "S1MaxPoolReconS3ToS1ReconS3" = {
#include "S1MaxPoolReconS2ToS1ReconS2";
  @preLayerName = "S1MaxPoolReconS3";
  @postLayerName = "S1ReconS3";
  @originalConnName = "S1ToS1MaxPool";
};


CloneConn "S1ReconS3ToImageReconS3" = {
#include "S1ReconS2ToImageReconS2";
  @preLayerName                         = "S1ReconS3";
  @postLayerName                        = "ImageReconS3";
  @originalConnName                     = "S1ToImageReconS1Error";
};

// Ground Truth connections

PoolingConn "GroundTruthPixelsToGroundTruthNoBackground" = {
    preLayerName                        = "GroundTruthPixels";
    postLayerName                       = "GroundTruthNoBackground";
    channelCode                         = 0;
    delay                               = [0.000000];
    numAxonalArbors                     = 1;
    convertRateToSpikeCount             = false;
    receiveGpu                          = false;
    sharedWeights                       = true;
    initializeFromCheckpointFlag        = false;
    updateGSynFromPostPerspective       = false;
    pvpatchAccumulateType               = "maxpooling";
    writeStep                           = -1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    nxp                                 = 1;
    nyp                                 = 1;
    shrinkPatches                       = false;
    needPostIndexLayer                  = false;
};

IdentConn "GroundTruthToGroundTruthReconS3Error" = {
    preLayerName                        = "GroundTruth";
    postLayerName                       = "GroundTruthReconS3Error";
    channelCode                         = 0;
    delay                               = [0.000000];
    initWeightsFile                     = NULL;
    writeStep                           = -1;
};

IdentConn "GroundTruthToGroundTruthReconS2Error" = {
    preLayerName                        = "GroundTruth";
    postLayerName                       = "GroundTruthReconS2Error";
    channelCode                         = 0;
    delay                               = [0.000000];
    initWeightsFile                     = NULL;
    writeStep                           = -1;
};

IdentConn "GroundTruthToGroundTruthReconS1Error" = {
    preLayerName                        = "GroundTruth";
    postLayerName                       = "GroundTruthReconS1Error";
    channelCode                         = 0;
    delay                               = [0.000000];
    initWeightsFile                     = NULL;
    writeStep                           = -1;
};

IdentConn "GroundTruthToGroundTruthReconS1S2S3Error" = {
    preLayerName                        = "GroundTruth";
    postLayerName                       = "GroundTruthReconS1S2S3Error";
    channelCode                         = 0;
    delay                               = [0.000000];
    initWeightsFile                     = NULL;
    writeStep                           = -1;
};

PoolingConn "S3ToS3MaxPooled" = {
#include "GroundTruthPixelsToGroundTruthNoBackground";
  @preLayerName                        = "S3";
  @postLayerName                       = "S3MaxPooled";
  @nxp                                 = 1;
  @nyp                                 = 1;
};

PoolingConn "S2ToS2MaxPooled" = {
#include "GroundTruthPixelsToGroundTruthNoBackground";
  @preLayerName                        = "S2";
  @postLayerName                       = "S2MaxPooled";
  @nxp                                 = 1;
  @nyp                                 = 1;
};

PoolingConn "S1ToS1MaxPooled" = {
#include "GroundTruthPixelsToGroundTruthNoBackground";
  @preLayerName                        = "S1";
  @postLayerName                       = "S1MaxPooled";
  @nxp                                 = 1;
  @nyp                                 = 1;
};


MomentumConn "S3MaxPooledToGroundTruthReconS3Error" = {
#include "S3ToS2MaxPoolReconS3Error";
  @preLayerName                        = "S3MaxPooled";
  @postLayerName                       = "GroundTruthReconS3Error";
  @nxp                                 = 1;
  @nyp                                 = 1;
  //@channelCode                         = 0;
  @initWeightsFile = "/nh/compneuro/Data/PASCAL_VOC/PASCAL_S1_128_S2_256_S3_512_MaxPool/VOC2007_landscape9/Checkpoints/Checkpoint2112000/S3MaxPooledToGroundTruthReconS3Error_W.pvp";
  @normalizeMethod                     = "none";
  //@weightInitType                      = "UniformRandomWeight";
  //@initWeightsFile                     = NULL;
  //wMinInit                            = -0.0;
  //wMaxInit                            = 0.0;
  @dWMax                              = 5.0; //0.5; //0.01;
  @momentumMethod                     = "viscosity";
  @momentumTau                        = 1;
};

MomentumConn "S2MaxPooledToGroundTruthReconS2Error" = {
#include "S3MaxPooledToGroundTruthReconS3Error";
  @preLayerName                        = "S2MaxPooled";
  @postLayerName                       = "GroundTruthReconS2Error";
  @initWeightsFile = "/nh/compneuro/Data/PASCAL_VOC/PASCAL_S1_128_S2_256_S3_512_MaxPool/VOC2007_landscape9/Checkpoints/Checkpoint2112000/S2MaxPooledToGroundTruthReconS2Error_W.pvp";
};

MomentumConn "S1MaxPooledToGroundTruthReconS1Error" = {
#include "S3MaxPooledToGroundTruthReconS3Error";
  @preLayerName                        = "S1MaxPooled";
  @postLayerName                       = "GroundTruthReconS1Error";
  @initWeightsFile = "/nh/compneuro/Data/PASCAL_VOC/PASCAL_S1_128_S2_256_S3_512_MaxPool/VOC2007_landscape9/Checkpoints/Checkpoint2112000/S1MaxPooledToGroundTruthReconS1Error_W.pvp";
};

MomentumConn "S1MaxPooledToGroundTruthReconS1S2S3Error" = {
#include "S3MaxPooledToGroundTruthReconS3Error";
  @preLayerName                        = "S1MaxPooled";
  @postLayerName                       = "GroundTruthReconS1S2S3Error";
  @initWeightsFile = "/nh/compneuro/Data/PASCAL_VOC/PASCAL_S1_128_S2_256_S3_512_MaxPool/VOC2007_landscape9/Checkpoints/Checkpoint2112000/S1MaxPooledToGroundTruthReconS1S2S3Error_W.pvp";
  //@weightInitType                      = "UniformRandomWeight";
  //@initWeightsFile                     = NULL;
  //wMinInit                            = -0.0;
  //wMaxInit                            = 0.0;
};

MomentumConn "S2MaxPooledToGroundTruthReconS1S2S3Error" = {
#include "S1MaxPooledToGroundTruthReconS1S2S3Error";
  @preLayerName                        = "S2MaxPooled";
  @postLayerName                       = "GroundTruthReconS1S2S3Error";
  @initWeightsFile = "/nh/compneuro/Data/PASCAL_VOC/PASCAL_S1_128_S2_256_S3_512_MaxPool/VOC2007_landscape9/Checkpoints/Checkpoint2112000/S2MaxPooledToGroundTruthReconS1S2S3Error_W.pvp";
};

MomentumConn "S3MaxPooledToGroundTruthReconS1S2S3Error" = {
#include "S1MaxPooledToGroundTruthReconS1S2S3Error";
  @preLayerName                        = "S3MaxPooled";
  @postLayerName                       = "GroundTruthReconS1S2S3Error";
  @initWeightsFile = "/nh/compneuro/Data/PASCAL_VOC/PASCAL_S1_128_S2_256_S3_512_MaxPool/VOC2007_landscape9/Checkpoints/Checkpoint2112000/S3MaxPooledToGroundTruthReconS1S2S3Error_W.pvp";
};

MomentumConn "BiasS3ToGroundTruthReconS3Error" = {
#include "S3MaxPooledToGroundTruthReconS3Error";
  @preLayerName                        = "BiasS3";
  @postLayerName                       = "GroundTruthReconS3Error";
  @initWeightsFile = "/nh/compneuro/Data/PASCAL_VOC/PASCAL_S1_128_S2_256_S3_512_MaxPool/VOC2007_landscape9/Checkpoints/Checkpoint2112000/BiasS3ToGroundTruthReconS3Error_W.pvp";
  //@weightInitType                      = "UniformRandomWeight";
  //@initWeightsFile                     = NULL;
  //wMinInit                            = -0.0;
  //wMaxInit                            = 0.0;
  @dWMax                              = 0.01;
  //@momentumMethod                     = "viscosity";
  //@momentumTau                        = 1;
};

MomentumConn "BiasS2ToGroundTruthReconS2Error" = {
#include "BiasS3ToGroundTruthReconS3Error";
  @preLayerName                        = "BiasS2";
  @postLayerName                       = "GroundTruthReconS2Error";
  @initWeightsFile = "/nh/compneuro/Data/PASCAL_VOC/PASCAL_S1_128_S2_256_S3_512_MaxPool/VOC2007_landscape9/Checkpoints/Checkpoint2112000/BiasS2ToGroundTruthReconS2Error_W.pvp";
};

MomentumConn "BiasS1ToGroundTruthReconS1Error" = {
#include "BiasS3ToGroundTruthReconS3Error";
  @preLayerName                        = "BiasS1";
  @postLayerName                       = "GroundTruthReconS1Error";
  @initWeightsFile = "/nh/compneuro/Data/PASCAL_VOC/PASCAL_S1_128_S2_256_S3_512_MaxPool/VOC2007_landscape9/Checkpoints/Checkpoint2112000/BiasS1ToGroundTruthReconS1Error_W.pvp";
};

MomentumConn "BiasS1S2S3ToGroundTruthReconS1S2S3Error" = {
#include "BiasS3ToGroundTruthReconS3Error";
  @preLayerName                        = "BiasS1S2S3";
  @postLayerName                       = "GroundTruthReconS1S2S3Error";
  @initWeightsFile = "/nh/compneuro/Data/PASCAL_VOC/PASCAL_S1_128_S2_256_S3_512_MaxPool/VOC2007_landscape9/Checkpoints/Checkpoint2112000/BiasS1S2S3ToGroundTruthReconS1S2S3Error_W.pvp";
  //@weightInitType                      = "UniformRandomWeight";
  //@initWeightsFile                     = NULL;
  //wMinInit                            = -0.0;
  //wMaxInit                            = 0.0;
};

CloneConn "S3MaxPooledToGroundTruthReconS3" = {
#include "S3ToS2MaxPoolReconS3";
  @preLayerName                        = "S3MaxPooled";
  @postLayerName                       = "GroundTruthReconS3";
  @originalConnName                    = "S3MaxPooledToGroundTruthReconS3Error";
};

CloneConn "S2MaxPooledToGroundTruthReconS2" = {
#include "S3MaxPooledToGroundTruthReconS3";
  @preLayerName                        = "S2MaxPooled";
  @postLayerName                       = "GroundTruthReconS2";
  @originalConnName                    = "S2MaxPooledToGroundTruthReconS2Error";
};

CloneConn "S1MaxPooledToGroundTruthReconS1" = {
#include "S3MaxPooledToGroundTruthReconS3";
  @preLayerName                        = "S1MaxPooled";
  @postLayerName                       = "GroundTruthReconS1";
  @originalConnName                    = "S1MaxPooledToGroundTruthReconS1Error";
};

CloneConn "S1MaxPooledToGroundTruthReconS1S2S3" = {
#include "S3MaxPooledToGroundTruthReconS3";
  @preLayerName                        = "S1MaxPooled";
  @postLayerName                       = "GroundTruthReconS1S2S3";
  @originalConnName                    = "S1MaxPooledToGroundTruthReconS1S2S3Error";
};

CloneConn "S2MaxPooledToGroundTruthReconS1S2S3" = {
#include "S3MaxPooledToGroundTruthReconS3";
  @preLayerName                        = "S2MaxPooled";
  @postLayerName                       = "GroundTruthReconS1S2S3";
  @originalConnName                    = "S2MaxPooledToGroundTruthReconS1S2S3Error";
};

CloneConn "S3MaxPooledToGroundTruthReconS1S2S3" = {
#include "S3MaxPooledToGroundTruthReconS3";
  @preLayerName                        = "S3MaxPooled";
  @postLayerName                       = "GroundTruthReconS1S2S3";
  @originalConnName                    = "S3MaxPooledToGroundTruthReconS1S2S3Error";
};

CloneConn "BiasS3ToGroundTruthReconS3" = {
#include "S3MaxPooledToGroundTruthReconS3";
  @preLayerName                        = "BiasS3";
  @postLayerName                       = "GroundTruthReconS3";
  @originalConnName                    = "BiasS3ToGroundTruthReconS3Error";
};

CloneConn "BiasS2ToGroundTruthReconS2" = {
#include "S3MaxPooledToGroundTruthReconS3";
  @preLayerName                        = "BiasS2";
  @postLayerName                       = "GroundTruthReconS2";
  @originalConnName                    = "BiasS2ToGroundTruthReconS2Error";
};

CloneConn "BiasS1ToGroundTruthReconS1" = {
#include "S3MaxPooledToGroundTruthReconS3";
  @preLayerName                        = "BiasS1";
  @postLayerName                       = "GroundTruthReconS1";
  @originalConnName                    = "BiasS1ToGroundTruthReconS1Error";
};

CloneConn "BiasS1S2S3ToGroundTruthReconS1S2S3" = {
#include "S3MaxPooledToGroundTruthReconS3";
  @preLayerName                        = "BiasS1S2S3";
  @postLayerName                       = "GroundTruthReconS1S2S3";
  @originalConnName                    = "BiasS1S2S3ToGroundTruthReconS1S2S3Error";
};

IdentConn "GroundTruthReconS3ToGroundTruthReconS3Error" = {
    preLayerName                        = "GroundTruthReconS3";
    postLayerName                       = "GroundTruthReconS3Error";
    channelCode                         = 1;
    delay                               = [0.000000];
    initWeightsFile                     = NULL;
    writeStep                           = -1;
};

IdentConn "GroundTruthReconS2ToGroundTruthReconS2Error" = {
    preLayerName                        = "GroundTruthReconS2";
    postLayerName                       = "GroundTruthReconS2Error";
    channelCode                         = 1;
    delay                               = [0.000000];
    initWeightsFile                     = NULL;
    writeStep                           = -1;
};

IdentConn "GroundTruthReconS1ToGroundTruthReconS1Error" = {
    preLayerName                        = "GroundTruthReconS1";
    postLayerName                       = "GroundTruthReconS1Error";
    channelCode                         = 1;
    delay                               = [0.000000];
    initWeightsFile                     = NULL;
    writeStep                           = -1;
};

IdentConn "GroundTruthReconS1S2S3ToGroundTruthReconS1S2S3Error" = {
    preLayerName                        = "GroundTruthReconS1S2S3";
    postLayerName                       = "GroundTruthReconS1S2S3Error";
    channelCode                         = 1;
    delay                               = [0.000000];
    initWeightsFile                     = NULL;
    writeStep                           = -1;
};


