debugParsing = true;
HyPerCol "column" = {
    progressStep = 10;
    startTime = 0;
    outputPath = "/home/sheng/mountData/benchmark/featuremap/icaweights_binoc_LCA_fine/";
    deleteOlderCheckpoints = true;
    nx = 1200;
    ny = 360;
    dtAdaptFlag = false;
    suppressLastOutput = true;
    randomSeed = 1234567890;
    outputNamesOfLayersAndConns = "LayerAndConnNames.txt";
    dt = 1;
    checkpointRead = false;
    writeProgressToErr = true;
    checkpointWrite = false;
    filenamesContainConnectionNames = 2;
    filenamesContainLayerNames = 2;
    stopTime = 1;
};

MoviePvp "V1" = {
    writeSparseValues = true;
    useImageBCflag = false;
    echoFramePathnameFlag = true;
    jitterFlag = 0;
    writeFrameToTimestamp = true;
    inputPath = "~/mountData/benchmark/icaweights_binoc_LCA_fine/a12_V1.pvp";
    sparseLayer = true;
    restart = 0;
    offsetX = 0;
    nf = 512;
    nxScale = 0.25;
    nyScale = 0.25;
    phase = 0;
    randomMovie = 0;
    offsetY = 0;
    autoResizeFlag = 0;
    writeImages = false;
    normalizeLuminanceFlag = false;
    inverseFlag = false;
    displayPeriod = 1;
    mirrorBCflag = true;
    skip_frame_index = 1;
    start_frame_index = 150;
    writeStep = -1;
};

ANNLayer "RightRecon_slice" = {
    VThresh = -infinity;
    triggerFlag = false;
    valueBC = 0;
    phase = 3;
    writeStep = 1;
    initializeFromCheckpointFlag = false;
    sparseLayer = false;
    updateGpu = false;
    nf = 1;
    nxScale = 0.5;
    nyScale = 0.5;
    initialWriteTime = 1;
    clearGSynInterval = 0;
    AShift = 0;
    AMin = -infinity;
    mirrorBCflag = false;
    InitVType = "ZeroV";
    AMax = infinity;
    VWidth = 0;
};

CloneConn "V1_slice_ToRightRecon_slice" = {
    pvpatchAccumulateType = "convolve";
    channelCode = 0;
    convertRateToSpikeCount = false;
    updateGSynFromPostPerspective = false;
    receiveGpu = false;
    delay = 0;
    writeStep = -1;
    preLayerName = "V1_slice";
    postLayerName = "RightRecon_slice";
    writeCompressedCheckpoints = false;
    selfFlag = false;
    originalConnName = "V1ToRightRecon";
};

MaskLayer "V1_slice" = {
    InitVType = "ZeroV";
    nf = 512;
    nxScale = 0.25;
    nyScale = 0.25;
    triggerFlag = false;
    valueBC = 0;
    AMax = infinity;
    AMin = -infinity;
    phase = 1;
    writeStep = -1;
    VThresh = -infinity;
    maskMethod = "noMaskFeatures";
    sparseLayer = 1;
    writeSparseValues = 1;
    mirrorBCflag = false;
};

HyPerConn "V1ToLeftRecon" = {
    shrinkPatches = false;
    initFromLastFlag = 0;
    channelCode = -1;
    normalizeFromPostPerspective = false;
    writeCompressedCheckpoints = false;
    nxp = 66;
    selfFlag = false;
    postLayerName = "LeftRecon_slice";
    sharedWeights = true;
    symmetrizeWeights = false;
    weightInitType = "FileWeight";
    useWindowPost = false;
    strength = 1;
    normalize_cutoff = 0;
    updateGSynFromPostPerspective = false;
    nyp = 66;
    numAxonalArbors = 1;
    delay = 0;
    normalizeArborsIndividually = 0;
    pvpatchAccumulateType = "convolve";
    shmget_flag = false;
    initialWriteTime = 0;
    keepKernelsSynchronized = true;
    normalizeMethod = "normalizeL2";
    writeCompressedWeights = false;
    writeStep = -1;
    preLayerName = "V1";
    initWeightsFile = "/home/sheng/mountData/benchmark/icaweights_binoc_LCA_fine/Checkpoints/Checkpoint194000/V1ToLeftError_W.pvp";
    preActivityIsNotRate = false;
    minL2NormTolerated = 0;
    plasticityFlag = false;
    combine_dW_with_W_flag = false;
};

HyPerConn "V1ToRightRecon" = {
    normalizeMethod = "normalizeL2";
    initFromLastFlag = 0;
    preActivityIsNotRate = false;
    normalizeFromPostPerspective = false;
    writeCompressedCheckpoints = false;
    writeStep = -1;
    selfFlag = false;
    postLayerName = "RightRecon_slice";
    sharedWeights = true;
    symmetrizeWeights = false;
    weightInitType = "FileWeight";
    useWindowPost = false;
    strength = 1;
    normalize_cutoff = 0;
    updateGSynFromPostPerspective = false;
    nyp = 66;
    shmget_flag = false;
    writeCompressedWeights = false;
    normalizeArborsIndividually = 0;
    pvpatchAccumulateType = "convolve";
    minL2NormTolerated = 0;
    initialWriteTime = 0;
    keepKernelsSynchronized = true;
    shrinkPatches = false;
    delay = 0;
    channelCode = -1;
    preLayerName = "V1";
    initWeightsFile = "/home/sheng/mountData/benchmark/icaweights_binoc_LCA_fine/Checkpoints/Checkpoint194000/V1ToRightError_W.pvp";
    nxp = 66;
    numAxonalArbors = 1;
    plasticityFlag = false;
    combine_dW_with_W_flag = false;
};

ParameterSweep "V1_slice":featureIdxs  = {
    0;
    1;
    2;
    3;
    4;
    5;
    6;
    7;
    8;
    9;
    10;
    11;
    12;
    13;
    14;
    15;
    16;
    17;
    18;
    19;
    20;
    21;
    22;
    23;
    24;
    25;
    26;
    27;
    28;
    29;
    30;
    31;
    32;
    33;
    34;
    35;
    36;
    37;
    38;
    39;
    40;
    41;
    42;
    43;
    44;
    45;
    46;
    47;
    48;
    49;
    50;
    51;
    52;
    53;
    54;
    55;
    56;
    57;
    58;
    59;
    60;
    61;
    62;
    63;
    64;
    65;
    66;
    67;
    68;
    69;
    70;
    71;
    72;
    73;
    74;
    75;
    76;
    77;
    78;
    79;
    80;
    81;
    82;
    83;
    84;
    85;
    86;
    87;
    88;
    89;
    90;
    91;
    92;
    93;
    94;
    95;
    96;
    97;
    98;
    99;
    100;
    101;
    102;
    103;
    104;
    105;
    106;
    107;
    108;
    109;
    110;
    111;
    112;
    113;
    114;
    115;
    116;
    117;
    118;
    119;
    120;
    121;
    122;
    123;
    124;
    125;
    126;
    127;
    128;
    129;
    130;
    131;
    132;
    133;
    134;
    135;
    136;
    137;
    138;
    139;
    140;
    141;
    142;
    143;
    144;
    145;
    146;
    147;
    148;
    149;
    150;
    151;
    152;
    153;
    154;
    155;
    156;
    157;
    158;
    159;
    160;
    161;
    162;
    163;
    164;
    165;
    166;
    167;
    168;
    169;
    170;
    171;
    172;
    173;
    174;
    175;
    176;
    177;
    178;
    179;
    180;
    181;
    182;
    183;
    184;
    185;
    186;
    187;
    188;
    189;
    190;
    191;
    192;
    193;
    194;
    195;
    196;
    197;
    198;
    199;
    200;
    201;
    202;
    203;
    204;
    205;
    206;
    207;
    208;
    209;
    210;
    211;
    212;
    213;
    214;
    215;
    216;
    217;
    218;
    219;
    220;
    221;
    222;
    223;
    224;
    225;
    226;
    227;
    228;
    229;
    230;
    231;
    232;
    233;
    234;
    235;
    236;
    237;
    238;
    239;
    240;
    241;
    242;
    243;
    244;
    245;
    246;
    247;
    248;
    249;
    250;
    251;
    252;
    253;
    254;
    255;
    256;
    257;
    258;
    259;
    260;
    261;
    262;
    263;
    264;
    265;
    266;
    267;
    268;
    269;
    270;
    271;
    272;
    273;
    274;
    275;
    276;
    277;
    278;
    279;
    280;
    281;
    282;
    283;
    284;
    285;
    286;
    287;
    288;
    289;
    290;
    291;
    292;
    293;
    294;
    295;
    296;
    297;
    298;
    299;
    300;
    301;
    302;
    303;
    304;
    305;
    306;
    307;
    308;
    309;
    310;
    311;
    312;
    313;
    314;
    315;
    316;
    317;
    318;
    319;
    320;
    321;
    322;
    323;
    324;
    325;
    326;
    327;
    328;
    329;
    330;
    331;
    332;
    333;
    334;
    335;
    336;
    337;
    338;
    339;
    340;
    341;
    342;
    343;
    344;
    345;
    346;
    347;
    348;
    349;
    350;
    351;
    352;
    353;
    354;
    355;
    356;
    357;
    358;
    359;
    360;
    361;
    362;
    363;
    364;
    365;
    366;
    367;
    368;
    369;
    370;
    371;
    372;
    373;
    374;
    375;
    376;
    377;
    378;
    379;
    380;
    381;
    382;
    383;
    384;
    385;
    386;
    387;
    388;
    389;
    390;
    391;
    392;
    393;
    394;
    395;
    396;
    397;
    398;
    399;
    400;
    401;
    402;
    403;
    404;
    405;
    406;
    407;
    408;
    409;
    410;
    411;
    412;
    413;
    414;
    415;
    416;
    417;
    418;
    419;
    420;
    421;
    422;
    423;
    424;
    425;
    426;
    427;
    428;
    429;
    430;
    431;
    432;
    433;
    434;
    435;
    436;
    437;
    438;
    439;
    440;
    441;
    442;
    443;
    444;
    445;
    446;
    447;
    448;
    449;
    450;
    451;
    452;
    453;
    454;
    455;
    456;
    457;
    458;
    459;
    460;
    461;
    462;
    463;
    464;
    465;
    466;
    467;
    468;
    469;
    470;
    471;
    472;
    473;
    474;
    475;
    476;
    477;
    478;
    479;
    480;
    481;
    482;
    483;
    484;
    485;
    486;
    487;
    488;
    489;
    490;
    491;
    492;
    493;
    494;
    495;
    496;
    497;
    498;
    499;
    500;
    501;
    502;
    503;
    504;
    505;
    506;
    507;
    508;
    509;
    510;
    511;
};

ANNLayer "LeftRecon_slice" = {
    VThresh = -infinity;
    triggerFlag = false;
    valueBC = 0;
    phase = 3;
    writeStep = 1;
    initializeFromCheckpointFlag = false;
    sparseLayer = false;
    updateGpu = false;
    nf = 1;
    nxScale = 0.5;
    nyScale = 0.5;
    initialWriteTime = 1;
    clearGSynInterval = 0;
    AShift = 0;
    AMin = -infinity;
    VWidth = 0;
    AMax = infinity;
    InitVType = "ZeroV";
    mirrorBCflag = false;
};

IdentConn "V1ToV1_slice" = {
    delay = 0;
    writeStep = -1;
    preLayerName = "V1";
    postLayerName = "V1_slice";
    channelCode = 0;
};

CloneConn "V1_slice_ToLeftRecon_slice" = {
    pvpatchAccumulateType = "convolve";
    channelCode = 0;
    originalConnName = "V1ToLeftRecon";
    updateGSynFromPostPerspective = false;
    selfFlag = false;
    delay = 0;
    writeStep = -1;
    preLayerName = "V1_slice";
    postLayerName = "LeftRecon_slice";
    writeCompressedCheckpoints = false;
    receiveGpu = false;
    convertRateToSpikeCount = false;
};

