debugParsing = false;    // Debug the reading of this parameter file.

HyPerCol "column" = {
   nx = 1024; //1226, one pixel cropped from both sides;  // KITTI synced value
   ny = 256;  //370, two pixels cropped from the top;
   dt = 1.0;  //time step in ms.	     
   randomSeed = 2394853940;  // Must be at least 8 digits long.  // if not set here,  clock time is used to generate seed
   startTime = 0.0;
   stopTime = 1000000.0; //100 training steps  
   progressInterval = 10.0; //Program will output its progress at each progressStep
   writeProgressToErr = false;  

   outputPath = "/home/ec2-user/mountData/dictLearn/depth_alex";
   filenamesContainLayerNames = true;
   filenamesContainConnectionNames = true;

   checkpointRead = false; //true;
   checkpointWrite = true;
   checkpointWriteDir = "/home/ec2-user/mountData/dictLearn/depth_alex/Checkpoints";
   checkpointWriteStepInterval = 50;
   deleteOlderCheckpoints = true;
   //suppressLastOutput = false;
   outputNamesOfLayersAndConns = "LayerAndConnNames.txt";
};

//
// layers
//

// left eye layers

Movie "LeftImage" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    readPvpFile = false;
    imageListPath = "/home/ec2-user/mountData/kitti/list/image_02_aws.txt";
    writeFrameToTimestamp = true;
    nf = 1;
    writeStep = -1;
    initialWriteTime = 1;
    writeSparseActivity = false;
    displayPeriod = 1;
    start_frame_index = 3800;
    skip_frame_index = 1;
    echoFramePathnameFlag = false;
    mirrorBCflag = true;
    jitterFlag = 0;
    useImageBCflag = false;
    inverseFlag = false;
    normalizeLuminanceFlag = true;
    writeImages = false;
    offsetAnchor = "bc"; //Offset anchor from bottom left
    offsetX = 0;
    offsetY = 0;
    autoResizeFlag = 0;
    randomMovie = 0;
    phase = 0;
    //useParamsImage = true;
};

ANNLayer "LeftBipolar" = {
   nxScale                             = .5;
   nyScale                             = .5;
   nf                                  = 1;
   phase                               = 1;
   mirrorBCflag                        = true;
   InitVType                           = "ZeroV";
   triggerFlag                         = true;
   triggerLayerName                    = "LeftImage";
   triggerOffset                       = 0;
   writeStep                           = -1;
   sparseLayer                         = false;
   updateGpu                           = false;
   VThresh                             = -3.40282e+38;
   AMin                                = -3.40282e+38;
   AMax                                = 3.40282e+38;
   AShift                              = 0;
   VWidth                              = 0;
};

ANNLayer "LeftGanglion" = {
   nxScale                             = .5;
   nyScale                             = .5;
   nf                                  = 1;
   phase                               = 2;
   mirrorBCflag                        = true;
   InitVType                           = "ZeroV";
   triggerFlag                         = true;
   triggerLayerName                    = "LeftImage";
   triggerOffset                       = 0;
   writeStep                           = -1;
   initialWriteTime                    = 200;
   sparseLayer                         = false;
   updateGpu                           = false;
   VThresh                             = -3.40282e+38;
   AMin                                = -3.40282e+38;
   AMax                                = 3.40282e+38;
   AShift                              = 0;
   VWidth                              = 0;
};

RescaleLayer "LeftRescale" = {
    restart                         = false;
    originalLayerName               = "LeftGanglion";
    nxScale                         = .5;
    nyScale                         = .5;
    nf                              = 1;
    mirrorBCflag                    = true;
    //
    writeStep                       = 1;
    initialWriteTime                = 1;
    writeSparseActivity             = false;
    //
    rescaleMethod                   = "l2"; //Can be either meanstd or maxmin
    patchSize                       = 4356; //66*66
    valueBC = 0;
    phase                           = 3;
    triggerFlag                         = true;
    triggerLayerName = "LeftImage";
};

//
// Right eye layers
//

Movie "RightImage" = {
    #include "LeftImage";
    @imageListPath = "/home/ec2-user/mountData/kitti/list/image_03_aws.txt";
};

ANNLayer "RightBipolar" = {
    #include "LeftBipolar";
    @triggerLayerName = "RightImage";
};

ANNLayer "RightGanglion" = {
    #include "LeftGanglion";
    @triggerLayerName = "RightImage";
};

RescaleLayer "RightRescale" = {
   #include "LeftRescale";
   @originalLayerName = "RightGanglion";
};

//ConstantLayer "onesLayer" = {
//    restart = 0;
//    //Set layer to be 1x1x1
//    nxScale = 0.0008333333333; 
//    nyScale = 0.002777777778;
//    nf = 1;
//    writeStep = -1;
//    initialWriteTime = 0.0;
//    mirrorBCflag = 0;
//    writeSparseActivity = false;
//    InitVType = "ConstantV";
//    valueV    = 1;
//    VThresh = -infinity;   
//    phase = 0;
//};

//Depth ground truth layers
Movie "DepthImage" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    readPvpFile = false; 
    imageListPath = "/home/ec2-user/mountData/kitti/list/depth_aws.txt";
    writeFrameToTimestamp = true;
    nf = 1;
    writeStep = -1;
    sparseLayer = false;
    displayPeriod = 1;
    start_frame_index = 3800;
    skip_frame_index = 1;
    echoFramePathnameFlag = true;
    mirrorBCflag = false;
    jitterFlag = 0;
    useImageBCflag = false;
    inverseFlag = false;
    normalizeLuminanceFlag = false;
    writeImages = false;
    offsetAnchor = "bc"; //Offset anchor from bottom left
    offsetX = 0; //1 px offset from the left
    offsetY = 0; //offset 0 from bottom
    randomMovie = 0;
    autoResizeFlag = 0;
    phase = 0;
    //useParamsImage = true;
};

ANNLayer "DepthDownsample" = {
    restart = 0;
    nxScale = .25;
    nyScale = .25;
    nf = 1;
    writeStep = 1;
    initialWriteTime = 1.0;
    mirrorBCflag = false;
    writeSparseActivity = 0;
    InitVType = "ZeroV";
    VThresh = -infinity;
    VMax =  infinity;
    VMin = -infinity;
    VShift = 0;
    VWidth = 0;
    triggerFlag = 1;
    triggerLayerName = "DepthImage";
    triggerOffset = 0;
    //
    phase = 1;  
};

//This is the ground truth layer
BinningLayer "DepthGT" = {
    restart = 0;
    nxScale = .25; 
    nyScale = .25;
    nf = 64; //3 pixel error allowed, we may need to change this 
    writeStep = -1.0;
    initialWriteTime = 1.0;
    mirrorBCflag = false;
    sparseLayer = true;
    binMax = 1;
    binMin = 0;
    binSigma = 3;
    zeroNeg = false; //Set negative gt values as -1
    zeroDCR = true; //Zero values from the buffer is set to 0
    normalDist = false; //Max value will always be 1 as opposed to normal distribution
    delay = 0;
    originalLayerName = "DepthDownsample";
    phase = 2;
    triggerFlag = 1;
    triggerLayerName = "DepthImage";
    triggerOffset = 0;
};

ANNLayer "HiddenLayer1" = {
    restart = 0;
    nxScale = .25;
    nyScale = .25;
    nf = 512;
    writeStep = -1; //Change based on display period
    initialWriteTime = 0.0; //Change based on display period 
    mirrorBCflag = 0;
    writeSparseActivity = 0;
    InitVType = "ZeroV";
    phase = 4;
    //rectified
    VThresh = 0;
    VMax = infinity;
    VMin = 0;
};

ANNLayer "FinalLayer" = {
   #include "HiddenLayer1";
   @nxScale = .25;
   @nyScale = .25;
   @nf = 64;
   @phase = 5;
   @VThresh = -infinity;
   @VMin = -infinity;
   @writeStep = -1; //Change based on display period
};

//For visualization
WTALayer "FinalOut" = {
    restart = 0;
    nxScale = .25; 
    nyScale = .25;
    nf = 1; 
    writeStep = 1.0;
    initialWriteTime = 1.0;
    mirrorBCflag = false;
    writeSparseActivity = false;
    delay = 0;
    originalLayerName = "FinalLayer";
    phase = 6;
};

MaskLayer "FinalError" = {
   nxScale = .25;
   nyScale = .25;
   nf = 64;
   writeStep = -1;
   mirrorBCflag = 0;
   InitVType = "ZeroV";
   VThresh = -infinity;
   phase = 6;
   maskLayerName = "DepthDownsample";
   sparseLayer = true;
};

MaskLayer "Error1" = {
    restart = 0;
    nxScale = .25;
    nyScale = .25;
    nf = 512;
    writeStep = -1; //Change based on display period
    mirrorBCflag = 0;
    writeSparseActivity = 0;
    InitVType = "ZeroV";
    VThresh = -infinity;
    phase = 7;
    maskLayerName = "HiddenLayer1";
};

//Connections
//Input/GT connections

KernelConn "LeftImageToLeftBipolarCenter" = {
   preLayerName                        = "LeftImage";
   postLayerName                       = "LeftBipolar";
   channelCode                         = 0;
   delay                               = [0.000000];
   numAxonalArbors                     = 1;
   plasticityFlag                      = false;
   convertRateToSpikeCount             = false;
   receiveGpu                          = false;
   weightInitType                      = "Gauss2DWeight";
   // initWeightsFile                     was set to (NULL);
   aspect                              = 1;
   sigma                               = .5;
   rMax                                = 3;
   rMin                                = 0;
   strength                            = 1;
   updateGSynFromPostPerspective       = false;
   pvpatchAccumulateType               = "convolve";
   writeStep                           = -1;
   writeCompressedCheckpoints          = false;
   selfFlag                            = false;
   nxp                                 = 3;
   nyp                                 = 3;
   nfp                                 = 1;
   shrinkPatches                       = false;
   normalizeMethod                     = "normalizeSum";
   normalizeArborsIndividually         = false;
   normalizeOnInitialize               = true;
   normalizeOnWeightUpdate             = true;
   rMinX                               = 0;
   rMinY                               = 0;
   nonnegativeConstraintFlag           = false;
   normalize_cutoff                    = 0;
   normalizeFromPostPerspective        = true;
   minSumTolerated                     = 0;
};

KernelConn "LeftBipolarToLeftGanglionCenter" = {
   preLayerName                        = "LeftBipolar";
   postLayerName                       = "LeftGanglion";
   channelCode                         = 0;
   delay                               = [0.000000];
   numAxonalArbors                     = 1;
   plasticityFlag                      = false;
   convertRateToSpikeCount             = false;
   receiveGpu                          = false;
   weightInitType                      = "Gauss2DWeight";
   // initWeightsFile                     was set to (NULL);
   aspect                              = 1;
   sigma                               = 1;
   rMax                                = 3;
   rMin                                = 0;
   strength                            = 1;
   updateGSynFromPostPerspective       = false;
   pvpatchAccumulateType               = "convolve";
   writeStep                           = -1;
   writeCompressedCheckpoints          = false;
   selfFlag                            = false;
   nxp                                 = 1;
   nyp                                 = 1;
   nfp                                 = 1;
   shrinkPatches                       = false;
   normalizeMethod                     = "normalizeSum";
   normalizeArborsIndividually         = false;
   normalizeOnInitialize               = true;
   normalizeOnWeightUpdate             = true;
   rMinX                               = 0;
   rMinY                               = 0;
   nonnegativeConstraintFlag           = false;
   normalize_cutoff                    = 0;
   normalizeFromPostPerspective        = true;
   minSumTolerated                     = 0;
};

KernelConn "LeftBipolarToLeftGanglionSurround" = {
   preLayerName                        = "LeftBipolar";
   postLayerName                       = "LeftGanglion";
   channelCode                         = 1;
   delay                               = [0.000000];
   numAxonalArbors                     = 1;
   plasticityFlag                      = false;
   convertRateToSpikeCount             = false;
   receiveGpu                          = false;
   weightInitType                      = "Gauss2DWeight";
   // initWeightsFile                     was set to (NULL);
   aspect                              = 1;
   sigma                               = 5.5;
   rMax                                = 7.5;
   rMin                                = 0.5;
   strength                            = 1;
   updateGSynFromPostPerspective       = false;
   pvpatchAccumulateType               = "convolve";
   writeStep                           = -1;
   writeCompressedCheckpoints          = false;
   selfFlag                            = false;
   nxp                                 = 11;
   nyp                                 = 11;
   nfp                                 = 1;
   shrinkPatches                       = false;
   normalizeMethod                     = "normalizeSum";
   normalizeArborsIndividually         = false;
   normalizeOnInitialize               = true;
   normalizeOnWeightUpdate             = true;
   rMinX                               = 0;
   rMinY                               = 0;
   nonnegativeConstraintFlag           = false;
   normalize_cutoff                    = 0;
   normalizeFromPostPerspective        = true;
   minSumTolerated                     = 0;
};

// Right eye connections

KernelConn "RightImageToRightBipolarCenter" = {
    #include "LeftImageToLeftBipolarCenter";
    @preLayerName = "RightImage";
    @postLayerName = "RightBipolar";
};

KernelConn "RightBipolarToRightGanglionCenter" = {
    #include "LeftBipolarToLeftGanglionCenter";
    @preLayerName = "RightBipolar";
    @postLayerName = "RightGanglion";
};

KernelConn "RightBipolarToRightGanglionSurround" = {
    #include "LeftBipolarToLeftGanglionSurround";
    @preLayerName = "RightBipolar";
    @postLayerName = "RightGanglion";
};

//Depth connections
PoolingConn "DepthImageToDepthDownsample" = {
    preLayerName = "DepthImage";
    postLayerName = "DepthDownsample";
    channelCode = 0;
    sharedWeights = true;
    nxp = 1; 
    nyp = 1; 
    numAxonalArbors = 1;
    initFromLastFlag = 0;  // 1;  // restart
    writeStep = -1;
    initialWriteTime = 0.0;
    writeCompressedWeights = false;
    
    shrinkPatches = false;
    //writeCompressedWeights = 0.0;
    writeCompressedCheckpoints = false;
    plasticityFlag = 0;
    pvpatchAccumulateType = "maxpooling";
     
    delay = 0;
     
    convertRateToSpikeCount = false;
    selfFlag = false;

    updateGSynFromPostPerspective = true;
    useWindowPost = false;

    keepKernelsSynchronized             = true;
};

//Network connections
KernelConn "W1LeftPlasticity" = {
    preLayerName = "Error1";
    postLayerName = "LeftRescale";
    channelCode = -1; //Does not update on this channel
    nxp = 66;
    nyp = 66; 
    numAxonalArbors = 1;
    initFromLastFlag = 0;  // 1;  // restart
    writeStep = 100;
    
    weightInitType = "FileWeight";
    initWeightsFile = "/home/ec2-user/mountData/dictLearn/depth_alex_saved/W1LeftPlasticity_W.pvp";
    //weightInitType = "UniformRandomWeight";
    //wMinInit = -1;
    //wMaxInit = 1;
    //sparseFraction = .90;
        
    strength = 1.0;  
    normalizeMethod = "normalizeL2";
    minL2NormTolerated = 0;
    normalizeArborsIndividually = 0;
    normalize_cutoff = 0.0;
    normalizeFromPostPerspective = false;
    symmetrizeWeights = false;

    sharedWeights = true;
    
    shrinkPatches = false;
    //writeCompressedWeights = 0.0;
    writeCompressedCheckpoints = false;
    plasticityFlag = 1;
    weightUpdatePeriod = 1.0;
    initialWeightUpdateTime = 1.0;

    dWMax = .001; // 200.0 used for initial training
    //momentumTau = 100;
    //momentumMethod = "viscosity";

    delay = 0;
     
    preActivityIsNotRate = false;
    selfFlag = false;

    updateGSynFromPostPerspective = false;
    pvpatchAccumulateType = "convolve";
};

TransposeConn "W1Left" = {
    preLayerName = "LeftRescale";
    postLayerName = "HiddenLayer1";
    channelCode = 0; //On exc channel
    writeStep = -1;
    originalConnName = "W1LeftPlasticity";
    selfFlag = false;
    delay = 0;
    preActivityIsNotRate = false;
    useWindowPost = false;
    updateGSynFromPostPerspective = true;
    receiveGpu = true;
    pvpatchAccumulateType = "convolve";

};
KernelConn "W1RightPlasticity" = {
   #include "W1LeftPlasticity";
   @postLayerName = "RightRescale";
   @initWeightsFile = "/home/ec2-user/mountData/dictLearn/depth_alex_saved/W1RightPlasticity_W.pvp";
   @normalizeMethod = "normalizeGroup";
   normalizeGroupName = "W1LeftPlasticity";
};

TransposeConn "W1Right" = {
   #include "W1Left";
   @preLayerName = "RightRescale";
   @originalConnName = "W1RightPlasticity";
};

//KernelConn "B1Plasticity" = {
//    preLayerName = "onesLayer";
//    postLayerName = "Error1";
//    channelCode = -1; //Does not update on this channel
//    nxp = 256; 
//    nyp = 256; 
//    numAxonalArbors = 1;
//    initFromLastFlag = 0;  // 1;  // restart
//    writeStep = -1;
//    sharedWeights = true;
//    
//    weightInitType = "UniformWeight";
//    weightInit = 0;
//        
//    strength = 1.0;  
//    normalizeMethod = "none";
//    
//    shrinkPatches = false;
//    //writeCompressedWeights = 0.0;
//    writeCompressedCheckpoints = false;
//    plasticityFlag = 1;
//    weightUpdatePeriod = 1.0;
//    initialWeightUpdateTime = 1.0;
//    dWMax = .01; // 200.0 used for initial training 
//    delay = 0;
//     
//    preActivityIsNotRate = false;
//    selfFlag = false;
//
//    updateGSynFromPostPerspective = false;
//    pvpatchAccumulateType = "convolve";
//};
//
//CloneKernelConn "B1" = {
//    preLayerName = "onesLayer";
//    postLayerName = "HiddenLayer1";
//    channelCode = 0; //On exc channel
//    writeStep = -1;
//    originalConnName = "B1Plasticity";
//    selfFlag = false;
//    delay = 0;
//    preActivityIsNotRate = false;
//    useWindowPost = false;
//    updateGSynFromPostPerspective = false;
//    pvpatchAccumulateType = "convolve";
//};

KernelConn "W2Plasticity" = {
   #include "W1LeftPlasticity";
   @nxp = 33;
   @nyp = 33;
   @preLayerName = "HiddenLayer1";
   @postLayerName = "FinalError";
   @dWMax = .0001; // 200.0 used for initial training
   @normalizeMethod = "none";
   @writeStep = -1;

   //@wMinInit = -0.001;
   //@wMaxInit = 0.001;
   @initWeightsFile = "/home/ec2-user/mountData/dictLearn/depth_alex_saved/W2Plasticity_W.pvp";

   useMask = true;
   maskLayerName = "DepthDownsample";
};

CloneKernelConn "W2" = {
    preLayerName = "HiddenLayer1";
    postLayerName = "FinalLayer";
    channelCode = 0; //On exc channel
    writeStep = -1;
    originalConnName = "W2Plasticity";
    selfFlag = false;
    delay = 0;
    preActivityIsNotRate = false;
    useWindowPost = false;
    updateGSynFromPostPerspective = true;
    receiveGpu = true;
    pvpatchAccumulateType = "convolve";
};

//KernelConn "B2Plasticity" = {
//   #include "B1Plasticity";
//   @postLayerName = "FinalError";
//};
//
//
//CloneKernelConn "B2" = {
//   #include "B1";
//   @postLayerName = "FinalLayer";
//   @originalConnName = "B2Plasticity";
//};

TransposeConn "W2T" = {
    preLayerName = "FinalError";
    postLayerName = "Error1";
    channelCode = 0; //On excitatory channel
    originalConnName = "W2Plasticity";
    selfFlag = false;
    preActivityIsNotRate = false;  // should help make response more indepenent of time step size dt
    writeStep = -1;
    writeCompressedCheckpoints = false;
    delay = 0;
    pvpatchAccumulateType = "convolve";
    updateGSynFromPostPerspective = false;
    receiveGpu = true;
};

////These 2 transpose do not do anything, here for analysis purposes
//TransposeConn "W1TLeft" = {
//    preLayerName = "Error1";
//    postLayerName = "LeftRescale";
//    channelCode = -1;
//    originalConnName = "W1LeftPlasticity";
//    selfFlag = false;
//    preActivityIsNotRate = false;
//    writeStep = -1;
//    writeCompressedCheckpoints = false;
//    delay = 0;
//    pvpatchAccumulateType = "convolve";
//    updateGSynFromPostPerspective = false;
//};
//
//TransposeConn "W1TRight" = {
//    preLayerName = "Error1";
//    postLayerName = "RightRescale";
//    channelCode = -1;
//    originalConnName = "W1RightPlasticity";
//    selfFlag = false;
//    preActivityIsNotRate = false;
//    writeStep = -1;
//    writeCompressedCheckpoints = false;
//    delay = 0;
//    pvpatchAccumulateType = "convolve";
//    updateGSynFromPostPerspective = false;
//};

IdentConn "gtToFinalError" = {
    preLayerName = "DepthGT";
    postLayerName = "FinalError";
    channelCode = 0;
    writeStep = -1;    
    delay = 0;
};

IdentConn "FinalLayerToFinalError" = {
    preLayerName = "FinalLayer";
    postLayerName = "FinalError";
    channelCode = 1;
    writeStep = -1;    
    delay = 0;
};


