// // HyPerHLCA.params
//
// created by peteschultz: Sept 27, 2012, modified mdubey December 23, 2014
//
//
// Implements the locally competitive algorithm described in
// Rozell et al., "Sparse Coding via Thresholding and Local Competition
// in Neural Circuits," Neural Computation 20, 2526-2563 (2008).
///////////////////////////

debugParsing = true;

HyPerCol "column" = {
    nx                              = 1;//always 1x1
    ny                              = 1;
    dt                              = .00022675737; // downsampling = dt * sampleRate
    randomSeed                      = 1234567890;  // Must be at least 8 digits long.  // if not set here,  clock time is used to generate seed
    stopTime                        = 150; // in seconds
    progressInterval                = .00022675737; // dt
    outputPath                      = "longupdate";
    filenamesContainLayerNames      = true;
    filenamesContainConnectionNames = true;
    checkpointRead                  = false; // deprecated
    checkpointWrite                 = true;
    checkpointWriteDir              = "longupdate/checkpoints";
    checkpointWriteStepInterval     = 2210; //numdelays
    deleteOlderCheckpoints          = false;
    writeProgressToErr              = true;
    outputNamesOfLayersAndConns     = "LayerAndConnNames.txt";
    printTimescales                 = false;
    dtAdaptFlag = false; // set to determine expected errors


    //initializeFromCheckpointDir     = "/Users/MLD/newvision/sandbox/soundAnalysis/output/checkpoints/Checkpoint1";

};



//
// layers
//

SoundStream "Sound" = {  // layer not used
    restart                = 0;
    nxScale                = 1;
    nyScale                = 1;
    soundInputPath         = "input/furElise.wav";
    nf                     = 1; // mono vs. stereo
    writeStep              = -1.0 ;
    initialWriteTime       = 0;
    writeSparseActivity    = false;
    displayPeriod          = 1;  // unnecessary
    soundBCFlag            = true;
    soundOffset            = 0; //In seconds
    phase = 0;
};


NewCochlearLayer "NewCochlear" = {

    restart = 0;
    nxScale = 64; //number of cochlear hair cells, useful as power of two (1024)
    nyScale = 1;
    nf = 1;
    writeStep = .00022675737; //dt
    initialWriteTime = 0.0;
    mirrorBCflag = 0;
    writeSparseActivity = 0;

    //InitVType = "ZeroV";

    VThresh = -infinity;
    VMax = infinity;
    VMin = -infinity;
    VShift = 0;
    VWidth = 0;

    inputLayername = "Sound";
    targetChannel = 0;

    equalTemperedFlag = true;
    freqMin = 50;
    freqMax = 20000;

    dampingRatio = .5; // not used

    sampleRate = 44100;
    cochlearScale = 10000000; // used for reconstruction only

    //displayPeriod = .000022675737; //downsample here


    //soundstream params

    soundInputPath         = "input/furElise.wav";
    soundBCFlag            = true;
    soundOffset            = 0; //In seconds


    valueV                          = 0.0;
    Vrest                           = 0.0;

    phase = 0;


};

ANNLayer "PositiveCochlear" = {

    restart = 0;
    nxScale = 64; //numfreqs
    nyScale = 1;
    nf = 1;
    marginWidth = 0;
    writeStep = -.05; // .00022675737;
    initialWriteTime = 0;
    mirrorBCflag = 1;
    writeSparseActivity = 0;
    //
    InitVType = "ZeroV";
    //
    VThresh = 0; // change to desired threshold
    AMax = infinity;
    AMin = 0;
    VWidth = 0;
    AShift = 0;
    //
    phase = 1;

};

ANNLayer "NegativeCochlear" = {

    restart = 0;
    nxScale = 64; // numfreqs
    nyScale = 1;
    nf = 1;
    marginWidth = 0;
    writeStep = -.05; // .00022675737;
    initialWriteTime = 0;
    mirrorBCflag = 1;
    writeSparseActivity = 0;
    //
    InitVType = "ZeroV";
    //
    VThresh = 0; // change to desired threshold
    AMax = infinity;
    AMin = 0;
    VWidth = 0;
    AShift = 0;
    //
    phase = 1;

};


ANNNormalizedErrorLayer "PositiveError" = {

    restart = 0;
    nxScale = 64; // same as Coclear nxScale
    nyScale = 1;
    nf = 221; //
    initialWriteTime = 0;
    writeStep = .05; // .00022675737; //dt
    mirrorBCflag = 0;
    writeSparseActivity = 0;

    InitVType = "ZeroV";
    //InitVType = "InitVFromFile";
    //Vfilename = "/nh/compneuro/Data/vine/LCA/RETINAvsShuffled_10k/Checkpoints/Checkpoint22000/ErrorON_V.pvp";

    VThresh = 0;
    VMax =  infinity;
    VMin = 0;
    VShift = 0;
    valueBC = 0;

    triggerFlag = false;
    errScale = .5;

    phase = 2;

};

ANNNormalizedErrorLayer "NegativeError" = {

    restart = 0;
    nxScale = 64; // same as Coclear nxScale
    nyScale = 1;
    nf = 221; //
    initialWriteTime = 0;
    writeStep = .05; // .00022675737; //dt
    mirrorBCflag = 0;
    writeSparseActivity = 0;

    InitVType = "ZeroV";
    //InitVType = "InitVFromFile";
    //Vfilename = "/nh/compneuro/Data/vine/LCA/RETINAvsShuffled_10k/Checkpoints/Checkpoint22000/ErrorON_V.pvp";

    VThresh = 0;
    VMax =  infinity;
    VMin = 0;
    VShift = 0;
    valueBC = 0;

    triggerFlag = false;
    errScale = .5;

    phase = 2;
};

HyPerLCALayer "A1" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 64; // numfreqs * numdelays * overcompleteness
    numChannels = 1;
    initialWriteTime = 0;
    writeStep = .05; // .00022675737; //dt
    mirrorBCflag = 0;
    writeSparseActivity = false;
    writeSparseValues = false;

    //initializeFromCheckpointFlag = true;
    InitVType = "UniformRandomV";

    minV = -1.0;
    maxV = .0002;


    timeConstantTau = .08;
    timeConstantTauMinimum = 0;
    //slopeErrorStd = 0.01;

    VThresh = 0.000015;
    VWidth = 0.15;
    AMax = infinity;
    AMin = 0;
    AShift = 0.0;  // 0 -> hard threshold, 1 -> soft threshold
    valueBC = 0;

    updateGpu = false;

    triggerFlag = false;

    phase = 3;
};




ANNLayer "PositiveRecon" = {
    restart = 0;
    nxScale = 64;
    nyScale = 1;
    nf = 221;
    initialWriteTime = 0;
    writeStep = .5;
    mirrorBCflag = 0;
    valueBC = 0;
    writeSparseActivity = 0;

    triggerLayerName = "NewCochlear";
    InitVType = "ZeroV";
    VThresh = -infinity;
    VMax = infinity;     // prevent reconstruction from exceeding reasonable bounds
    VMin = -infinity;
    VShift = 0;
    VWidth = 0;

    triggerFlag = false;
    triggerOffset = 0;
    phase = 4;
};

ANNLayer "NegativeRecon" = {
    restart = 0;
    nxScale = 64;
    nyScale = 1;
    nf = 221;
    initialWriteTime = 1000;
    writeStep = .5;
    mirrorBCflag = 0;
    valueBC = 0;
    writeSparseActivity = 0;

    triggerLayerName = "Newochlear";
    InitVType = "ZeroV";
    VThresh = -infinity;
    VMax = infinity;     // prevent reconstruction from exceeding reasonable bounds
    VMin = -infinity;
    VShift = 0;
    VWidth = 0;

    triggerFlag = false;
    triggerOffset = 0;
    phase = 4;
};

ANNLayer "FullRecon" = {
    restart = 0;
    nxScale = 64; //numfreqs
    nyScale = 1;
    nf = 221; //numdelays
    marginWidth = 0;
    writeStep = .00022675737;
    initialWriteTime = 0;
    mirrorBCflag = 1;
    writeSparseActivity = 0;
    //
    InitVType = "ZeroV";
    //
    VThresh = -infinity; // change to desired threshold
    AMax = infinity;
    AMin = -infinity;
    VWidth = 0;
    AShift = 0;
    //
    phase = 5;

};


///Connections////

IdentConn "CochlearToPositive" = {

    preLayerName = "NewCochlear";
    postLayerName = "PositiveCochlear";

    channelCode = 0;

    //nxp             = 4; //numfreqs
    //nyp             = 1;
    //nfp             = 1;

    // weightInitType = "OneToOneWeights";
    // weightInit = 1;
    // normaizeMethod = "none";


};

IdentConn "CochlearToNegative" = {

    preLayerName = "NewCochlear";
    postLayerName = "NegativeCochlear";

    channelCode = 1;
    //nxp             = 4; //numfreqs
    //nyp             = 1;
    //nfp             = 1;

    //weightInitType = "OneToOneWeights";
    //weightInit = -1;
    //normaizeMethod = "none";


};



KernelConn "PositiveCochlearToPositiveError" = {

    preLayerName = "PositiveCochlear";
    postLayerName = "PositiveError";

    channelCode = 0;
    nxp         = 127; //(2 * numfreqs) - 1 for all to all connection
    nyp         = 1;
    nfp         = 221;


    numAxonalArbors  = 221;

    useWindowPost    = false;
    writeStep        = -1;
    initFromLastFlag = 0;

    delay = [0.0498866214, 0.05011337877, 0.05034013614, 0.05056689351, 0.05079365088, 0.05102040825, 0.05124716562, 0.05147392299, 0.05170068036, 0.05192743773, 0.0521541951, 0.05238095247, 0.05260770984, 0.05283446721, 0.05306122458, 0.05328798195, 0.05351473932, 0.05374149669, 0.05396825406, 0.05419501143, 0.0544217688, 0.05464852617, 0.05487528354, 0.05510204091, 0.05532879828, 0.05555555565, 0.05578231302, 0.05600907039, 0.05623582776, 0.05646258513, 0.0566893425, 0.05691609987, 0.05714285724, 0.05736961461, 0.05759637198, 0.05782312935, 0.05804988672, 0.05827664409, 0.05850340146, 0.05873015883, 0.0589569162, 0.05918367357, 0.05941043094, 0.05963718831, 0.05986394568, 0.06009070305, 0.06031746042, 0.06054421779, 0.06077097516, 0.06099773253, 0.0612244899, 0.06145124727, 0.06167800464, 0.06190476201, 0.06213151938, 0.06235827675, 0.06258503412, 0.06281179149, 0.06303854886, 0.06326530623, 0.0634920636, 0.06371882097, 0.06394557834, 0.06417233571, 0.06439909308, 0.06462585045, 0.06485260782, 0.06507936519, 0.06530612256, 0.06553287993, 0.0657596373, 0.06598639467, 0.06621315204, 0.06643990941, 0.06666666678, 0.06689342415, 0.06712018152, 0.06734693889, 0.06757369626, 0.06780045363, 0.068027211, 0.06825396837, 0.06848072574, 0.06870748311, 0.06893424048, 0.06916099785, 0.06938775522, 0.06961451259, 0.06984126996, 0.07006802733, 0.0702947847, 0.07052154207, 0.07074829944, 0.07097505681, 0.07120181418, 0.07142857155, 0.07165532892, 0.07188208629, 0.07210884366, 0.07233560103, 0.0725623584, 0.07278911577, 0.07301587314, 0.07324263051, 0.07346938788, 0.07369614525, 0.07392290262, 0.07414965999, 0.07437641736, 0.07460317473, 0.0748299321, 0.07505668947, 0.07528344684, 0.07551020421, 0.07573696158, 0.07596371895, 0.07619047632, 0.07641723369, 0.07664399106, 0.07687074843, 0.0770975058, 0.07732426317, 0.07755102054, 0.07777777791, 0.07800453528, 0.07823129265, 0.07845805002, 0.07868480739, 0.07891156476, 0.07913832213, 0.0793650795, 0.07959183687, 0.07981859424, 0.08004535161, 0.08027210898, 0.08049886635, 0.08072562372, 0.08095238109, 0.08117913846, 0.08140589583, 0.0816326532, 0.08185941057, 0.08208616794, 0.08231292531, 0.08253968268, 0.08276644005, 0.08299319742, 0.08321995479, 0.08344671216, 0.08367346953, 0.0839002269, 0.08412698427, 0.08435374164, 0.08458049901, 0.08480725638, 0.08503401375, 0.08526077112, 0.08548752849, 0.08571428586, 0.08594104323, 0.0861678006, 0.08639455797, 0.08662131534, 0.08684807271, 0.08707483008, 0.08730158745, 0.08752834482, 0.08775510219, 0.08798185956, 0.08820861693, 0.0884353743, 0.08866213167, 0.08888888904, 0.08911564641, 0.08934240378, 0.08956916115, 0.08979591852, 0.09002267589, 0.09024943326, 0.09047619063, 0.090702948, 0.09092970537, 0.09115646274, 0.09138322011, 0.09160997748, 0.09183673485, 0.09206349222, 0.09229024959, 0.09251700696, 0.09274376433, 0.0929705217, 0.09319727907, 0.09342403644, 0.09365079381, 0.09387755118, 0.09410430855, 0.09433106592, 0.09455782329, 0.09478458066, 0.09501133803, 0.0952380954, 0.09546485277, 0.09569161014, 0.09591836751, 0.09614512488, 0.09637188225, 0.09659863962, 0.09682539699, 0.09705215436, 0.09727891173, 0.0975056691, 0.09773242647, 0.09795918384, 0.09818594121, 0.09841269858, 0.09863945595, 0.09886621332, 0.09909297069, 0.09931972806, 0.09954648543, 0.0997732428 ];

    weightInitType = "OneToOneWeightsWithDelays";
    weightInit = 1.0;

    normalizeMethod        = "none";
    plasticityFlag         = false;
    pvpatchAccumulateType  = "convolve";
    writeCompressedCheckpoints = true;
    selfFlag               = false;
    shrinkPatches          = false;
    updateGSynFromPostPerspective = false;
    preActivityIsNotRate   = false;
    shmget_flag            = true;
};


KernelConn "NegativeCochlearToNegativeError" = {

    preLayerName = "NegativeCochlear";
    postLayerName = "NegativeError";

    channelCode = 0;
    nxp         = 127; //(2 * numfreqs) - 1 for all to all connection
    nyp         = 1;
    nfp         = 221;

    numAxonalArbors  = 221;

    useWindowPost    = false;
    writeStep        = -1;
    initFromLastFlag = 0;

    delay = [0.0498866214, 0.05011337877, 0.05034013614, 0.05056689351, 0.05079365088, 0.05102040825, 0.05124716562, 0.05147392299, 0.05170068036, 0.05192743773, 0.0521541951, 0.05238095247, 0.05260770984, 0.05283446721, 0.05306122458, 0.05328798195, 0.05351473932, 0.05374149669, 0.05396825406, 0.05419501143, 0.0544217688, 0.05464852617, 0.05487528354, 0.05510204091, 0.05532879828, 0.05555555565, 0.05578231302, 0.05600907039, 0.05623582776, 0.05646258513, 0.0566893425, 0.05691609987, 0.05714285724, 0.05736961461, 0.05759637198, 0.05782312935, 0.05804988672, 0.05827664409, 0.05850340146, 0.05873015883, 0.0589569162, 0.05918367357, 0.05941043094, 0.05963718831, 0.05986394568, 0.06009070305, 0.06031746042, 0.06054421779, 0.06077097516, 0.06099773253, 0.0612244899, 0.06145124727, 0.06167800464, 0.06190476201, 0.06213151938, 0.06235827675, 0.06258503412, 0.06281179149, 0.06303854886, 0.06326530623, 0.0634920636, 0.06371882097, 0.06394557834, 0.06417233571, 0.06439909308, 0.06462585045, 0.06485260782, 0.06507936519, 0.06530612256, 0.06553287993, 0.0657596373, 0.06598639467, 0.06621315204, 0.06643990941, 0.06666666678, 0.06689342415, 0.06712018152, 0.06734693889, 0.06757369626, 0.06780045363, 0.068027211, 0.06825396837, 0.06848072574, 0.06870748311, 0.06893424048, 0.06916099785, 0.06938775522, 0.06961451259, 0.06984126996, 0.07006802733, 0.0702947847, 0.07052154207, 0.07074829944, 0.07097505681, 0.07120181418, 0.07142857155, 0.07165532892, 0.07188208629, 0.07210884366, 0.07233560103, 0.0725623584, 0.07278911577, 0.07301587314, 0.07324263051, 0.07346938788, 0.07369614525, 0.07392290262, 0.07414965999, 0.07437641736, 0.07460317473, 0.0748299321, 0.07505668947, 0.07528344684, 0.07551020421, 0.07573696158, 0.07596371895, 0.07619047632, 0.07641723369, 0.07664399106, 0.07687074843, 0.0770975058, 0.07732426317, 0.07755102054, 0.07777777791, 0.07800453528, 0.07823129265, 0.07845805002, 0.07868480739, 0.07891156476, 0.07913832213, 0.0793650795, 0.07959183687, 0.07981859424, 0.08004535161, 0.08027210898, 0.08049886635, 0.08072562372, 0.08095238109, 0.08117913846, 0.08140589583, 0.0816326532, 0.08185941057, 0.08208616794, 0.08231292531, 0.08253968268, 0.08276644005, 0.08299319742, 0.08321995479, 0.08344671216, 0.08367346953, 0.0839002269, 0.08412698427, 0.08435374164, 0.08458049901, 0.08480725638, 0.08503401375, 0.08526077112, 0.08548752849, 0.08571428586, 0.08594104323, 0.0861678006, 0.08639455797, 0.08662131534, 0.08684807271, 0.08707483008, 0.08730158745, 0.08752834482, 0.08775510219, 0.08798185956, 0.08820861693, 0.0884353743, 0.08866213167, 0.08888888904, 0.08911564641, 0.08934240378, 0.08956916115, 0.08979591852, 0.09002267589, 0.09024943326, 0.09047619063, 0.090702948, 0.09092970537, 0.09115646274, 0.09138322011, 0.09160997748, 0.09183673485, 0.09206349222, 0.09229024959, 0.09251700696, 0.09274376433, 0.0929705217, 0.09319727907, 0.09342403644, 0.09365079381, 0.09387755118, 0.09410430855, 0.09433106592, 0.09455782329, 0.09478458066, 0.09501133803, 0.0952380954, 0.09546485277, 0.09569161014, 0.09591836751, 0.09614512488, 0.09637188225, 0.09659863962, 0.09682539699, 0.09705215436, 0.09727891173, 0.0975056691, 0.09773242647, 0.09795918384, 0.09818594121, 0.09841269858, 0.09863945595, 0.09886621332, 0.09909297069, 0.09931972806, 0.09954648543, 0.0997732428];

    weightInitType = "OneToOneWeightsWithDelays";
    weightInit = 1.0;

    normalizeMethod        = "none";
    plasticityFlag         = false;
    pvpatchAccumulateType  = "convolve";
    writeCompressedCheckpoints = true;
    selfFlag               = false;
    shrinkPatches          = false;
    updateGSynFromPostPerspective = false;
    preActivityIsNotRate   = false;
    shmget_flag            = true;
};




KernelConn "A1ToPositiveError" = {
    preLayerName = "A1";
    postLayerName = "PositiveError";
    channelCode = 1;
    nxp = 64; // numfreqs
    nyp = 1;
    nfp = 221;  // numdelays

    //Set delay from 0 to 2205 * dt
    delay       = [0, 0.00022675737, 0.00045351474, 0.00068027211, 0.00090702948, 0.00113378685, 0.00136054422, 0.00158730159, 0.00181405896, 0.00204081633, 0.0022675737, 0.00249433107, 0.00272108844, 0.00294784581, 0.00317460318, 0.00340136055, 0.00362811792, 0.00385487529, 0.00408163266, 0.00430839003, 0.0045351474, 0.00476190477, 0.00498866214, 0.00521541951, 0.00544217688, 0.00566893425, 0.00589569162, 0.00612244899, 0.00634920636, 0.00657596373, 0.0068027211, 0.00702947847, 0.00725623584, 0.00748299321, 0.00770975058, 0.00793650795, 0.00816326532, 0.00839002269, 0.00861678006, 0.00884353743, 0.0090702948, 0.00929705217, 0.00952380954, 0.00975056691, 0.00997732428, 0.01020408165, 0.01043083902, 0.01065759639, 0.01088435376, 0.01111111113, 0.0113378685, 0.01156462587, 0.01179138324, 0.01201814061, 0.01224489798, 0.01247165535, 0.01269841272, 0.01292517009, 0.01315192746, 0.01337868483, 0.0136054422, 0.01383219957, 0.01405895694, 0.01428571431, 0.01451247168, 0.01473922905, 0.01496598642, 0.01519274379, 0.01541950116, 0.01564625853, 0.0158730159, 0.01609977327, 0.01632653064, 0.01655328801, 0.01678004538, 0.01700680275, 0.01723356012, 0.01746031749, 0.01768707486, 0.01791383223, 0.0181405896, 0.01836734697, 0.01859410434, 0.01882086171, 0.01904761908, 0.01927437645, 0.01950113382, 0.01972789119, 0.01995464856, 0.02018140593, 0.0204081633, 0.02063492067, 0.02086167804, 0.02108843541, 0.02131519278, 0.02154195015, 0.02176870752, 0.02199546489, 0.02222222226, 0.02244897963, 0.022675737, 0.02290249437, 0.02312925174, 0.02335600911, 0.02358276648, 0.02380952385, 0.02403628122, 0.02426303859, 0.02448979596, 0.02471655333, 0.0249433107, 0.02517006807, 0.02539682544, 0.02562358281, 0.02585034018, 0.02607709755, 0.02630385492, 0.02653061229, 0.02675736966, 0.02698412703, 0.0272108844, 0.02743764177, 0.02766439914, 0.02789115651, 0.02811791388, 0.02834467125, 0.02857142862, 0.02879818599, 0.02902494336, 0.02925170073, 0.0294784581, 0.02970521547, 0.02993197284, 0.03015873021, 0.03038548758, 0.03061224495, 0.03083900232, 0.03106575969, 0.03129251706, 0.03151927443, 0.0317460318, 0.03197278917, 0.03219954654, 0.03242630391, 0.03265306128, 0.03287981865, 0.03310657602, 0.03333333339, 0.03356009076, 0.03378684813, 0.0340136055, 0.03424036287, 0.03446712024, 0.03469387761, 0.03492063498, 0.03514739235, 0.03537414972, 0.03560090709, 0.03582766446, 0.03605442183, 0.0362811792, 0.03650793657, 0.03673469394, 0.03696145131, 0.03718820868, 0.03741496605, 0.03764172342, 0.03786848079, 0.03809523816, 0.03832199553, 0.0385487529, 0.03877551027, 0.03900226764, 0.03922902501, 0.03945578238, 0.03968253975, 0.03990929712, 0.04013605449, 0.04036281186, 0.04058956923, 0.0408163266, 0.04104308397, 0.04126984134, 0.04149659871, 0.04172335608, 0.04195011345, 0.04217687082, 0.04240362819, 0.04263038556, 0.04285714293, 0.0430839003, 0.04331065767, 0.04353741504, 0.04376417241, 0.04399092978, 0.04421768715, 0.04444444452, 0.04467120189, 0.04489795926, 0.04512471663, 0.045351474, 0.04557823137, 0.04580498874, 0.04603174611, 0.04625850348, 0.04648526085, 0.04671201822, 0.04693877559, 0.04716553296, 0.04739229033, 0.0476190477, 0.04784580507, 0.04807256244, 0.04829931981, 0.04852607718, 0.04875283455, 0.04897959192, 0.04920634929, 0.04943310666, 0.04965986403, 0.0498866214];

    numAxonalArbors  = 221; // numdelays

    initFromLastFlag = 0;

    weightInitType = "UniformRandomWeight";
    //weightInitType = "FileWeight";
    //initWeightsFile = "/nh/compneuro/Data/vine/LCA/RETINAvsShuffled_10k/Checkpoints/Checkpoint22000/V1ToErrorON_W.pvp";

    wmininit = -1.0;
    wmaxinit = 0.001;
    sparsefraction = .9;

    strength = 1;
    normalizeMethod = "normalizeL2";
    minL2NormTolerated = 0;
    normalizeArborsIndividually = 0;
    normalize_cutoff = 0.0;
    normalizeFromPostPerspective = false;
    symmetrizeWeights = false;
    preActivityIsNotRate = false;  // should help make response more indepenent of time step size dt
    keepKernelsSynchronized = true;
    combine_dW_with_W_flag = false;
    writeStep = -1; // -.00022675737;
    writeCompressedWeights = false;
    writeCompressedCheckpoints = false;
    plasticityFlag = true;
    weightUpdatePeriod = .00022675737;
    initialWeightUpdateTime = 0;
    initialWriteTime = 0.0;

    dWMax = 0.0000005; // 1.0; //0.05; //5.0;
    selfFlag = false;
    shmget_flag = false;
    pvpatchAccumulateType = "convolve";
    shrinkPatches = false;

    updateGSynFromPostPerspective = false;
};



KernelConn "A1ToNegativeError" = {
    preLayerName = "A1";
    postLayerName = "NegativeError";
    channelCode = 1;
    nxp = 64; // numfreqs
    nyp = 1;
    nfp = 221;

    //Set delay from 0 to 2205 * dt
    delay       = [0, 0.00022675737, 0.00045351474, 0.00068027211, 0.00090702948, 0.00113378685, 0.00136054422, 0.00158730159, 0.00181405896, 0.00204081633, 0.0022675737, 0.00249433107, 0.00272108844, 0.00294784581, 0.00317460318, 0.00340136055, 0.00362811792, 0.00385487529, 0.00408163266, 0.00430839003, 0.0045351474, 0.00476190477, 0.00498866214, 0.00521541951, 0.00544217688, 0.00566893425, 0.00589569162, 0.00612244899, 0.00634920636, 0.00657596373, 0.0068027211, 0.00702947847, 0.00725623584, 0.00748299321, 0.00770975058, 0.00793650795, 0.00816326532, 0.00839002269, 0.00861678006, 0.00884353743, 0.0090702948, 0.00929705217, 0.00952380954, 0.00975056691, 0.00997732428, 0.01020408165, 0.01043083902, 0.01065759639, 0.01088435376, 0.01111111113, 0.0113378685, 0.01156462587, 0.01179138324, 0.01201814061, 0.01224489798, 0.01247165535, 0.01269841272, 0.01292517009, 0.01315192746, 0.01337868483, 0.0136054422, 0.01383219957, 0.01405895694, 0.01428571431, 0.01451247168, 0.01473922905, 0.01496598642, 0.01519274379, 0.01541950116, 0.01564625853, 0.0158730159, 0.01609977327, 0.01632653064, 0.01655328801, 0.01678004538, 0.01700680275, 0.01723356012, 0.01746031749, 0.01768707486, 0.01791383223, 0.0181405896, 0.01836734697, 0.01859410434, 0.01882086171, 0.01904761908, 0.01927437645, 0.01950113382, 0.01972789119, 0.01995464856, 0.02018140593, 0.0204081633, 0.02063492067, 0.02086167804, 0.02108843541, 0.02131519278, 0.02154195015, 0.02176870752, 0.02199546489, 0.02222222226, 0.02244897963, 0.022675737, 0.02290249437, 0.02312925174, 0.02335600911, 0.02358276648, 0.02380952385, 0.02403628122, 0.02426303859, 0.02448979596, 0.02471655333, 0.0249433107, 0.02517006807, 0.02539682544, 0.02562358281, 0.02585034018, 0.02607709755, 0.02630385492, 0.02653061229, 0.02675736966, 0.02698412703, 0.0272108844, 0.02743764177, 0.02766439914, 0.02789115651, 0.02811791388, 0.02834467125, 0.02857142862, 0.02879818599, 0.02902494336, 0.02925170073, 0.0294784581, 0.02970521547, 0.02993197284, 0.03015873021, 0.03038548758, 0.03061224495, 0.03083900232, 0.03106575969, 0.03129251706, 0.03151927443, 0.0317460318, 0.03197278917, 0.03219954654, 0.03242630391, 0.03265306128, 0.03287981865, 0.03310657602, 0.03333333339, 0.03356009076, 0.03378684813, 0.0340136055, 0.03424036287, 0.03446712024, 0.03469387761, 0.03492063498, 0.03514739235, 0.03537414972, 0.03560090709, 0.03582766446, 0.03605442183, 0.0362811792, 0.03650793657, 0.03673469394, 0.03696145131, 0.03718820868, 0.03741496605, 0.03764172342, 0.03786848079, 0.03809523816, 0.03832199553, 0.0385487529, 0.03877551027, 0.03900226764, 0.03922902501, 0.03945578238, 0.03968253975, 0.03990929712, 0.04013605449, 0.04036281186, 0.04058956923, 0.0408163266, 0.04104308397, 0.04126984134, 0.04149659871, 0.04172335608, 0.04195011345, 0.04217687082, 0.04240362819, 0.04263038556, 0.04285714293, 0.0430839003, 0.04331065767, 0.04353741504, 0.04376417241, 0.04399092978, 0.04421768715, 0.04444444452, 0.04467120189, 0.04489795926, 0.04512471663, 0.045351474, 0.04557823137, 0.04580498874, 0.04603174611, 0.04625850348, 0.04648526085, 0.04671201822, 0.04693877559, 0.04716553296, 0.04739229033, 0.0476190477, 0.04784580507, 0.04807256244, 0.04829931981, 0.04852607718, 0.04875283455, 0.04897959192, 0.04920634929, 0.04943310666, 0.04965986403, 0.0498866214];

    numAxonalArbors  = 221; // numdelays


    initFromLastFlag = 0;

    weightInitType = "UniformRandomWeight";
    //weightInitType = "FileWeight";
    //initWeightsFile = "/nh/compneuro/Data/vine/LCA/RETINAvsShuffled_10k/Checkpoints/Checkpoint22000/V1ToErrorON_W.pvp";

    wmininit = -1.0;
    wmaxinit = 0.001;
    sparsefraction = .9;

    strength = 1;
    normalizeMethod = "normalizeL2";
    minL2NormTolerated = 0;
    normalizeArborsIndividually = 0;
    normalize_cutoff = 0.0;
    normalizeFromPostPerspective = false;
    symmetrizeWeights = false;
    preActivityIsNotRate = false;  // should help make response more indepenent of time step size dt
    keepKernelsSynchronized = true;
    combine_dW_with_W_flag = false;
    writeStep = -1.0; // -.00022675737;
    writeCompressedWeights = false;
    writeCompressedCheckpoints = false;
    plasticityFlag = true;
    weightUpdatePeriod = .00022675737;
    initialWeightUpdateTime = 0; //199.0;
    initialWriteTime = 0.0;

    dWMax = 0.0000005; // 1.0; //0.05; //5.0;
    selfFlag = false;
    shmget_flag = false;
    pvpatchAccumulateType = "convolve";
    shrinkPatches = false;

    updateGSynFromPostPerspective = false;
};



TransposeConn "PositiveErrorToA1" = {
    preLayerName = "PositiveError";
    postLayerName = "A1";
    channelCode = 0;
    originalConnName = "A1ToPositiveError";
    selfFlag = false;
    preActivityIsNotRate = false;  // should help make response more indepenent of time step size dt
    writeStep = -1;
    writeCompressedCheckpoints = false;
    shmget_flag = false;
    delay = [0, 0.00022675737, 0.00045351474, 0.00068027211, 0.00090702948, 0.00113378685, 0.00136054422, 0.00158730159, 0.00181405896, 0.00204081633, 0.0022675737, 0.00249433107, 0.00272108844, 0.00294784581, 0.00317460318, 0.00340136055, 0.00362811792, 0.00385487529, 0.00408163266, 0.00430839003, 0.0045351474, 0.00476190477, 0.00498866214, 0.00521541951, 0.00544217688, 0.00566893425, 0.00589569162, 0.00612244899, 0.00634920636, 0.00657596373, 0.0068027211, 0.00702947847, 0.00725623584, 0.00748299321, 0.00770975058, 0.00793650795, 0.00816326532, 0.00839002269, 0.00861678006, 0.00884353743, 0.0090702948, 0.00929705217, 0.00952380954, 0.00975056691, 0.00997732428, 0.01020408165, 0.01043083902, 0.01065759639, 0.01088435376, 0.01111111113, 0.0113378685, 0.01156462587, 0.01179138324, 0.01201814061, 0.01224489798, 0.01247165535, 0.01269841272, 0.01292517009, 0.01315192746, 0.01337868483, 0.0136054422, 0.01383219957, 0.01405895694, 0.01428571431, 0.01451247168, 0.01473922905, 0.01496598642, 0.01519274379, 0.01541950116, 0.01564625853, 0.0158730159, 0.01609977327, 0.01632653064, 0.01655328801, 0.01678004538, 0.01700680275, 0.01723356012, 0.01746031749, 0.01768707486, 0.01791383223, 0.0181405896, 0.01836734697, 0.01859410434, 0.01882086171, 0.01904761908, 0.01927437645, 0.01950113382, 0.01972789119, 0.01995464856, 0.02018140593, 0.0204081633, 0.02063492067, 0.02086167804, 0.02108843541, 0.02131519278, 0.02154195015, 0.02176870752, 0.02199546489, 0.02222222226, 0.02244897963, 0.022675737, 0.02290249437, 0.02312925174, 0.02335600911, 0.02358276648, 0.02380952385, 0.02403628122, 0.02426303859, 0.02448979596, 0.02471655333, 0.0249433107, 0.02517006807, 0.02539682544, 0.02562358281, 0.02585034018, 0.02607709755, 0.02630385492, 0.02653061229, 0.02675736966, 0.02698412703, 0.0272108844, 0.02743764177, 0.02766439914, 0.02789115651, 0.02811791388, 0.02834467125, 0.02857142862, 0.02879818599, 0.02902494336, 0.02925170073, 0.0294784581, 0.02970521547, 0.02993197284, 0.03015873021, 0.03038548758, 0.03061224495, 0.03083900232, 0.03106575969, 0.03129251706, 0.03151927443, 0.0317460318, 0.03197278917, 0.03219954654, 0.03242630391, 0.03265306128, 0.03287981865, 0.03310657602, 0.03333333339, 0.03356009076, 0.03378684813, 0.0340136055, 0.03424036287, 0.03446712024, 0.03469387761, 0.03492063498, 0.03514739235, 0.03537414972, 0.03560090709, 0.03582766446, 0.03605442183, 0.0362811792, 0.03650793657, 0.03673469394, 0.03696145131, 0.03718820868, 0.03741496605, 0.03764172342, 0.03786848079, 0.03809523816, 0.03832199553, 0.0385487529, 0.03877551027, 0.03900226764, 0.03922902501, 0.03945578238, 0.03968253975, 0.03990929712, 0.04013605449, 0.04036281186, 0.04058956923, 0.0408163266, 0.04104308397, 0.04126984134, 0.04149659871, 0.04172335608, 0.04195011345, 0.04217687082, 0.04240362819, 0.04263038556, 0.04285714293, 0.0430839003, 0.04331065767, 0.04353741504, 0.04376417241, 0.04399092978, 0.04421768715, 0.04444444452, 0.04467120189, 0.04489795926, 0.04512471663, 0.045351474, 0.04557823137, 0.04580498874, 0.04603174611, 0.04625850348, 0.04648526085, 0.04671201822, 0.04693877559, 0.04716553296, 0.04739229033, 0.0476190477, 0.04784580507, 0.04807256244, 0.04829931981, 0.04852607718, 0.04875283455, 0.04897959192, 0.04920634929, 0.04943310666, 0.04965986403, 0.0498866214];
    pvpatchAccumulateType = "convolve";
    updateGSynFromPostPerspective = true;
    receiveGpu = false;

};

TransposeConn "NegativeErrorToA1" = {
    preLayerName = "NegativeError";
    postLayerName = "A1";
    channelCode = 0;
    originalConnName = "A1ToNegativeError";
    selfFlag = false;
    preActivityIsNotRate = false;  // should help make response more indepenent of time step size dt
    writeStep = -1;
    writeCompressedCheckpoints = false;
    shmget_flag = false;
    delay = [0, 0.00022675737, 0.00045351474, 0.00068027211, 0.00090702948, 0.00113378685, 0.00136054422, 0.00158730159, 0.00181405896, 0.00204081633, 0.0022675737, 0.00249433107, 0.00272108844, 0.00294784581, 0.00317460318, 0.00340136055, 0.00362811792, 0.00385487529, 0.00408163266, 0.00430839003, 0.0045351474, 0.00476190477, 0.00498866214, 0.00521541951, 0.00544217688, 0.00566893425, 0.00589569162, 0.00612244899, 0.00634920636, 0.00657596373, 0.0068027211, 0.00702947847, 0.00725623584, 0.00748299321, 0.00770975058, 0.00793650795, 0.00816326532, 0.00839002269, 0.00861678006, 0.00884353743, 0.0090702948, 0.00929705217, 0.00952380954, 0.00975056691, 0.00997732428, 0.01020408165, 0.01043083902, 0.01065759639, 0.01088435376, 0.01111111113, 0.0113378685, 0.01156462587, 0.01179138324, 0.01201814061, 0.01224489798, 0.01247165535, 0.01269841272, 0.01292517009, 0.01315192746, 0.01337868483, 0.0136054422, 0.01383219957, 0.01405895694, 0.01428571431, 0.01451247168, 0.01473922905, 0.01496598642, 0.01519274379, 0.01541950116, 0.01564625853, 0.0158730159, 0.01609977327, 0.01632653064, 0.01655328801, 0.01678004538, 0.01700680275, 0.01723356012, 0.01746031749, 0.01768707486, 0.01791383223, 0.0181405896, 0.01836734697, 0.01859410434, 0.01882086171, 0.01904761908, 0.01927437645, 0.01950113382, 0.01972789119, 0.01995464856, 0.02018140593, 0.0204081633, 0.02063492067, 0.02086167804, 0.02108843541, 0.02131519278, 0.02154195015, 0.02176870752, 0.02199546489, 0.02222222226, 0.02244897963, 0.022675737, 0.02290249437, 0.02312925174, 0.02335600911, 0.02358276648, 0.02380952385, 0.02403628122, 0.02426303859, 0.02448979596, 0.02471655333, 0.0249433107, 0.02517006807, 0.02539682544, 0.02562358281, 0.02585034018, 0.02607709755, 0.02630385492, 0.02653061229, 0.02675736966, 0.02698412703, 0.0272108844, 0.02743764177, 0.02766439914, 0.02789115651, 0.02811791388, 0.02834467125, 0.02857142862, 0.02879818599, 0.02902494336, 0.02925170073, 0.0294784581, 0.02970521547, 0.02993197284, 0.03015873021, 0.03038548758, 0.03061224495, 0.03083900232, 0.03106575969, 0.03129251706, 0.03151927443, 0.0317460318, 0.03197278917, 0.03219954654, 0.03242630391, 0.03265306128, 0.03287981865, 0.03310657602, 0.03333333339, 0.03356009076, 0.03378684813, 0.0340136055, 0.03424036287, 0.03446712024, 0.03469387761, 0.03492063498, 0.03514739235, 0.03537414972, 0.03560090709, 0.03582766446, 0.03605442183, 0.0362811792, 0.03650793657, 0.03673469394, 0.03696145131, 0.03718820868, 0.03741496605, 0.03764172342, 0.03786848079, 0.03809523816, 0.03832199553, 0.0385487529, 0.03877551027, 0.03900226764, 0.03922902501, 0.03945578238, 0.03968253975, 0.03990929712, 0.04013605449, 0.04036281186, 0.04058956923, 0.0408163266, 0.04104308397, 0.04126984134, 0.04149659871, 0.04172335608, 0.04195011345, 0.04217687082, 0.04240362819, 0.04263038556, 0.04285714293, 0.0430839003, 0.04331065767, 0.04353741504, 0.04376417241, 0.04399092978, 0.04421768715, 0.04444444452, 0.04467120189, 0.04489795926, 0.04512471663, 0.045351474, 0.04557823137, 0.04580498874, 0.04603174611, 0.04625850348, 0.04648526085, 0.04671201822, 0.04693877559, 0.04716553296, 0.04739229033, 0.0476190477, 0.04784580507, 0.04807256244, 0.04829931981, 0.04852607718, 0.04875283455, 0.04897959192, 0.04920634929, 0.04943310666, 0.04965986403, 0.0498866214];
    pvpatchAccumulateType = "convolve";
    updateGSynFromPostPerspective = true;
    receiveGpu = false;
};

CloneKernelConn "A1ToPositiveRecon" = {
    preLayerName = "A1";
    postLayerName = "PositiveRecon";
    channelCode = 0;
    writeStep = -1;
    writeCompressedCheckpoints = false;
    originalConnName = "A1ToPositiveError";
    selfFlag = false;
    pvpatchAccumulateType = "convolve";
    updateGSynFromPostPerspective = false;
    delay = 0;
    preActivityIsNotRate = false;
};

CloneKernelConn "A1ToNegativeRecon" = {
    preLayerName = "A1";
    postLayerName = "NegativeRecon";
    channelCode = 0;
    writeStep = -1;
    writeCompressedCheckpoints = false;
    originalConnName = "A1ToNegativeError";
    selfFlag = false;
    pvpatchAccumulateType = "convolve";
    updateGSynFromPostPerspective = false;
    delay = 0;
    preActivityIsNotRate = false;
};



IdentConn "StreamPositiveToFullRecon" = {

    preLayerName = "PositiveRecon";
    postLayerName = "FullRecon";

    channelCode = 0;

    //nxp             = 4; //numfreqs
    //nyp             = 1;
    //nfp             = 1;

    // weightInitType = "OneToOneWeights";
    // weightInit = 1;
    // normaizeMethod = "none";

    initialWriteTime = 0.0;
    writeStep = -1.0;


};



IdentConn "StreamNegativeToFullRecon" = {

    preLayerName = "NegativeRecon";
    postLayerName = "FullRecon";

    channelCode = 1;
    //nxp             = 4; //numfreqs
    //nyp             = 1;
    //nfp             = 1;

    //weightInitType = "OneToOneWeights";
    //weightInit = -1;
    //normaizeMethod = "none";

    initialWriteTime = 0.0;
    writeStep = -1.0;

};

////Probes//////




StatsProbe "A1StatsFile" = {
    buffer = "A";
    targetLayer = "A1";
    probeOutputFile = "A1_Stats.txt";
};




