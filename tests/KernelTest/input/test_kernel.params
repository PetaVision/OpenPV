//
// test_kernel.params
//
// created by garkenyon: August 4, 2011
//

//  - input parameters for test_kernel.cpp for system level testing of kernels
//

debugParsing = false;

HyPerCol "column" = {
   nx = 32;   
   ny = 32;
   dt = 1.0;
   randomSeed = 926268668;  // if not set here,  clock time is used to generate seed
   startTime = 0.0;
   stopTime = 4.0;  // num images plus (num layers + 1) * delay
   progressInterval = 5.0;
   writeProgressToErr = false;
   outputPath = "output/test_kernel";
   checkpointWrite = false;
   suppressLastOutput = false;
   nbatch = 2;
};

//
// layers
//

ConstantLayer "Retina" = {
    restart = 0;
    nxScale = 1; 
    nyScale = 1;
    nf = 1;
    writeStep = -1;
    initialWriteTime = 0.0;
    mirrorBCflag = 0;
    sparseLayer = false;
    InitVType = "ConstantV";
    valueV    = 1;
    phase = 0;
};
//Retina "Retina" = {
//    restart = 0;
//    nxScale = 1;
//    nyScale = 1;
//    nf = 1;
//    phase = 0;
//    triggerLayerName = NULL;
//    writeStep = 1.0;
//    initialWriteTime = 0.0;
//    sparseLayer = false;
//    mirrorBCflag = true;
//    spikingFlag = false;
//
//    foregroundRate = 1000;
//    backgroundRate = 1000;
//    burstFreq = 1;
//    burstDuration = 1000;
//
//    beginStim = 0;
//    endStim = 1000;
//};

ANNLayer "L0" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 4;
    phase = 0;
    triggerLayerName = NULL;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = true;
    sparseLayer = false;

    InitVType = "ConstantV";
    valueV = 1.0;

    VThresh = -infinity;
    AMax = infinity;
    AMin = -infinity;
    AShift = 0.0;
    VWidth = 0.0;
};

ANNLayer "Lx1" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 4;
    phase = 0;
    triggerLayerName = NULL;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = true;
    sparseLayer = false;

    InitVType = "ZeroV";

    VThresh = -infinity;
    AMax = infinity;
    AMin = -infinity;
    AShift = 0.0;
    VWidth = 0.0;
};

ANNLayer "Lx2" = {
    restart = 0;
    nxScale = 2;
    nyScale = 2;
    nf = 8;
    phase = 0;
    triggerLayerName = NULL;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = true;
    sparseLayer = false;

    InitVType = "ZeroV";

    VThresh = -infinity;
    AMax = infinity;
    AMin = -infinity;
    AShift = 0.0;
    VWidth = 0.0;
};

ANNLayer "Lx4" = {
    restart = 0;
    nxScale = 4;
    nyScale = 4;
    nf = 16;
    phase = 0;
    triggerLayerName = NULL;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = true;
    sparseLayer = false;

    InitVType = "ZeroV";

    VThresh = -infinity;
    AMax = infinity;
    AMin = -infinity;
    AShift = 0.0;
    VWidth = 0.0;
};

ANNLayer "Lx1_2" = {
    restart = 0;
    nxScale = 0.5;
    nyScale = 0.5;
    nf = 2;
    phase = 0;
    triggerLayerName = NULL;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = true;
    sparseLayer = false;

    InitVType = "ZeroV";

    VThresh = -infinity;
    AMax = infinity;
    AMin = -infinity;
    AShift = 0.0;
    VWidth = 0.0;
};

ANNLayer "Lx1_4" = {
    restart = 0;
    nxScale = 0.25;
    nyScale = 0.25;
    nf = 1;
    phase = 0;
    triggerLayerName = NULL;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = true;
    sparseLayer = false;

    InitVType = "ZeroV";

    VThresh = -infinity;
    AMax = infinity;
    AMin = -infinity;
    AShift = 0.0;
    VWidth = 0.0;
};

//  connections: 

HyPerConn "Retina to L0" = {
    preLayerName = "Retina";
    postLayerName = "L0";
    channelCode = 0;
    sharedWeights = true;
    nxp = 1;
    nyp = 1;
    nfp = 4;
    numAxonalArbors = 1;
    writeStep = -1;
    writeCompressedCheckpoints = false;
    
    weightInitType = "Gauss2DWeight";
    aspect = 1;
    sigma = 1;
    rMax  = infinity;
    rMin = 0;
    numOrientationsPost = 4;
      
    strength = 4.0;  // 1.0 x post->num_neurons / pre->num_neurons
    normalizeMethod = "normalizeSum";
    normalizeArborsIndividually = false;
    normalize_cutoff = 0.0;
    minSumTolerated = 0.0;
    normalizeFromPostPerspective = false;
    symmetrizeWeights = false;

    plasticityFlag = 0;

    delay = 0;

    pvpatchAccumulateType = "convolve";
    shrinkPatches = false;
    convertRateToSpikeCount = false;
    selfFlag = false;
    updateGSynFromPostPerspective = false;
};

HyPerConn "L0 to Lx1" = {
    preLayerName = "L0";
    postLayerName = "Lx1";
    channelCode = 0;
    sharedWeights = true;
    nxp = 5;
    nyp = 5;
    nfp = 4;
    numAxonalArbors = 1;
    writeStep = -1;
    writeCompressedCheckpoints = false;
    
    weightInitType = "Gauss2DWeight";
    aspect = 1;
    sigma = infinity;
    rMax  = infinity;
    rMin = 0;
    numOrientationsPre = 4;
    numOrientationsPost = 4;

    strength = 1.0; // 1.0 x post->num_neurons / pre->num_neurons
    normalizeMethod = "normalizeSum";
    normalizeArborsIndividually = false;
    normalize_cutoff = 0.0;
    minSumTolerated = 0.0;
    normalizeFromPostPerspective = false;
    symmetrizeWeights = false;

    plasticityFlag = 0;

    delay = 0;     

    pvpatchAccumulateType = "convolve";
    shrinkPatches = false;
    convertRateToSpikeCount = false;
    selfFlag = false;
    updateGSynFromPostPerspective = false;
};

HyPerConn "L0 to Lx2" = {
    preLayerName = "L0";
    postLayerName = "Lx2";
    channelCode = 0;
    sharedWeights = true;
    nxp = 10;
    nyp = 10;
    nfp = 8;
    numAxonalArbors = 1;
    writeStep = -1;
    writeCompressedCheckpoints = false;
    
    weightInitType = "Gauss2DWeight";
    aspect = 1; //2;
    sigma = infinity;
    rMax  = infinity;
    rMin = 0;
    // deltaThetaMax = 6.2832;
    // thetaMax = 1;
    // bowtieFlag = 0;
    // numFlanks = 1;
    // flankShift = 0;
    // rotate = 1;
    numOrientationsPost = 8;
    numOrientationsPre = 4;
      
    strength = 8.0; // 1.0 x post->num_neurons / pre->num_neurons
    normalizeMethod = "normalizeSum";
    normalizeArborsIndividually = false;
    normalize_cutoff = 0.0;
    minSumTolerated = 0.0;
    normalizeFromPostPerspective = false;
    symmetrizeWeights = false;

    plasticityFlag = 0;

    delay = 0;     

    pvpatchAccumulateType = "convolve";
    shrinkPatches = false;
    convertRateToSpikeCount = false;
    selfFlag = false;
    updateGSynFromPostPerspective = false;
};

HyPerConn "L0 to Lx4" = {
    preLayerName = "L0";
    postLayerName = "Lx4";
    channelCode = 0;
    sharedWeights = true;
    nxp = 20;
    nyp = 20;
    nfp = 16;
    numAxonalArbors = 1;
    writeStep = -1;
    writeCompressedCheckpoints = false;
    
    weightInitType = "Gauss2DWeight";
    aspect = 1; //4;
    sigma = infinity;
    rMax  = infinity;
    rMin = 0;
    // deltaThetaMax = 6.2832;
    // thetaMax = 1;
    // bowtieFlag = 0;
    // numFlanks = 1;
    // flankShift = 0;
    // rotate = 1;
    numOrientationsPost = 16;
    numOrientationsPre = 4;
      
    strength = 64.0; // 1.0 x post->num_neurons / pre->num_neurons
    normalizeMethod = "normalizeSum";
    normalizeArborsIndividually = false;
    normalize_cutoff = 0.0;
    minSumTolerated = 0.0;
    normalizeFromPostPerspective = false;
    symmetrizeWeights = false;

    plasticityFlag = 0;

    delay = 0;     

    pvpatchAccumulateType = "convolve";
    shrinkPatches = false;
    convertRateToSpikeCount = false;
    selfFlag = false;
    updateGSynFromPostPerspective = false;
};

HyPerConn "L0 to Lx1_2" = {
    preLayerName = "L0";
    postLayerName = "Lx1_2";
    channelCode = 0;
    sharedWeights = true;
    nxp = 3;
    nyp = 3;
    nfp = 2;
    numAxonalArbors = 1;
    writeStep = -1;
    writeCompressedCheckpoints = false;
    
    weightInitType = "Gauss2DWeight";
    aspect = 2;
    sigma = infinity;
    rMax  = infinity;
    rMin = 0;
    // deltaThetaMax = 6.2832;
    // thetaMax = 1;
    // bowtieFlag = 0;
    // numFlanks = 1;
    // flankShift = 0;
    // rotate = 1;
    numOrientationsPost = 2;
    numOrientationsPre = 4;
      
    strength = 0.125; // 1.0 x post->num_neurons / pre->num_neurons
    normalizeMethod = "normalizeSum";
    normalizeArborsIndividually = false;
    normalize_cutoff = 0.0;
    minSumTolerated = 0.0;
    normalizeFromPostPerspective = false;
    symmetrizeWeights = false;

    plasticityFlag = 0;

    delay = 0;     

    pvpatchAccumulateType = "convolve";
    shrinkPatches = false;
    convertRateToSpikeCount = false;
    selfFlag = false;
    updateGSynFromPostPerspective = false;
};

HyPerConn "L0 to Lx1_4" = {
    preLayerName = "L0";
    postLayerName = "Lx1_4";
    channelCode = 0;
    sharedWeights = true;
    nxp = 1;
    nyp = 1;
    nfp = 1;
    numAxonalArbors = 1;
    writeStep = -1;
    writeCompressedCheckpoints = false;
    
    weightInitType = "Gauss2DWeight";
    aspect = 1;
    sigma = infinity;
    rMax  = infinity;
    rMin = 0;
    // deltaThetaMax = 6.2832;
    // thetaMax = 1;
    // bowtieFlag = 0;
    // numFlanks = 1;
    // flankShift = 0;
    // rotate = 1;
    numOrientationsPre = 4;
      
    strength = 0.015625; // 1.0 x post->num_neurons / pre->num_neurons
    normalizeMethod = "normalizeSum";
    normalizeArborsIndividually = false;
    normalize_cutoff = 0.0;
    minSumTolerated = 0.0;
    normalizeFromPostPerspective = false;
    symmetrizeWeights = false;

    plasticityFlag = 0;

    delay = 0;     

    pvpatchAccumulateType = "convolve";
    shrinkPatches = false;
    convertRateToSpikeCount = false;
    selfFlag = false;
    updateGSynFromPostPerspective = false;
};

KernelTestProbe "Retina Stats File" = {
    targetLayer = "Retina";
    probeOutputFile = "Retina_Stats.txt";
    message = "Retina Stats File      ";
};
KernelTestProbe "L0 Stats File" = {
    targetLayer = "L0";
    probeOutputFile = "L0_Stats.txt";
    message = "L0 Stats File          ";
};
KernelTestProbe "Lx1 Stats File" = {
    targetLayer = "Lx1";
    probeOutputFile = "Lx1_Stats.txt";
    message = "Lx1 Stats File         ";
};
KernelTestProbe "Lx2 Stats File" = {
    targetLayer = "Lx2";
    probeOutputFile = "Lx2_Stats.txt";
    message = "Lx2 Stats File         ";
};
KernelTestProbe "Lx4 Stats File" = {
    targetLayer = "Lx4";
    probeOutputFile = "Lx4_Stats.txt";
    message = "Lx4 Stats File         ";
};
KernelTestProbe "Lx1_2 Stats File" = {
    targetLayer = "Lx1_2";
    probeOutputFile = "Lx1_2_Stats.txt";
    message = "Lx1_2 Stats File       ";
};
KernelTestProbe "Lx1_4 Stats File" = {
    targetLayer = "Lx1_4";
    probeOutputFile = "Lx1_4_Stats.txt";
    message = "Lx1_4 Stats File       ";
};

KernelTestProbe "Retina Stats Screen" = {
    targetLayer = "Retina";
    message = "Retina Stats Screen    ";
};
KernelTestProbe "L0 Stats Screen" = {
    targetLayer = "L0";
    message = "L0 Stats Screen        ";
};
KernelTestProbe "Lx1 Stats Screen" = {
    targetLayer = "Lx1";
    message = "Lx1 Stats Screen       ";
};
KernelTestProbe "Lx2 Stats Screen" = {
    targetLayer = "Lx2";
    message = "Lx2 Stats Screen       ";
};
KernelTestProbe "Lx4 Stats Screen" = {
    targetLayer = "Lx4";
    message = "Lx4 Stats Screen       ";
};
KernelTestProbe "Lx1_2 Stats Screen" = {
    targetLayer = "Lx1_2";
    message = "Lx1_2 Stats Screen     ";
};
KernelTestProbe "Lx1_4 Stats Screen" = {
    targetLayer = "Lx1_4";
    message = "Lx1_4 Stats Screen     ";
};
