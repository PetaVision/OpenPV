debugParsing = false;

HyPerCol "column" = {
    nx = 8; //1242;  // KITTI synced value
    ny = 8;  //218;
    dt = 1.0;
    randomSeed = 1234567890;  // Must be at least 8 digits long.  // if not set here,  clock time is used to generate seed
    startTime = 0.0;
    stopTime = 10.0;       // Depends on number of VINE video frames
    progressInterval = 1.0;
    outputPath = "avgOutput/unpoolTest";
    printParamsFilename = "pv.params";
    initializeFromCheckpointDir = "";
    checkpointWrite = false;
    // deleteOlderCheckpoints = false;
    suppressLastOutput = false;
    writeProgressToErr = true;
    verifyWrites = false;
    errorOnNotANumber = false;
    nbatch = 2;
};

// this is a input layer
// value is equal to restricted index into extended layer (with negative values) index, with order [x, y, f] from fastest to slowest
AvgPoolTestInputLayer "input" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 3;
    writeStep = -1.0;
    // initialWriteTime = 0.0;
    mirrorBCflag = false;
    valueBC = 0.0;
    sparseLayer = 0;
    //
    InitVType = "ZeroV";
    VThresh = -infinity;
    AMax = infinity;     // prevent reconstruction from exceeding reasonable bounds
    AMin = -infinity; 
    AShift = 0.0;
    VWidth = 0.0;
    clearGSynInterval = 0.0;
    // 
    phase = 0; 
    triggerLayerName = NULL;
};

AvgPoolTestLayer "avgPoolPre" = {
    restart = 0;
    nxScale = .5;
    nyScale = .5;
    nf = 3;
    writeStep = -1.0;
    // initialWriteTime = 0.0;
    mirrorBCflag = false;
    valueBC = 0.0;
    sparseLayer = 0;
    //
    InitVType = "ZeroV";
    VThresh = -infinity;
    AMax = infinity;     // prevent reconstruction from exceeding reasonable bounds
    AMin = -infinity; 
    AShift = 0.0;
    VWidth = 0.0;
    clearGSynInterval = 0.0;
    // 
    phase = 1; 
    triggerLayerName = NULL;
};

AvgPoolTestLayer "avgPoolPost" = {
    restart = 0;
    nxScale = .5;
    nyScale = .5;
    nf = 3;
    writeStep = -1.0;
    // initialWriteTime = 0.0;
    mirrorBCflag = false;
    valueBC = 0.0;
    sparseLayer = 0;
    //
    InitVType = "ZeroV";
    VThresh = -infinity;
    AMax = infinity;     // prevent reconstruction from exceeding reasonable bounds
    AMin = -infinity; 
    AShift = 0.0;
    VWidth = 0.0;
    clearGSynInterval = 0.0;
    // 
    phase = 1; 
    triggerLayerName = NULL;
};

GatePoolTestLayer "UnpoolTestPre" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 3;
    writeStep = -1.0;
    // initialWriteTime = 0.0;
    mirrorBCflag = false;
    valueBC = 0.0;
    sparseLayer = 0;
    //
    InitVType = "ZeroV";
    VThresh = -infinity;
    AMax = infinity;     // prevent reconstruction from exceeding reasonable bounds
    AMin = -infinity; 
    AShift = 0.0;
    VWidth = 0.0;
    clearGSynInterval = 0.0;
    // 
    phase = 4; 
    triggerLayerName = NULL;
};

GatePoolTestLayer "UnpoolTestPost" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 3;
    writeStep = -1.0;
    // initialWriteTime = 0.0;
    mirrorBCflag = false;
    valueBC = 0.0;
    sparseLayer = 0;
    //
    InitVType = "ZeroV";
    VThresh = -infinity;
    AMax = infinity;     // prevent reconstruction from exceeding reasonable bounds
    AMin = -infinity; 
    AShift = 0.0;
    VWidth = 0.0;
    clearGSynInterval = 0.0;
    // 
    phase = 4; 
    triggerLayerName = NULL;
};


PoolingConn "input2avgPoolPre" = {
    preLayerName = "input";
    postLayerName = "avgPoolPre";
    channelCode = 0; //Inhib b, doing nothing to input
    sharedWeights = true;
    nxp = 1; 
    nyp = 1; 
    numAxonalArbors = 1;
    
    normalizeMethod                     = "none";
    //strength                            = 1;
    //rMinX                               = 1.5;
    //rMinY                               = 1.5;
    //normalize_cutoff                    = 0;
    
    shrinkPatches = false;
    plasticityFlag = 0;
    pvpatchAccumulateType = "avgpooling";
     
    delay = 0;
     
    convertRateToSpikeCount = false;
    selfFlag = false;

    updateGSynFromPostPerspective = false;

    keepKernelsSynchronized             = true;
};

PoolingConn "input2avgPoolPost" = {
   #include "input2avgPoolPre";
   @postLayerName = "avgPoolPost";
   @updateGSynFromPostPerspective = true;
};

TransposePoolingConn "avgPoolPreToUnpoolPre" = {
    preLayerName = "avgPoolPre";
    postLayerName = "UnpoolTestPre";
    channelCode = 0;
    originalConnName = "input2avgPoolPre";
    selfFlag = false;
    convertRateToSpikeCount = false;  // should help make response more indepenent of time step size dt
    writeStep = -1;
    writeCompressedCheckpoints = false;
    shmget_flag = false;
    delay = 0;
    updateGSynFromPostPerspective = false;
};

TransposePoolingConn "avgPoolPostToUnpoolPost" = {
    preLayerName = "avgPoolPost";
    postLayerName = "UnpoolTestPost";
    channelCode = 0;
    originalConnName = "input2avgPoolPost";
    selfFlag = false;
    convertRateToSpikeCount = false;  // should help make response more indepenent of time step size dt
    writeStep = -1;
    writeCompressedCheckpoints = false;
    shmget_flag = false;
    delay = 0;
    updateGSynFromPostPerspective = false;
};
