//
// HyPerConnCheckpointerTest_initfromCP_updateperiod.params
//
// created by peteschultz: Jan 5, 2017
//

// A params file used by HyPerConnCheckpointerTest, which tests checkpointing
// and initializing from checkpoint. It tests connections that use triggering,
// as well as connections that use weightUpdatePeriod.
//
// This params has an InputLayer, an output HyPerLayer, and a HyPerConn
// connecting them on the excitatory channel.
//
// The input layer has a display period of 4, starts at 1, and increments
// by 1 each display period.
// The HyPerConn starts at 1, has dWMax=1, and triggers off the input layer.
// The output layer is initialized as 2, and updates as input*connection.
//
// As connections update before layers, and the phase of the output is
// higher than the phase of the input; the correct values are below.
//
// However, in this params file, we set initializeFromCheckpointDir
// to a checkpoint from an earlier run, so that the effective time
// is greater than the HyPerCol simulation time.
//
//   time connection  input   output
//     0        1       1         2
//     1        3       1         3
//     2        3       1         3
//     3        3       1         3
//     4        3       1         3
//     5        6       2        12
//     6        6       2        12
//     7        6       2        12
//     8        6       2        12
//     9       30       3        90
//    10       30       3        90
//    11       30       3        90
//    12       30       3        90
//    13      300       4      1200
//    14      300       4      1200
//    15      300       4      1200
//    16      300       4      1200
//    17     5100       5     25500
//    18     5100       5     25500
//    19     5100       5     25500
//    20     5100       5     25500

debugParsing = false;

HyPerCol "column" = {
    startTime                           = 0;
    dt                                  = 1;
    stopTime                            = 12;
    progressInterval                    = 100;
    writeProgressToErr                  = false;
    outputPath                          = "output_initfromCP_updateperiod/";
    verifyWrites                        = false;
    checkpointWrite                     = true;
    checkpointWriteDir                  = "output_initfromCP_updateperiod/checkpoints";
    checkpointWriteTriggerMode          = "step";
    checkpointWriteStepInterval         = 1;
    checkpointIndexWidth                = -1;
    suppressNonplasticCheckpoints       = false;
    deleteOlderCheckpoints              = false;
    initializeFromCheckpointDir         = "output_freshstart_updateperiod/checkpoints/Checkpoint08";
    printParamsFilename                 = "pv_initfromCP_updateperiod.params";
    randomSeed                          = 1234567890;
    nx                                  = 4;
    ny                                  = 4;
    nbatch                              = 1;
    errorOnNotANumber                   = true;
};

PvpLayer "Input" = {
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 1;
    phase                               = 0;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    initializeFromCheckpointFlag        = true;
    writeStep                           = -1;
    sparseLayer                         = false;
    updateGpu                           = false;
    dataType                            = NULL;
    displayPeriod                       = 4;
    inputPath                           = "input/inputframes.pvp";
    offsetAnchor                        = "tl";
    offsetX                             = 0;
    offsetY                             = 0;
    autoResizeFlag                      = false;
    inverseFlag                         = false;
    normalizeLuminanceFlag              = false;
    useInputBCflag                      = false;
    padValue                            = 0;
    batchMethod                         = "byFile";
    start_frame_index                   = [0.000000];
    writeFrameToTimestamp               = true;
    resetToStartOnLoop                  = false;
};

HyPerLayer "Output" = {
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 1;
    phase                               = 1;
    mirrorBCflag                        = true;
    initializeFromCheckpointFlag        = true;
    InitVType                           = "ConstantV";
    valueV                              = 2;
    triggerLayerName                    = NULL;
    writeStep                           = 1;
    initialWriteTime                    = 0;
    sparseLayer                         = false;
    updateGpu                           = false;
    dataType                            = NULL;
};

HyPerConn "InputToOutput" = {
    preLayerName                        = "Input";
    postLayerName                       = "Output";
    channelCode                         = 0;
    delay                               = [0.000000];
    numAxonalArbors                     = 1;
    plasticityFlag                      = true;
    convertRateToSpikeCount             = false;
    receiveGpu                          = false;
    sharedWeights                       = true;
    weightInitType                      = "IdentWeight";
    initWeightsFile                     = NULL;
    initializeFromCheckpointFlag        = true;
    triggerLayerName                    = NULL;
    weightUpdatePeriod                  = 4;
    initialWeightUpdateTime             = 1;
    updateGSynFromPostPerspective       = false;
    pvpatchAccumulateType               = "convolve";
    writeStep                           = 0;
    initialWriteTime                    = 0;
    writeCompressedWeights              = false;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    combine_dW_with_W_flag              = false;
    nxp                                 = 1;
    nyp                                 = 1;
    nfp                                 = 1;
    shrinkPatches                       = false;
    normalizeMethod                     = "none";
    dWMax                               = 1;
    keepKernelsSynchronized             = true;
    normalizeDw                         = true;
    useMask                             = false;
    dWMaxDecayInterval                  = 0;
    dWMaxDecayFactor                    = 0;
    weightSparsity                      = 0;
};

HyPerConnCheckpointerTestProbe "probe" = {
    message                             = NULL;
    textOutputFlag                      = true;
    probeOutputFile                     = "probe.txt";
    triggerLayerName                    = NULL;
    energyProbe                         = NULL;
};
