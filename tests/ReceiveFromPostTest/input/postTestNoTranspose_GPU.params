debugParsing = false;

HyPerCol "column" = {
    nx = 32; //1242;  // KITTI synced value
    ny = 32;  //218;
    dt = 1.0;
    randomSeed = 1234567890;  // Must be at least 8 digits long.  // if not set here,  clock time is used to generate seed
    stopTime = 10.0;       // Depends on number of VINE video frames
    progressInterval = 1.0;
    //Change this
    outputPath = "output/postTestNoTranspose_GPU";
    checkpointWrite = false;
    // deleteOlderCheckpoints = false;
    lastCheckpointDir = "output/postTestNoTranspose_GPU/Last";
    writeProgressToErr = true;
};

ConstantLayer "input" = {
    nxScale = 1;
    nyScale = 1;
    nf = 3;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = false;
    sparseLayer = 0;
    //
    InitVType = "UniformRandomV";
    minV = 0;
    maxV = 1;

    phase = 1; 
};

HyPerLayer "outputRecvPre" = {
    nxScale = .5;
    nyScale = .5;
    nf = 32;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = false;
    sparseLayer = 0;
    //
    InitVType = "ZeroV";
    phase = 2; 
    triggerLayerName = NULL;
};

HyPerLayer "outputRecvPost" = {
    nxScale = .5;
    nyScale = .5;
    nf = 32;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = false;
    sparseLayer = 0;
    //
    InitVType = "ZeroV";
    phase = 2; 
    triggerLayerName = NULL;
};

HyPerLayer "outputTest" = {
    nxScale = .5;
    nyScale = .5;
    nf = 32;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = false;
    sparseLayer = 0;
    //
    InitVType = "ZeroV";
    phase = 3; 
    triggerLayerName = NULL;
};

HyPerConn "preConn" = {
    preLayerName = "input";
    postLayerName = "outputRecvPre";
    channelCode = 0;
    sharedWeights = true;
    nxp = 10; 
    nyp = 10; 
    numAxonalArbors = 1;
    writeStep = -1.0;
    // writeCompressedWeights = false;
    
    weightInitType = "UniformRandomWeight";
    wMinInit = -1;
    wMaxInit = 1;
    sparseFraction = 0;

    //weightInitType = "UniformWeight";
    //weightInit = 1;
        
    normalizeMethod                     = "none";
    //strength                            = 1;
    //rMinX                               = 1.5;
    //rMinY                               = 1.5;
    //normalize_cutoff                    = 0;

    // normalizeArborsIndividually = false;
    // normalizeFromPostPerspective = false;
    // symmetrizeWeights = false;
    
    writeCompressedCheckpoints = false;
    plasticityFlag = 0;
    pvpatchAccumulateType = "convolve";
     
    delay = 0;
     

    updateGSynFromPostPerspective = false;

};

CloneConn "postConn" = {
    preLayerName = "input";
    postLayerName = "outputRecvPost";
    channelCode = 0;
    originalConnName = "preConn";
    delay = 0;
    updateGSynFromPostPerspective = true;
    receiveGpu = true;
    pvpatchAccumulateType = "convolve";
};

IdentConn "RecvPostTest" = {
    preLayerName = "outputRecvPost";
    postLayerName = "outputTest";
    channelCode = 0;
    delay = 0;
};

IdentConn "RecvPreTest" = {
    preLayerName = "outputRecvPre";
    postLayerName = "outputTest";
    channelCode = 1;
    delay = 0;
};

ReceiveFromPostProbe "testProbe" = {
   targetLayer = "outputTest";
   message = "testProbe ";
   tolerance = 3e-3; // covers worst case with roundoff error 2^-24 and 3456 inputs 
};
