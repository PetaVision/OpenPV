debugParsing=false;

HyPerCol "column" = {
   nx = 32;
   ny = 32;
   startTime = 0.0;
   stopTime = 1.0;
   dt = 1;
   progressInterval = 1;
   writeProgressToErr = false;
   verifyWrites = false;
   randomSeed = 1615192023;
   initializeFromCheckpointDir = "";
   checkpointWrite = false;
   outputPath = "output/test_post_weights";
   printParamsFilename = "pv.params";
   suppressLastOutput = false;
   errorOnNotANumber = false;
};

HyPerLayer "test_post_weights L1" = {
   nxScale = 1;
   nyScale = 1;
   nf = 1;
   phase = 0;
   mirrorBCflag = false;
   valueBC = 0.0;
   triggerLayerName = NULL;
   writeStep = -1;
   sparseLayer = false;
   restart = false;
   InitVType = "ZeroV";
};

HyPerLayer "test_post_weights L2" = {
   nxScale = 1;
   nyScale = 1;
   nf = 1;
   phase = 0;
   mirrorBCflag = false;
   valueBC = 0.0;
   triggerLayerName = NULL;
   writeStep = -1;
   sparseLayer = false;
   restart = false;
   InitVType = "ZeroV";
};

HyPerLayer "test_post_weights L3" = {
   nxScale = 2;
   nyScale = 2;
   nf = 1;
   phase = 0;
   mirrorBCflag = false;
   valueBC = 0.0;
   triggerLayerName = NULL;
   writeStep = -1;
   sparseLayer = false;
   restart = false;
   InitVType = "ZeroV";
};

HyPerConn "test_post_weights L1 to L1" = {
   preLayerName = "test_post_weights L1";
   postLayerName = "test_post_weights L1";
   nxp = 3;
   nyp = 3;
   nfp = 1;
   numAxonalArbors = 1;
   channelCode = 0;
   sharedWeights = false;
   combine_dW_with_W_flag = false;
   weightInitType = "UniformWeight";
   weightInit = 0.0;
   connectOnlySameFeatures = false;
   plasticityFlag = false;
   pvpatchAccumulateType = "convolve";
   writeCompressedCheckpoints = false;
   selfFlag = false;
   updateGSynFromPostPerspective = false;
   delay = 0;
   writeStep = -1;
   shrinkPatches = false;
   convertRateToSpikeCount = false;
   normalizeMethod = "none";
};

// patch size should be odd number times scale factor
HyPerConn "test_post_weights L2 to L3" = {
   preLayerName = "test_post_weights L2";
   postLayerName = "test_post_weights L3";
   nxp = 10; //6; //8;
   nyp = 10; //6; //8;
   nfp = 1;
   numAxonalArbors = 1;
   channelCode = 0;
   sharedWeights = false;
   combine_dW_with_W_flag = false;
   weightInitType = "UniformWeight";
   weightInit = 0.0;
   connectOnlySameFeatures = false;
   plasticityFlag = false;
   pvpatchAccumulateType = "convolve";
   writeCompressedCheckpoints = false;
   selfFlag = false;
   updateGSynFromPostPerspective = false;
   delay = 0;
   writeStep = -1;
   shrinkPatches = false;
   convertRateToSpikeCount = false;
   normalizeMethod = "none";
};

// patch size should be odd number 
HyPerConn "test_post_weights L3 to L2" = {
   preLayerName = "test_post_weights L3";
   postLayerName = "test_post_weights L2";
   nxp = 5; // 1/2 of forward weight patch
   nyp = 5;
   nfp = 1;
   numAxonalArbors = 1;
   channelCode = 0;
   sharedWeights = false;
   combine_dW_with_W_flag = false;
   weightInitType = "UniformWeight";
   weightInit = 0.0;
   connectOnlySameFeatures = false;
   plasticityFlag = false;
   pvpatchAccumulateType = "convolve";
   writeCompressedCheckpoints = false;
   selfFlag = false;
   updateGSynFromPostPerspective = false;
   delay = 0;
   writeStep = -1;
   shrinkPatches = false;
   convertRateToSpikeCount = false;
   normalizeMethod = "none";
};
