//
// DtAdaptController_dtAdaptController.params
//
// created by peteschultz: Nov 2, 2015
//

//  A test of the new dtAdaptController method to verify that the
//  new dtAdaptController scheme can duplicate the ANNNormalizedErrorLayer
//  that we would like to deprecate.
//
//  input/DtAdaptController_ANNNormalized.params models an LCA hierarchy
//  using the old ANNNormalizedErrorLayer for the residual layer
//
//  input/DtAdaptController_dtAdaptController.params models an LCA hierarchy
//  using ANNErrorLayer for the residual layer
//
//  input/DtAdaptController_comparison.params compares the outputs of the
//  above two params files.


debugParsing = false;

HyPerCol "column" = {
   nx = 32;
   ny = 32;
   dt = 1.0;
   dtAdaptFlag = true;
   dtAdaptController = "TimeScale";
   dtAdaptTriggerLayerName = "Input";
   dtAdaptTriggerOffset = 0.0;
   dtScaleMax = 5;
   dtScaleMin = 0.125;
   dtChangeMax = 0.05;
   dtChangeMin = 0;
   dtMinToleratedTimeScale = 0.0001;
   writeTimescales = true;
   randomSeed = 1234567890;
   startTime = 0.0;
   stopTime = 50.0;
   progressInterval = 1.0;
   errorOnNotANumber = false;
   writeProgressToErr = false;
   outputPath = "output-dtAdaptController/";
   printParamsFilename = "pv.params";
   filenamesContainLayerNames = 2;
   filenamesContainConnectionNames = 2;
   initializeFromCheckpointDir = "";
   checkpointWrite = true;
   checkpointWriteDir = "output-dtAdaptController/checkpoints";
   checkpointWriteTriggerMode = "step";
   checkpointWriteStepInterval = 1;
   deleteOlderCheckpoints = false;
   // suppressLastOutput = false;
};

//
// layers
//

Movie "Input" = {
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 3;
    phase                               = 0;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    writeStep                           = -1;
    sparseLayer                         = false;
    updateGpu                           = false;
    dataType                            = NULL;
    inputPath                           = "input/CIFAR_frames.txt";
    offsetAnchor                        = "tl";
    offsetX                             = 0;
    offsetY                             = 0;
    writeImages                         = 0;
    inverseFlag                         = false;
    normalizeLuminanceFlag              = false;
    jitterFlag                          = 0;
    useImageBCflag                      = false;
    padValue                            = 0;
    autoResizeFlag                      = false;
    displayPeriod                       = 10;
    echoFramePathnameFlag               = true;
    batchMethod                         = "bySpecified";
    start_frame_index                   = [0.000000];
    skip_frame_index                    = [0.000000];
    writeFrameToTimestamp               = true;
    flipOnTimescaleError                = true;
    resetToStartOnLoop                  = false;
};

ANNNormalizedErrorLayer "Residual" = {
    nxScale = 1;
    nyScale = 1;
    nf = 3;
    phase = 1;
    mirrorBCflag = true;
    triggerLayerName = NULL;
    writeStep = 1;
    sparseLayer = false;

    InitVType = "ZeroV";

    VThresh = -infinity;
    AMax = infinity;
    AMin = -infinity;
    AShift = 0.0;
    VWidth = 0.0;
    
    errScale = 1.0;
};

HyPerLCALayer "V1" = {
    nxScale                             = 0.5;
    nyScale                             = 0.5;
    nf                                  = 48;
    phase                               = 2;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    InitVType                           = "UniformRandomV";
    minV                                = -1;
    maxV                                = 0.1;
    triggerLayerName                    = NULL;
    writeStep                           = 1;
    initialWriteTime                    = 0; // 1.44e+06;
    sparseLayer                         = true;
    writeSparseValues                   = true;
    VThresh                             = 0.025;
    AMin                                = 0;
    AMax                                = infinity;
    AShift                              = 0;
    VWidth                              = 0.025;
    timeConstantTau                     = 100;
    timeConstantTauMinimum              = 10;
    numWindowX                          = 1;
    numWindowY                          = 1;
    slopeErrorStd                       = 0.01;
    selfInteract                        = true;
    dVThresh                            = 0;
};

ANNLayer "Reconstruction" = {
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 3;
    phase                               = 3;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    InitVType                           = "ZeroV";
    triggerLayerName                    = NULL;
    writeStep                           = 1.0;
    initialWriteTime                    = 1.0;
    sparseLayer                         = false;
    VThresh                             = -infinity;
    AMin                                = -infinity;
    AMax                                = infinity;
    AShift                              = 0;
    VWidth                              = 0;
};

// connections

IdentConn "InputToResidual" = {
    preLayerName = "Input";
    postLayerName = "Residual";
    channelCode = 0;
    delay = 0;
    writeStep = -1;
};

HyPerConn "V1ToResidual" = {
    preLayerName                        = "V1";
    postLayerName                       = "Residual";
    channelCode                         = 1;
    sharedWeights                       = true;
    weightInitType                      = "UniformRandomWeight";
    // initWeightsFile                     was set to (NULL);
    wMinInit                            = -1;
    wMaxInit                            = 1;
    sparseFraction                      = 0.9;
    numAxonalArbors                     = 1;
    plasticityFlag                      = false;
    pvpatchAccumulateType               = "convolve";
    preActivityIsNotRate                = false;
    writeStep                           = 1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    combine_dW_with_W_flag              = false;
    delay                               = [0.0];
    nxp                                 = 18;
    nyp                                 = 18;
    nfp                                 = 3;
    shrinkPatches                       = false;
    updateGSynFromPostPerspective       = false;
    normalizeMethod                     = "normalizeL2";
    strength                            = 1;
    rMinX                               = 0;
    rMinY                               = 0;
    normalize_cutoff                    = 0;
    symmetrizeWeights                   = false;
    normalizeFromPostPerspective        = false;
    normalizeArborsIndividually         = false;
    minL2NormTolerated                  = 0;
    dWMax                               = 10.0;
    keepKernelsSynchronized             = true;
};

TransposeConn "ResidualToV1" = {
    preLayerName                        = "Residual";
    postLayerName                       = "V1";
    channelCode                         = 0;
    pvpatchAccumulateType               = "convolve";
    preActivityIsNotRate                = false;
    writeStep                           = -1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    delay                               = [0.0];
    updateGSynFromPostPerspective       = true;
    originalConnName                    = "V1ToResidual";
};

CloneConn "V1ToReconstruction" = {
    preLayerName                        = "V1";
    postLayerName                       = "Reconstruction";
    channelCode                         = 0;
    pvpatchAccumulateType               = "convolve";
    preActivityIsNotRate                = false;
    writeStep                           = -1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    delay                               = [0.0];
    updateGSynFromPostPerspective       = false;
    originalConnName                    = "V1ToResidual";

};

// QuotientColProbe to reproduce what ANNNormalizeErrorLayer does.

QuotientColProbe "TimeScale" = {
    numerator                           = "InputEnergyColProbe";
    denominator                         = "ReconstructionErrorColProbe";
    probeOutputFile                     = "timescale.txt";
    valueDescription                    = "TimeScale";
};

ColumnEnergyProbe "InputEnergyColProbe" = {
    probeOutputFile                     = "input_energy.txt";
};

L2NormProbe "InputEnergyProbe" = {
    targetLayer                         = "Input";
    message                             = NULL;
    probeOutputFile                     = "image_l2norm.txt";
    triggerLayerName                    = NULL;
    energyProbe                         = "InputEnergyColProbe";
    coefficient                         = 1.0;
    exponent                            = 1.0;
};

ColumnEnergyProbe "ReconstructionErrorColProbe" = {
    probeOutputFile                     = "recon_energy.txt";
};

L2NormProbe "ReconstructionErrorProbe" = {
    targetLayer                         = "Residual";
    message                             = NULL;
    probeOutputFile                     = "recon_error_l2norm.txt";
    triggerLayerName                    = NULL;
    energyProbe                         = "ReconstructionErrorColProbe";
    coefficient                         = 1.0;
    exponent                            = 1.0;
};
