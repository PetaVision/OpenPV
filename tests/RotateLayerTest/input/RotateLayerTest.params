//
// RotateLayerTest.params

//  A params file to test RotateLayer
//  An ImageLayer reads images with a display period of 2.
//  A RotateLayer, triggered off the ImageLayer, rotates the images.
//  The RotateLayer is connected to the ImageLayer with an IdentConn.

debugParsing = false;

HyPerCol "column" = {
    dt                                  = 1;
    stopTime                            = 10;
    progressInterval                    = 1;
    writeProgressToErr                  = false;
    printParamsFilename                 = "RotateLayerTest.params";
    randomSeed                          = 792316240;
    nx                                  = 64;
    ny                                  = 64;
    nbatch                              = 4;
    errorOnUnusedParam                  = false;
    errorOnNotANumber                   = true;
    outputPath                          = "output/";
    verifyWrites                        = false;
    checkpointWrite                     = false;
    lastCheckpointDir                   = "output/Last";
    initializeFromCheckpointDir         = "";
};

//
// layers
//

ImageLayer "Input" = {
    initializeFromCheckpointFlag        = false;
    broadcastFlag                       = false;
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 3;
    phase                               = 0;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    displayPeriod                       = 2;
    inputPath                           = "input/images.txt";
    offsetAnchor                        = "tl";
    offsetX                             = 0;
    offsetY                             = 0;
    jitterChangeInterval                = 0;
    autoResizeFlag                      = false;
    inverseFlag                         = false;
    normalizeLuminanceFlag              = false;
    useInputBCflag                      = false;
    padValue                            = 0;
    batchMethod                         = "bySpecified";
    randomSeed                          = 123456789;
    start_frame_index                   = [0, 1, 2, 3];
    skip_frame_index                    = [1, 1, 1, 1];
    writeFrameToTimestamp               = true;
    updateGpu                           = false;
    sparseLayer                         = false;
    writeStep                           = 1.0;
    initialWriteTime                    = 1.0;
};

RotateLayer "Output" = {
    initializeFromCheckpointFlag        = false;
    broadcastFlag                       = false;
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 3;
    phase                               = 1;
    mirrorBCflag                        = true;
    triggerLayerName                    = "Input";
    triggerOffset                       = 0;
    triggerBehavior                     = "updateOnlyOnTrigger";
    angleMin                            = 0;
    angleMax                            = 60;
    angleUnits                          = "degrees";
    writeAnglesFile                     = "angles.txt";
    InitVType                           = "ZeroV";
    updateGpu                           = false;
    sparseLayer                         = false;
    writeStep                           = 1.0;
    initialWriteTime                    = 1.0;
};

PvpLayer "Correct" = {
    initializeFromCheckpointFlag        = false;
    broadcastFlag                       = false;
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 3;
    phase                               = 0;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    displayPeriod                       = 2;
    inputPath                           = "input/correct.pvp";
    offsetAnchor                        = "tl";
    offsetX                             = 0;
    offsetY                             = 0;
    jitterChangeInterval                = 0;
    autoResizeFlag                      = true;
    aspectRatioAdjustment               = "crop";
    interpolationMethod                 = "bicubic";
    inverseFlag                         = false;
    normalizeLuminanceFlag              = false;
    useInputBCflag                      = false;
    padValue                            = 0;
    batchMethod                         = "byFile";
    randomSeed                          = 123456789;
    start_frame_index                   = [0, 0, 0, 0];
    writeFrameToTimestamp               = true;
    updateGpu                           = false;
    sparseLayer                         = false;
    writeStep                           = 1.0;
    initialWriteTime                    = 1.0;
};

HyPerLayer "Comparison" = {
    initializeFromCheckpointFlag        = false;
    broadcastFlag                       = false;
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 3;
    phase                               = 2;
    mirrorBCflag                        = true;
    triggerLayerName                    = "";
    InitVType                           = "ZeroV";
    updateGpu                           = false;
    sparseLayer                         = false;
    writeStep                           = 1.0;
    initialWriteTime                    = 1.0;
};

//
// connections
//

IdentConn "InputToOutput" = {
    initializeFromCheckpointFlag        = false;
    preLayerName                        = "Input";
    postLayerName                       = "Output";
    channelCode                         = 0;
    delay                               = [0.000000];
};

IdentConn "OutputToComparison" = {
    initializeFromCheckpointFlag        = false;
    preLayerName                        = "Output";
    postLayerName                       = "Comparison";
    channelCode                         = 0;
    delay                               = [0.000000];
};

IdentConn "CorrectToComparison" = {
    initializeFromCheckpointFlag        = false;
    preLayerName                        = "Correct";
    postLayerName                       = "Comparison";
    channelCode                         = 1;
    delay                               = [0.000000];
};

RequireAllZeroActivityProbe "ComparisonProbe" = {
    targetLayer = "Comparison";
    message = NULL;
    textOutputFlag = true;
    probeOutputFile = NULL;
    triggerLayerName = NULL;
    nnzThreshold = 1.0e-6;
    exitOnFailure = true;
    immediateExitOnFailure = false;
};
