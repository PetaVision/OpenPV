//
// BasicSystemTest.params
//
// created by peteschultz: Nov 10, 2011
//

//  A params file for a simple simulation: two layers, one connection.
//  It serves as the basic template for systems tests, and tests the
//  basic functionality
//

debugParsing = true;    // Debug the reading of this parameter file.

HyPerCol "column" = {
   nx = 32;   //size of the whole networks
   ny = 50;
   nbatch = 1;
   dt = 1.0;  //time step in ms.	     
   dtAdaptController = NULL;
   randomSeed = 1234567890;  // Must be at least 8 digits long.  // if not set here,  clock time is used to generate seed
   startTime = 0.0;
   stopTime = 1.0;  
   progressInterval = 1.0; //Program will output its progress at each progressInterval
   writeProgressToErr = false;  
   verifyWrites = true;
   outputPath = "output/";
   printParamsFilename = "pv.params";
   checkpointWrite = false;
   initializeFromCheckpointDir = "";
   suppressLastOutput = false; //Save the last output as checkpoint.
   errorOnNotANumber = false;
};

//
// layers
//

// this is a input layer
ImagePvp "input" = {
    restart = 0;  // make only a certain layer restart
    nxScale = 1;  // this must be 2^n, n = ...,-2,-1,0,1,2,... 
    nyScale = 1;  // the scale is to decide how much area will be used as input. For exampel, nx * nxScale = 32. The size of input
    	      	  // cannot be larger than the input image size.
    inputPath = "input/input.pvp"; // it's a 32*32 image
    nf = 1; //number of features. For a grey image, it's 1. For a color image, it could be either 1 or 3.
    phase = 0; //phase defines an order in which layers should be executed.
    writeStep = -1;  //-1 means doesn't write for log
    sparseLayer = false; //only write weights which are not 0
    mirrorBCflag = false;    //border condition flag
    valueBC = 0.0;
    useImageBCflag = false;
    inverseFlag = false; 
    normalizeLuminanceFlag = false;
    autoResizeFlag = false;
    writeImages = false;
    offsetX = 0;  // offset for crop, when the input size is smaller than the size of image
    offsetY = 0;
    jitterFlag = false; // moving around like an eyeball. our eyeballs are not still even when we are gazing at something.
};

//Binning layer to test
BinningTestLayer "binLayer" = {
    restart = 0;
    nxScale = 1; 
    nyScale = 1;
    nf = 32; // 8 outputs 
    phase = 1;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = 0;
    sparseLayer = false;
    binMax = 1;
    binMin = 0;
    sigma = 0;
    delay = 0;
    originalLayerName = "input";
};

//Binning layer to test
BinningTestLayer "binLayerSigma" = {
    restart = 0;
    nxScale = 1; 
    nyScale = 1;
    nf = 32; // 8 outputs 
    phase = 1;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = 0;
    sparseLayer = false;
    binMax = 1;
    binMin = 0;
    sigma = 2;
    delay = 0;
    originalLayerName = "input";
};
