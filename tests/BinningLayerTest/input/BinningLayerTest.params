//
// BinningLayerTest.params
//
// created by slundquist: Jan 15, 2014
//

//  A params file to test BinningLayer.
//  An input image with values ranging from 0 to 255 is passed to an binning layer with 32 bins,
//  once with binSigma = 0 and once with binSigma = 2.
//

debugParsing = true;    // Debug the reading of this parameter file.

HyPerCol "column" = {
   nx = 16;   //size of the whole networks
   ny = 16;
   nbatch = 1;
   dt = 1.0;  //time step in ms.	     
   randomSeed = 1234567890;  // Must be at least 8 digits long.  // if not set here,  clock time is used to generate seed
   stopTime = 1.0;  
   progressInterval = 1.0; //Program will output its progress at each progressInterval
   writeProgressToErr = false;  
   verifyWrites = true;
   outputPath = "output/";
   printParamsFilename = "pv.params";
   checkpointWrite = false;
   initializeFromCheckpointDir = "";
   lastCheckpointDir = "output/Last"; //Save the last output as checkpoint.
   errorOnNotANumber = false;
};

//
// layers
//

// this is a input layer
PvpLayer "input" = {
    nxScale = 1;  // this must be 2^n, n = ...,-2,-1,0,1,2,... 
    nyScale = 1;  // the scale is to decide how much area will be used as input. For exampel, nx * nxScale = 32. The size of input
    	      	  // cannot be larger than the input image size.
    inputPath = "input/input.pvp"; // it's a 32*32 image
    nf = 1; //number of features. For a grey image, it's 1. For a color image, it could be either 1 or 3.
    phase = 0; //phase defines an order in which layers should be executed.
    writeStep = -1;  //-1 means doesn't write for log
    mirrorBCflag = false;    //border condition flag
    valueBC = 0.0;
    useInputBCflag = false;
    inverseFlag = false; 
    normalizeLuminanceFlag = false;
    autoResizeFlag = false;
    offsetX = 0;  // offset for crop, when the input size is smaller than the size of image
    offsetY = 0;
	displayPeriod                       = 0;
};

//Binning layer to test
BinningLayer "binLayer" = {
    restart = 0;
    nxScale = 1; 
    nyScale = 1;
    nf = 32; // 32 bins
    phase = 1;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = 0;
    sparseLayer = false;
    binMax = 1;
    binMin = 0;
    binSigma = 0;
    delay = 0;
    originalLayerName = "input";
};

//Binning layer to test
BinningLayer "binLayerSigma" = {
    restart = 0;
    nxScale = 1; 
    nyScale = 1;
    nf = 32; // 32 bins
    phase = 1;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = 0;
    sparseLayer = false;
    binMax = 1;
    binMin = 0;
    binSigma = 2;
    delay = 0;
    originalLayerName = "input";
};

BinningTestProbe "binLayerProbe" = {
    targetName = "binLayer";
    message = NULL;
    textOutputFlag = true;
    probeOutputFile = NULL;
    triggerLayerName = NULL;
    energyProbe = NULL;
};

BinningTestProbe "binLayerSigmaProbe" = {
    targetName = "binLayerSigma";
    message = NULL;
    textOutputFlag = true;
    probeOutputFile = NULL;
    triggerLayerName = NULL;
    energyProbe = NULL;
};
