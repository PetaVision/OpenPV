//
// RotateLayerRandStateTest_CheckpointReadTest.params
//
//  A params file to test checkpointing the random state of RotateLayer
//  There is a RotateLayer. Since we're only testing the RandState, it doesn't really matter how
//  big the layer is, or whether it's connected to anything.
//
//  This params file is written to be used together with RotateLayerTest_CheckpointWrite.params.
//  The only difference between the two params files is that the Write params file writes
//  checkpoints to the output/Checkpoints1 directory, and this ReadTest params file writes
//  checkpoints to the output/Checkpoints2 directory.
//
//  The system test runs this file to generate checkpoints, then runs the ReadTest params file,
//  with CheckpointReadDir set to one of the checkpoints generated by the Write run.
//  Finally, the test compares the Rotate_rand_state.bin files at the end of the two runs; they
//  should be identical.

debugParsing = false;

HyPerCol "column" = {
    dt                                  = 1;
    stopTime                            = 10;
    progressInterval                    = 1;
    writeProgressToErr                  = false;
    printParamsFilename                 = "RotateLayerTest.params";
    randomSeed                          = 792316240;
    nx                                  = 16;
    ny                                  = 16;
    nbatch                              = 12;
    errorOnUnusedParam                  = false;
    errorOnNotANumber                   = true;
    outputPath                          = "output/";
    verifyWrites                        = false;
    checkpointWrite                     = true;
    checkpointWriteDir                  = "output/Checkpoints2";
    initializeFromCheckpointDir         = "";
};

//
// layers
//

RotateLayer "Rotate" = {
    initializeFromCheckpointFlag        = false;
    broadcastFlag                       = false;
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 3;
    phase                               = 1;
    mirrorBCflag                        = true;
    triggerBehavior                     = "none";
    angleMin                            = 0;
    angleMax                            = 60;
    angleUnits                          = "degrees";
    writeAnglesFile                     = "angles.txt";
    InitVType                           = "ZeroV";
    updateGpu                           = false;
    sparseLayer                         = false;
    writeStep                           = -1;
};
