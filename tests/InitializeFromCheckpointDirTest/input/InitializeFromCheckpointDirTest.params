//
// InitializeFromCheckpointDirTest.params
//
// created by peteschultz: Nov 10, 2011
//

//  A params file for InitializeFromCheckpointDirTest.
//  An ImageLayer loads images, with the image for batch index n having a
//  constant value of n+1.
//  An IdentConn connects it to a leaky integrator with no decay, so that at
//  timestep t, batch index n should have a value of t*n.
//
//  Then InitializeFromCheckpointDirTest.params runs with
//  initializeFromCheckpointDir set, and continues the run.
//  The test verifies that the leaky integrator has the correct values.

debugParsing = false;    // Debug the reading of this parameter file.

HyPerCol "column" = {
    dt                                  = 1;
    stopTime                            = 10;
    progressInterval                    = 10;
    writeProgressToErr                  = false;
    printParamsFilename                 = "pv.params";
    randomSeed                          = 1234567890;
    nx                                  = 8;
    ny                                  = 8;
    nbatch                              = 4;
    errorOnNotANumber                   = true;
    outputPath                          = "output-InitializeFromCheckpointDir/";
    verifyWrites                        = false;
    checkpointWrite                     = true;
    checkpointWriteDir                  = "output-InitializeFromCheckpointDir/checkpoints";
    checkpointWriteTriggerMode          = "step";
    checkpointWriteStepInterval         = 1;
    checkpointIndexWidth                = -1;
    suppressNonplasticCheckpoints       = true;
    deleteOlderCheckpoints              = false;
    initializeFromCheckpointDir         = "output-BaseRun/checkpoints/Checkpoint10";
};

PvpLayer "Input" = {
    initializeFromCheckpointFlag        = false;
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 1;
    phase                               = 0;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    displayPeriod                       = 100;
    inputPath                           = "input/input.pvp";
    offsetAnchor                        = "tl";
    offsetX                             = 0;
    offsetY                             = 0;
    jitterChangeInterval                = 0;
    autoResizeFlag                      = false;
    inverseFlag                         = false;
    normalizeLuminanceFlag              = false;
    useInputBCflag                      = false;
    padValue                            = 0;
    batchMethod                         = "bySpecified";
    randomSeed                          = 123456789;
    start_frame_index                   = [0, 1, 2, 3];
    skip_frame_index                    = [1, 1, 1, 1];
    resetToStartOnLoop                  = false;
    writeFrameToTimestamp               = true;
    updateGpu                           = false;
    sparseLayer                         = false;
    writeStep                           = 1;
    initialWriteTime                    = 0;
};

LeakyIntegrator "Output" = {
    initializeFromCheckpointFlag        = true;
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 1;
    phase                               = 1;
    mirrorBCflag                        = true;
    triggerLayerName                    = NULL;
    VThresh                             = -infinity;
    AMin                                = -infinity;
    AMax                                = infinity;
    AShift                              = 0;
    VWidth                              = 0;
    InitVType                           = "ZeroV";
    integrationTime                     = infinity;
    updateGpu                           = false;
    sparseLayer                         = false;
    writeStep                           = 1;
    initialWriteTime                    = 0;
};

IdentConn "InputToOutput" = {
    initializeFromCheckpointFlag        = false;
    preLayerName                        = "Input";
    postLayerName                       = "Output";
    channelCode                         = 0;
    delay                               = 0;
};
