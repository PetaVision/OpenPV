// test_gauss2d.params
// Layers and connections for test_gauss2d

debugParsing = false;

HyPerCol "test_gauss2d_column" = {
   nx = 16;
   ny = 16;
   stopTime = 1.0;
   progressInterval = 1.0;
   writeProgressToErr = false;
   verifyWrites = false;
   dt = 1.0;
   outputPath = "output/test_gauss2d/";
   printParamsFilename = "pv.params";
   initializeFromCheckpointDir = "";
   checkpointWrite = false;
   lastCheckpointDir = "output/test_gauss2d/Last";
   errorOnNotANumber = false;
};

HyPerLayer "test_gauss2d_pre" = {
   restart = false;
   nxScale = 1;
   nyScale = 1;
   nf = 4;
   phase = 0;
   mirrorBCflag = false;
   valueBC = 0.0;
   InitVType = "ZeroV";
   triggerLayerName = NULL;
   writeStep = 1.0;
   initialWriteTime = 0.0;
   sparseLayer = false;
};

HyPerLayer "test_gauss2d_post" = {
   restart = false;
   nxScale = 1;
   nyScale = 1;
   nf = 4;
   phase = 0;
   mirrorBCflag = false;
   valueBC = 0.0;
   InitVType = "ZeroV";
   triggerLayerName = NULL;
   writeStep = 1.0;
   initialWriteTime = 0.0;
   sparseLayer = false;
};

HyPerConn "test_gauss2d_hyperconn" = {
   preLayerName = "test_gauss2d_pre";
   postLayerName = "test_gauss2d_post";
   nxp = 5;
   nyp = 5;
   nfp = -1;
   numAxonalArbors = 1;
   channelCode = 0;
   sharedWeights = false;
   weightInitType = "Gauss2DWeight";
   aspect = 2;
   sigma = 3;
   rMin = 0;
   rMax = 5;
   strength = 1.0;
   numOrientationsPost = 4;
   numOrientationsPre = 4;
   normalizeMethod = "none";
   writeCompressedWeights = false;
   plasticityFlag = false;
   pvpatchAccumulateType = "convolve";
   convertRateToSpikeCount = false;
   writeStep = 1.0;
   initialWriteTime = 0.0;
   writeCompressedCheckpoints = false;
   updateGSynFromPostPerspective = false;
   delay = 0;
};

HyPerConn "test_gauss2d_kernelconn" = {
   preLayerName = "test_gauss2d_pre";
   postLayerName = "test_gauss2d_post";
   nxp = 5;
   nyp = 5;
   nfp = -1;
   numAxonalArbors = 1;
   channelCode = 0;
   sharedWeights = true;
   weightInitType = "Gauss2DWeight";
   aspect = 2;
   sigma = 3;
   rMin = 0;
   rMax = 5;
   strength = 1.0;
   numOrientationsPost = 4;
   numOrientationsPre = 4;
   normalizeMethod = "none";
   writeCompressedWeights = false;
   plasticityFlag = false;
   pvpatchAccumulateType = "convolve";
   convertRateToSpikeCount = false;
   writeStep = 1.0;
   initialWriteTime = 0.0;
   writeCompressedCheckpoints = false;
   updateGSynFromPostPerspective = false;
   delay = 0;
};

HyPerLayer "test_gauss2d_pre2" = {
   restart = false;
   nxScale = 2;
   nyScale = 2;
   nf = 4;
   phase = 0;
   mirrorBCflag = false;
   valueBC = 0.0;
   InitVType = "ZeroV";
   triggerLayerName = NULL;
   writeStep = 1.0;
   initialWriteTime = 0.0;
   sparseLayer = false;
};

HyPerLayer "test_gauss2d_post2" = {
   restart = false;
   nxScale = 2;
   nyScale = 2;
   nf = 4;
   phase = 0;
   mirrorBCflag = false;
   valueBC = 0.0;
   InitVType = "ZeroV";
   triggerLayerName = NULL;
   writeStep = 1.0;
   initialWriteTime = 0.0;
   sparseLayer = false;
};

HyPerConn "test_gauss2d_hyperconn1to2" = {
   preLayerName = "test_gauss2d_pre";
   postLayerName = "test_gauss2d_post2";
   nxp = 10;  // must be scale factor times odd number
   nyp = 10;
   nfp = -1;
   numAxonalArbors = 1;
   channelCode = 0;
   sharedWeights = false;
   weightInitType = "Gauss2DWeight";
   aspect = 2;
   sigma = 6;
   rMin = 0;
   rMax = 8;
   strength = 1.0;
   numOrientationsPost = 4;
   numOrientationsPre = 4;
   normalizeMethod = "none";
   writeCompressedWeights = false;
   plasticityFlag = false;
   pvpatchAccumulateType = "convolve";
   convertRateToSpikeCount = false;
   writeStep = 1.0;
   initialWriteTime = 0.0;
   writeCompressedCheckpoints = false;
   updateGSynFromPostPerspective = false;

   delay = 0;
};

HyPerConn "test_gauss2d_kernelconn1to2" = {
   preLayerName = "test_gauss2d_pre";
   postLayerName = "test_gauss2d_post2";
   nxp = 10;  // must be scale factor times odd number
   nyp = 10;
   nfp = -1;
   numAxonalArbors = 1;
   channelCode = 0;
   sharedWeights = true;
   weightInitType = "Gauss2DWeight";
   aspect = 2;
   sigma = 6;
   rMin = 0;
   rMax = 8;
   strength = 1.0;
   numOrientationsPost = 4;
   numOrientationsPre = 4;
   normalizeMethod = "none";
   writeCompressedWeights = false;
   plasticityFlag = false;
   pvpatchAccumulateType = "convolve";
   convertRateToSpikeCount = false;
   writeStep = 1.0;
   initialWriteTime = 0.0;
   writeCompressedCheckpoints = false;
   updateGSynFromPostPerspective = false;

   delay = 0;
};

HyPerConn "test_gauss2d_hyperconn2to1" = {
   preLayerName = "test_gauss2d_pre2";
   postLayerName = "test_gauss2d_post";
   nxp = 5; // must be odd
   nyp = 5;
   nfp = -1;
   numAxonalArbors = 1;
   channelCode = 0;
   sharedWeights = false;
   weightInitType = "Gauss2DWeight";
   aspect = 2;
   sigma = 3;
   rMin = 0;
   rMax = 5;
   strength = 1.0;
   numOrientationsPost = 4;
   numOrientationsPre = 4;
   normalizeMethod = "none";
   writeCompressedWeights = false;
   plasticityFlag = false;
   pvpatchAccumulateType = "convolve";
   convertRateToSpikeCount = false;
   writeStep = 1.0;
   initialWriteTime = 0.0;
   writeCompressedCheckpoints = false;
   updateGSynFromPostPerspective = false;

   delay = 0;
};

HyPerConn "test_gauss2d_kernelconn2to1" = {
   preLayerName = "test_gauss2d_pre2";
   postLayerName = "test_gauss2d_post";
   nxp = 5;
   nyp = 5;
   nfp = -1;
   numAxonalArbors = 1;
   channelCode = 0;
   sharedWeights = true;
   weightInitType = "Gauss2DWeight";
   aspect = 2;
   sigma = 3;
   rMin = 0;
   rMax = 5;
   strength = 1.0;
   numOrientationsPost = 4;
   numOrientationsPre = 4;
   normalizeMethod = "none";
   writeCompressedWeights = false;
   plasticityFlag = false;
   pvpatchAccumulateType = "convolve";
   convertRateToSpikeCount = false;
   writeStep = 1.0;
   initialWriteTime = 0.0;
   writeCompressedCheckpoints = false;
   updateGSynFromPostPerspective = false;

   delay = 0;
};
