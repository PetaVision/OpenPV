//
// BatchSweepTest.params
//
// created by peteschultz: Aug 10, 2012
//

//  A params file for testing parameter sweeps
//

debugParsing = false;

HyPerCol "column" = {
   nx = 16;   
   ny = 16;
   dt = 1.0;
   randomSeed = 1946576187;  // if not set here,  clock time is used to generate seed
   startTime = 0.0;
   stopTime = 10.0;
   progressInterval = 10;
   writeProgressToErr = false;
   verifyWrites = true;
   printParamsFilename = "pv.params";
   checkpointWrite = false;
   suppressLastOutput = false;
   nbatch = 4;
};

//
// layers
//

PvpLayer "Input" = {
    nxScale = 1;
    nyScale = 1;
    inputPath = "input/sampleimage.pvp";
    nf = 1;
    phase = 0;
    writeStep = -1;
    sparseLayer = false;
    mirrorBCflag = false;
    valueBC = 0.0;
    useInputBCflag = false;
    inverseFlag = false;
    normalizeLuminanceFlag = false;
    autoResizeFlag = false;
    offsetX = 0;
    offsetY = 0;
	displayPeriod = 0;
	batchMethod = "bySpecified";
	start_frame_index = [0, 0, 0, 0];
	skip_frame_index = [1, 1, 1, 1];
};

ANNLayer "Output" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 1;
    phase = 0;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = true;
    sparseLayer = false;

    InitVType = "ZeroV";

    VThresh = -infinity;
    AMax = infinity;
    AMin = -infinity;
    AShift=0.0;
};

ANNLayer "Output1x1" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 1;
    phase = 0;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = true;
    sparseLayer = false;

    InitVType = "ZeroV";

    VThresh = -infinity;
    AMax = infinity;
    AMin = -infinity;
    AShift=0.0;
};

ANNLayer "Output3x3" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 1;
    phase = 0;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = true;
    sparseLayer = false;

    InitVType = "ZeroV";

    VThresh = -infinity;
    AMax = infinity;
    AMin = -infinity;
    AShift=0.0;
};

ANNLayer "Output5x5" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 1;
    phase = 0;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = true;
    sparseLayer = false;

    InitVType = "ZeroV";

    VThresh = -infinity;
    AMax = infinity;
    AMin = -infinity;
    AShift=0.0;
};

ANNLayer "Output7x7" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 1;
    phase = 0;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = true;
    sparseLayer = false;

    InitVType = "ZeroV";

    VThresh = -infinity;
    AMax = infinity;
    AMin = -infinity;
    AShift=0.0;
};

ANNLayer "Comparison1x1" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 1;
    phase = 0;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = true;
    sparseLayer = false;

    InitVType = "ZeroV";

    VThresh = -infinity;
    AMax = infinity;
    AMin = -infinity;
    AShift=0.0;
};

ANNLayer "Comparison3x3" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 1;
    phase = 0;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = true;
    sparseLayer = false;

    InitVType = "ZeroV";

    VThresh = -infinity;
    AMax = infinity;
    AMin = -infinity;
    AShift=0.0;
};

ANNLayer "Comparison5x5" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 1;
    phase = 0;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = true;
    sparseLayer = false;

    InitVType = "ZeroV";

    VThresh = -infinity;
    AMax = infinity;
    AMin = -infinity;
    AShift=0.0;
};

ANNLayer "Comparison7x7" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 1;
    phase = 0;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = true;
    sparseLayer = false;

    InitVType = "ZeroV";

    VThresh = -infinity;
    AMax = infinity;
    AMin = -infinity;
    AShift=0.0;
};

HyPerConn "InputToOutput" = {
    preLayerName = "Input";
    postLayerName = "Output";
    channelCode = 0;
    sharedWeights = true;
    // nxp = 7;
    // nyp = 7;
    nfp = 1;
    numAxonalArbors = 1;
    writeStep = -1;
    
    weightInitType = "UniformWeight";
    weightInit = 1.0;
      
    normalizeMethod = "none";

    writeCompressedCheckpoints = 0.0;
    plasticityFlag = false;
    selfFlag = false;
    updateGSynFromPostPerspective = false;

    delay = 0;

    pvpatchAccumulateType = "convolve";
    shrinkPatches = false;
    convertRateToSpikeCount = false;
};

HyPerConn "InputToOutput1x1" = {
    preLayerName = "Input";
    postLayerName = "Output1x1";
    channelCode = 0;
    sharedWeights = true;
    nxp = 1;
    nyp = 1;
    nfp = 1;
    numAxonalArbors = 1;
    writeStep = -1;
    
    weightInitType = "UniformWeight";
    weightInit = 1.0;
      
    normalizeMethod = "none";

    writeCompressedCheckpoints = 0.0;
    plasticityFlag = false;
    selfFlag = false;
    updateGSynFromPostPerspective = false;

    delay = 0;

    pvpatchAccumulateType = "convolve";
    shrinkPatches = false;
    convertRateToSpikeCount = false;
};

HyPerConn "InputToOutput3x3" = {
    preLayerName = "Input";
    postLayerName = "Output3x3";
    channelCode = 0;
    sharedWeights = true;
    nxp = 3;
    nyp = 3;
    nfp = 1;
    numAxonalArbors = 1;
    writeStep = -1;
    
    weightInitType = "UniformWeight";
    weightInit = 1.0;
      
    normalizeMethod = "none";

    writeCompressedCheckpoints = 0.0;
    plasticityFlag = false;
    selfFlag = false;
    updateGSynFromPostPerspective = false;

    delay = 0;

    pvpatchAccumulateType = "convolve";
    shrinkPatches = false;
    convertRateToSpikeCount = false;
};

HyPerConn "InputToOutput5x5" = {
    preLayerName = "Input";
    postLayerName = "Output5x5";
    channelCode = 0;
    sharedWeights = true;
    nxp = 5;
    nyp = 5;
    nfp = 1;
    numAxonalArbors = 1;
    writeStep = -1;
    
    weightInitType = "UniformWeight";
    weightInit = 1.0;
      
    normalizeMethod = "none";

    writeCompressedCheckpoints = 0.0;
    plasticityFlag = false;
    selfFlag = false;
    updateGSynFromPostPerspective = false;

    delay = 0;

    pvpatchAccumulateType = "convolve";
    shrinkPatches = false;
    convertRateToSpikeCount = false;
};

HyPerConn "InputToOutput7x7" = {
    preLayerName = "Input";
    postLayerName = "Output7x7";
    channelCode = 0;
    sharedWeights = true;
    nxp = 7;
    nyp = 7;
    nfp = 1;
    numAxonalArbors = 1;
    writeStep = -1;
    
    weightInitType = "UniformWeight";
    weightInit = 1.0;
      
    normalizeMethod = "none";

    writeCompressedCheckpoints = 0.0;
    plasticityFlag = false;
    selfFlag = false;
    updateGSynFromPostPerspective = false;

    delay = 0;

    pvpatchAccumulateType = "convolve";
    shrinkPatches = false;
    convertRateToSpikeCount = false;
};

IdentConn "OutputToComparison1x1" = {
    channelCode = 0;
    delay = 0;
    writeStep = -1;
};

IdentConn "Output1x1ToComparison1x1" = {
    channelCode = 1;
    delay = 0;
    writeStep = -1;
};

IdentConn "OutputToComparison3x3" = {
    channelCode = 0;
    delay = 0;
    writeStep = -1;
};

IdentConn "Output3x3ToComparison3x3" = {
    channelCode = 1;
    delay = 0;
    writeStep = -1;
};

IdentConn "OutputToComparison5x5" = {
    channelCode = 0;
    delay = 0;
    writeStep = -1;
};

IdentConn "Output5x5ToComparison5x5" = {
    channelCode = 1;
    delay = 0;
    writeStep = -1;
};

IdentConn "OutputToComparison7x7" = {
    channelCode = 0;
    delay = 0;
    writeStep = -1;
};

IdentConn "Output7x7ToComparison7x7" = {
    channelCode = 1;
    delay = 0;
    writeStep = -1;
};

BatchSweepTestProbe "Comparison1x1Probe" = {
    targetLayer = "Comparison1x1";
    message = "comparison1x1 probe     ";
};

BatchSweepTestProbe "Comparison3x3Probe" = {
    targetLayer = "Comparison3x3";
    message = "comparison3x3 probe     ";
};

BatchSweepTestProbe "Comparison5x5Probe" = {
    targetLayer = "Comparison5x5";
    message = "comparison5x5 probe     ";
};

BatchSweepTestProbe "Comparison7x7Probe" = {
    targetLayer = "Comparison7x7";
    message = "comparison7x7 probe     ";
};

BatchSweep "InputToOutput":nxp = {
    1; 3; 5; 7;
};

BatchSweep "InputToOutput":nyp = {
    1; 3; 5; 7;
};

BatchSweep "Comparison1x1Probe":expectedSum = {
    0; 8; 24; 48;
};

BatchSweep "Comparison1x1Probe":expectedMin = {
    0; 0; 0; 0;
};

BatchSweep "Comparison1x1Probe":expectedMax = {
    0; 1; 1; 1;
};

BatchSweep "Comparison3x3Probe":expectedSum = {
    -8; 0; 16; 40;
};

BatchSweep "Comparison3x3Probe":expectedMin = {
    -1; 0; 0; 0;
};

BatchSweep "Comparison3x3Probe":expectedMax = {
    0; 0; 1; 1;
};

BatchSweep "Comparison5x5Probe":expectedSum = {
    -24; -16; 0; 24;
};

BatchSweep "Comparison5x5Probe":expectedMin = {
    -1; -1; 0; 0;
};

BatchSweep "Comparison5x5Probe":expectedMax = {
    0; 0; 0; 1;
};

BatchSweep "Comparison7x7Probe":expectedSum = {
    -48; -40; -24; 0;
};

BatchSweep "Comparison7x7Probe":expectedMin = {
    -1; -1; -1; 0;
};

BatchSweep "Comparison7x7Probe":expectedMax = {
    0; 0; 0; 0;
};

BatchSweep "column":outputPath = {
    "output1/";
    "output3/";
    "output5/";
    "output7/";
};
