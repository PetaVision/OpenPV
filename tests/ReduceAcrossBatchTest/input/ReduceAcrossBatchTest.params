//
// ReduceAcrossBatchTest.params
//
// created by peteschultz: Nov 7, 2016
//

// A params file testing HyPerConn::reduceAcrossBatch(), which synchronizes the weights when
// a connection is plastic, weights are nonshared, and the communicator's numCommBatches() is
// greater than one.

// The layer Input loads input/Input.pvp, which has 4 frames; each batch element has its own
// frame. The connection InputToOutput goes to a constant layer with all activities 1.

// The connection InputToOutput is a plastic 1x1 HyPerConn with shared weights off, on channel -1,
// initialized to all zeros. Since pre*post is the input/Input.pvp, the reduction across the batch
// after one weight update should make the weights equal to the sum of the four frames in
// input/Input.pvp. The file input/suminputs.pvp contains this sum. It is loaded into the
// layer SumInputs. Finally, the buildandrun customexithook checks whether the InputToOutput
// weights agree with the SumInputs layer.

debugParsing = false;   

HyPerCol "column" = {
   nx = 8;  
   ny = 8;
   nbatch = 4;
   dt = 1.0; 
   randomSeed = 1234567890; 
   stopTime = 1.0;  
   errorOnNotANumber = true;
   progressInterval = 10.0;
   writeProgressToErr = false;
   verifyWrites = false;
   outputPath = "output/";
   printParamsFilename = "pv.params";
   initializeFromCheckpointDir = "";
   checkpointWrite = false;
   lastCheckpointDir = "output/Last";
};

//
// layers
//

PvpLayer "Input" = {
    nxScale = 1; 
    nyScale = 1; 
    	      	 
    nf = 1;
    phase = 0;
    writeStep = -1; 
    sparseLayer = false;
    mirrorBCflag = false;   
    valueBC = 0.0;
    updateGpu = false;

    inputPath = "input/input.pvp";
    displayPeriod = 1;
    offsetAnchor = "tl";
    offsetX = 0;
    offsetY = 0;
    autoResizeFlag = false;
    inverseFlag = false;
    normalizeLuminanceFlag = false;
    useInputBCflag = false;
    padValue = 0;
    batchMethod = "byFile";
    start_frame_index = [0, 0, 0, 0];
    writeFrameToTimestamp = true;
};

PvpLayer "SumInputs" = {
    nxScale = 1; 
    nyScale = 1; 
    	      	 
    nf = 1;
    phase = 0;
    writeStep = -1; 
    sparseLayer = false;
    mirrorBCflag = false;   
    valueBC = 0.0;
    updateGpu = false;

    inputPath = "input/suminputs.pvp";
    displayPeriod = 0;
    offsetAnchor = "tl";
    offsetX = 0;
    offsetY = 0;
    autoResizeFlag = false;
    inverseFlag = false;
    normalizeLuminanceFlag = false;
    useInputBCflag = false;
    padValue = 0;
    batchMethod = "byFile";
    start_frame_index = [0, 0, 0, 0];
    writeFrameToTimestamp = true;
};

ConstantLayer "Output" = {
    nxScale = 1; 
    nyScale = 1;
    nf = 1;
    phase = 1;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = 1;
    sparseLayer = false;
    updateGpu = false;

    InitVType = "ConstantV";
    valueV = 1.0;
};

//
// connections
//

HyPerConn "InputToOutput" = {
    preLayerName = "Input";
    postLayerName = "Output";
    channelCode = -1;

    nxp = 1;
    nyp = 1;
    nfp = 1; 
    numAxonalArbors = 1;
    sharedWeights = false;
    writeStep = -1;
    
    weightInitType = "UniformWeight";
    weightInit = 0.0;
    connectOnlySameFeatures = true;
    normalizeMethod = "none";
    convertRateToSpikeCount = false;
    receiveGpu = false;

    writeCompressedCheckpoints = false;
    plasticityFlag = true;
    dWMax = 1.0;
    weightUpdatePeriod = 1.0;
    initialWeightUpdateTime = 0.0;
    combine_dW_with_W_flag = false;

    delay = 0;

    pvpatchAccumulateType = "Convolve";
    updateGSynFromPostPerspective = false;
};
