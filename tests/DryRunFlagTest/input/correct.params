// This is the cleaned up version of DryRunFlagTest.params, after running with the -n command line option.
// Except for initial comments, it should be identical to output/pv.params.

HyPerCol "column" = {
    startTime                           = 0;
    dt                                  = 1;
    stopTime                            = 10;
    progressInterval                    = 10;
    writeProgressToErr                  = false;
    verifyWrites                        = false;
    outputPath                          = "output/";
    printParamsFilename                 = "pv.params";
    randomSeed                          = 1234567890;
    nx                                  = 32;
    ny                                  = 32;
    nbatch                              = 1;
    initializeFromCheckpointDir         = "";
    checkpointWrite                     = false;
    suppressLastOutput                  = false;
    errorOnNotANumber                   = true;
};

PvpLayer "Input" = {
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 3;
    phase                               = 0;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    writeStep                           = -1;
    sparseLayer                         = false;
    updateGpu                           = false;
    dataType                            = NULL;
    displayPeriod                       = 0;
    inputPath                           = "input/petavisionLogo32x32.pvp";
    offsetAnchor                        = "tr";
    offsetX                             = 0;
    offsetY                             = 0;
    autoResizeFlag                      = false;
    inverseFlag                         = false;
    normalizeLuminanceFlag              = false;
    useInputBCflag                      = false;
    padValue                            = 0;
    echoFramePathnameFlag               = false;
    batchMethod                         = "byFile";
    start_frame_index                   = [0.000000];
    writeFrameToTimestamp               = true;
    resetToStartOnLoop                  = true;
};

ANNLayer "OutputBase" = {
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 8;
    phase                               = 1;
    mirrorBCflag                        = true;
    InitVType                           = "ZeroV";
    triggerLayerName                    = NULL;
    writeStep                           = 1;
    initialWriteTime                    = 0;
    sparseLayer                         = false;
    updateGpu                           = false;
    dataType                            = NULL;
    VThresh                             = -3.40282e+38;
    AMin                                = -3.40282e+38;
    AMax                                = infinity;
    AShift                              = 0;
    VWidth                              = 0;
};

ANNLayer "OutputImported" = {
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 6;
    phase                               = 1;
    mirrorBCflag                        = true;
    InitVType                           = "ZeroV";
    triggerLayerName                    = NULL;
    writeStep                           = 1;
    initialWriteTime                    = 0;
    sparseLayer                         = false;
    updateGpu                           = false;
    dataType                            = NULL;
    VThresh                             = -3.40282e+38;
    AMin                                = -3.40282e+38;
    AMax                                = infinity;
    AShift                              = 0;
    VWidth                              = 0;
};

AlwaysFailsLayer "AlwaysFails" = {
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 1;
    phase                               = 0;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    InitVType                           = "ConstantV";
    valueV                              = -70;
    triggerLayerName                    = NULL;
    writeStep                           = 1;
    initialWriteTime                    = 0;
    sparseLayer                         = false;
    updateGpu                           = false;
    dataType                            = NULL;
};

HyPerConn "InputToOutputBase" = {
    preLayerName                        = "Input";
    postLayerName                       = "OutputBase";
    channelCode                         = 0;
    delay                               = [0.000000];
    numAxonalArbors                     = 1;
    plasticityFlag                      = false;
    convertRateToSpikeCount             = false;
    receiveGpu                          = false;
    sharedWeights                       = true;
    weightInitType                      = "Gauss2DWeight";
    initWeightsFile                     = NULL;
    aspect                              = 3;
    sigma                               = 1;
    rMax                                = infinity;
    rMin                                = 0;
    strength                            = 4;
    numOrientationsPost                 = 8;
    numOrientationsPre                  = 3;
    updateGSynFromPostPerspective       = false;
    pvpatchAccumulateType               = "convolve";
    writeStep                           = -1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    nxp                                 = 7;
    nyp                                 = 7;
    nfp                                 = 8;
    shrinkPatches                       = false;
    normalizeMethod                     = "normalizeSum";
    strength                            = 4;
    normalizeArborsIndividually         = false;
    normalizeOnInitialize               = true;
    normalizeOnWeightUpdate             = true;
    rMinX                               = 0;
    rMinY                               = 0;
    nonnegativeConstraintFlag           = false;
    normalize_cutoff                    = 0;
    normalizeFromPostPerspective        = false;
    minSumTolerated                     = 0;
    weightSparsity                      = 0;
};

HyPerConn "InputToOutputImported" = {
    preLayerName                        = "Input";
    postLayerName                       = "OutputImported";
    channelCode                         = 0;
    delay                               = [0.000000];
    numAxonalArbors                     = 1;
    plasticityFlag                      = false;
    convertRateToSpikeCount             = false;
    receiveGpu                          = false;
    sharedWeights                       = true;
    weightInitType                      = "Gauss2DWeight";
    initWeightsFile                     = NULL;
    aspect                              = 3;
    sigma                               = 1;
    rMax                                = infinity;
    rMin                                = 0;
    strength                            = 4;
    numOrientationsPost                 = 8;
    numOrientationsPre                  = 3;
    updateGSynFromPostPerspective       = false;
    pvpatchAccumulateType               = "convolve";
    writeStep                           = -1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    nxp                                 = 7;
    nyp                                 = 7;
    nfp                                 = 6;
    shrinkPatches                       = false;
    normalizeMethod                     = "normalizeSum";
    strength                            = 4;
    normalizeArborsIndividually         = false;
    normalizeOnInitialize               = true;
    normalizeOnWeightUpdate             = true;
    rMinX                               = 0;
    rMinY                               = 0;
    nonnegativeConstraintFlag           = false;
    normalize_cutoff                    = 0;
    normalizeFromPostPerspective        = false;
    minSumTolerated                     = 0;
    weightSparsity                      = 0;
};
