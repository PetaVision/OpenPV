HyPerCol "column" = {
   nx = 64;
   ny = 64;
};

HyPerCol "Image" = {
   nx = 64;
   ny = 64;
};

HyPerLayer "Test Retina" = {
   nx = 64;
   ny = 64;
   nf = 1;
   marginWidth = 4;
};

HyPerLayer "Test Example" = {
   nx = 64;
   ny = 64;
   nf = 1;
   marginWidth = 4;
};

HyPerLayer "Test Layer" = {
   nx = 64;
   ny = 64;
   nf = 1;
   marginWidth = 4;
};

HyPerLayer "Test Borders" = {
   nx = 8;
   ny = 8;
   nf = 2;
   marginWidth = 4;
};

HyPerConn "Test Connection" = {
   nxp = 4;
   nyp = 4;
   delay = 0;

   r2 = 12;
   sigma = 2;
   aspect = 4;
   gaussWeightScale = 1.0;
};

//
// This section defines parameters for test_post_weights
//

HyPerCol "test_post_weights column" = {
   nx = 64;
   ny = 64;
};

HyPerLayer "test_post_weights L1" = {
   nxScale = 1;
   nyScale = 1;
   marginWidth = 1;
};

HyPerLayer "test_post_weights L2" = {
   nxScale = 1;
   nyScale = 1;
   marginWidth = 2;  // works for scale of 2 and npatch of 8
};

HyPerLayer "test_post_weights L3" = {
   nxScale = 2;
   nyScale = 2;
   marginWidth = 0;
};

HyPerConn "test_post_weights L1 to L1" = {
   nxp = 3;
   nyp = 3;
};

HyPerConn "test_post_weights L2 to L3" = {
   nxp = 8;
   nyp = 8;
};

//
// This section defines parameters for test_gauss2D
//

HyPerCol "test_gauss2d column" = {
   nx = 8;
   ny = 8;
};

HyPerLayer "test_gauss2d pre" = {
   nxScale = 1;
   nyScale = 1;
   marginWidth = 0;
};

HyPerLayer "test_gauss2d post" = {
   nxScale = 1;
   nyScale = 1;
   marginWidth = 0;  
};

HyPerConn "test_gauss2d hyperconn" = {
   nxp = 3;
   nyp = 3;
   aspect = 1;
   sigma = 4;
   rMax = 3;
   strength = 1.0;
   normalize = 1.0;
   normalize_cutoff = 0.001;
};

HyPerConn "test_gauss2d kernelconn" = {
   nxp = 3;
   nyp = 3;
   aspect = 1;
   sigma = 4;
   rMax = 3;
   strength = 1.0;
   normalize = 1.0;
   normalize_cutoff = 0.001;
};

HyPerLayer "test_gauss2d pre 2" = {
   nxScale = 2;
   nyScale = 2;
   marginWidth = 0;
};

HyPerLayer "test_gauss2d post 2" = {
   nxScale = 2;
   nyScale = 2;
   marginWidth = 0;  
};

HyPerConn "test_gauss2d hyperconn 1 to 2" = {
   nxp = 4;
   nyp = 4;
   aspect = 1;
   sigma = 8;
   rMax = 8;
   strength = 1.0;
   normalize = 1.0;
   normalize_cutoff = 0.001;
};

HyPerConn "test_gauss2d kernelconn 1 to 2" = {
   nxp = 4;
   nyp = 4;
   aspect = 1;
   sigma = 8;
   rMax = 8;
   strength = 1.0;
   normalize = 1.0;
   normalize_cutoff = 0.001;
};

HyPerConn "test_gauss2d hyperconn 2 to 1" = {
   nxp = 2;
   nyp = 2;
   aspect = 1;
   sigma = 4;
   rMax = 4;
   strength = 1.0;
   normalize = 1.0;
   normalize_cutoff = 0.001;
};

HyPerConn "test_gauss2d kernelconn 2 to 1" = {
   nxp = 2;
   nyp = 2;
   aspect = 1;
   sigma = 4;
   rMax = 4;
   strength = 1.0;
   normalize = 1.0;
   normalize_cutoff = 0.001;
};



//
// This section defines parameters for test_mirror_BCs
//

HyPerCol "test_mirror_BCs column" = {
   nx = 8;
   ny = 8;
};

HyPerLayer "test_mirror_BCs layer" = {
   nxScale = 1;
   nyScale = 1;
   nf = 2;
   marginWidth = 4;
};

//
// This section defines parameters for test_border_activity
//

HyPerLayer "test_border_activity image" = {
   nxScale = 1;
   nyScale = 1;
};

HyPerLayer "test_border_activity retina" = {
   nxScale = 1;
   nyScale = 1;
   marginWidth = 3;
   spikingFlag = 0;
   poissonEdgeProb = 1;
   mirrorBCflag = 1;  
};

HyPerLayer "test_border_activity layer" = {
   nxScale = 1;
   nyScale = 1;
   marginWidth = 0;
   spikingFlag = 0;
};

HyPerConn "test_border_activity connection 1" = {
   nxp = 1;
   nyp = 1;
   randomFlag = 1;
   uniformWeights = 1; // use uniform weights to initialize
   wMinInit = 1;   // all weight to constant (1)
   wMaxInit = 1;
};

HyPerConn "test_border_activity connection 2" = {
   nxp = 7;
   nyp = 7;
   randomFlag = 1;
   uniformWeights = 1; // use uniform weights to initialize
   wMinInit = 1;   // all weight to constant (1)
   wMaxInit = 1;
};


//
// This section defines parameters for test_post_weights
//

HyPerCol "test_constant_input column" = {
   nx = 128;
   ny = 128;
   mirrorBCflag = 1;
};

HyPerLayer "test_constant_input image" = {
   nxScale = 1;
   nyScale = 1;
};

HyPerLayer "test_constant_input retina" = {
   nxScale = 1;
   nyScale = 1;
   marginWidth = 3;
   spikingFlag = 0;
   poissonEdgeProb = 1;
};

HyPerLayer "test_constant_input layer" = {
   nxScale = 2;
   nyScale = 2;
   marginWidth = 0;
   spikingFlag = 0;
};

HyPerLayer "test_constant_input connection" = {
   nxp = 4;
   nyp = 4;
   randomFlag = 1; // use random weights to initialize
   wMinInit = 1;   // all weight to constant (1)
   wMaxInit = 1;
};
