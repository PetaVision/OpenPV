//
// DtAdaptController_Comparison.params
//
// created by peteschultz: Nov 2, 2015
//

//  A test of the new dtAdaptController method to verify that the
//  new dtAdaptController scheme can duplicate the ANNNormalizedErrorLayer
//  that we would like to deprecate.
//
//  input/DtAdaptController_ANNNormalized.params models an LCA hierarchy
//  using the old ANNNormalizedErrorLayer for the residual layer
//
//  input/DtAdaptController_dtAdaptController.params models an LCA hierarchy
//  using ANNErrorLayer for the residual layer
//
//  input/DtAdaptController_comparison.params compares the outputs of the
//  above two params files.


debugParsing = false;

HyPerCol "column" = {
   nx = 32;
   ny = 32;
   dt = 1.0;
   dtAdaptFlag = false;
   dtScaleMax = 5;
   dtScaleMin = 0.125;
   dtChangeMax = 0.05;
   dtChangeMin = 0;
   dtMinToleratedTimeScale = 0.0001;
   writeTimescales = true;
   randomSeed = 1234567890;
   startTime = 0.0;
   stopTime = 50.0;
   progressInterval = 1.0;
   errorOnNotANumber = false;
   writeProgressToErr = false;
   outputPath = "output-Comparison/";
   printParamsFilename = "pv.params";
   filenamesContainLayerNames = 2;
   filenamesContainConnectionNames = 2;
   initializeFromCheckpointDir = "";
   checkpointWrite = true;
   checkpointWriteDir = "output-Comparison/checkpoints";
   checkpointWriteTriggerMode = "step";
   checkpointWriteStepInterval = 1;
   deleteOlderCheckpoints = false;
   // suppressLastOutput = false;
};

//
// layers
//

MoviePvp "FromANNNormalized" = {
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 3;
    phase                               = 0;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    triggerLayerName                    = NULL;
    writeStep                           = 1.0;
    initialWriteTime                    = 1.0;
    sparseLayer                         = false;
    updateGpu                           = false;
    dataType                            = NULL;
    inputPath                           = "output-ANNNormalized/Reconstruction.pvp";
    offsetAnchor                        = "tl";
    offsetX                             = 0;
    offsetY                             = 0;
    writeImages                         = 0;
    inverseFlag                         = false;
    normalizeLuminanceFlag              = false;
    jitterFlag                          = 0;
    useImageBCflag                      = false;
    padValue                            = 0;
    autoResizeFlag                      = false;
    displayPeriod                       = 1;
    echoFramePathnameFlag               = true;
    batchMethod                         = "bySpecified";
    start_frame_index                   = [0.000000];
    skip_frame_index                    = [0.000000];
    writeFrameToTimestamp               = true;
    flipOnTimescaleError                = true;
    resetToStartOnLoop                  = false;
};

MoviePvp "From_dtAdaptController" = {
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 3;
    phase                               = 0;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    triggerLayerName                    = NULL;
    writeStep                           = 1.0;
    initialWriteTime                    = 1.0;
    sparseLayer                         = false;
    updateGpu                           = false;
    dataType                            = NULL;
    inputPath                           = "output-dtAdaptController/Reconstruction.pvp";
    offsetAnchor                        = "tl";
    offsetX                             = 0;
    offsetY                             = 0;
    writeImages                         = 0;
    inverseFlag                         = false;
    normalizeLuminanceFlag              = false;
    jitterFlag                          = 0;
    useImageBCflag                      = false;
    padValue                            = 0;
    autoResizeFlag                      = false;
    displayPeriod                       = 1;
    echoFramePathnameFlag               = true;
    batchMethod                         = "bySpecified";
    start_frame_index                   = [0.000000];
    skip_frame_index                    = [0.000000];
    writeFrameToTimestamp               = true;
    flipOnTimescaleError                = true;
    resetToStartOnLoop                  = false;
};

ANNLayer "Comparison" = {
    nxScale = 1;
    nyScale = 1;
    nf = 3;
    phase = 1;
    mirrorBCflag = true;
    triggerLayerName = NULL;
    writeStep = 1.0;
    initialWriteTime = 1.0;
    sparseLayer = false;

    InitVType = "ZeroV";

    VThresh = -infinity;
    AMax = infinity;
    AMin = -infinity;
    AShift = 0.0;
    VWidth = 0.0;
};

// connections

IdentConn "From_dtAdaptControllerToComparison" = {
    preLayerName = "From_dtAdaptController";
    postLayerName = "Comparison";
    channelCode = 0;
    delay = 0;
    writeStep = -1;
};

IdentConn "FromANNNormalizedToComparison" = {
    preLayerName = "FromANNNormalized";
    postLayerName = "Comparison";
    channelCode = 1;
    delay = 0;
    writeStep = -1;
};


// Probe to set a flag if activity in "Comparison" is ever nonzero.

RequireAllZeroActivityProbe "ComparisonTest" = {
    targetLayer = "Comparison";
    probeOutputFile = "comparison_test.txt";
    nnzThreshold = 1e-6;
};
