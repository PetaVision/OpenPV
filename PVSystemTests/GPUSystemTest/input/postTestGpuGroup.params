debugParsing = false;

HyPerCol "column" = {
    nx = 64; //1242;  // KITTI synced value
    ny = 64;  //218;
    dt = 1.0;
    randomSeed = 1234567890;  // Must be at least 8 digits long.  // if not set here,  clock time is used to generate seed
    startTime = 0.0;
    numSteps = 10;       // Depends on number of VINE video frames
    progressStep = 1;
    //Change this
    outputPath = "output/postTestGpuGroup/";
    filenamesContainLayerNames = true;
    filenamesContainConnectionNames = true;
    checkpointRead = false;
    checkpointWrite = false;
    // deleteOlderCheckpoints = false;
    suppressLastOutput = false;
    writeProgressToErr = true;
};

ConstantLayer "input1" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 3;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = false;
    sparseLayer = 0;
    //
    InitVType = "UniformRandomV";
    minV = 0;
    maxV = 1;

    VThresh = -infinity;
    AMax = infinity;     // prevent reconstruction from exceeding reasonable bounds
    AMin = -infinity; 
    VShift = 0;
    // 
    phase = 1; 
    triggerFlag = false;
};

ANNLayer "outputRecv1" = {
    restart = 0;
    nxScale = .5;
    nyScale = .5;
    nf = 64;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = false;
    sparseLayer = 0;
    //
    InitVType = "ZeroV";
    VThresh = -infinity;
    VMax = infinity;     // prevent reconstruction from exceeding reasonable bounds
    VMin = -infinity; 
    VShift = 0;
    // 
    phase = 2; 
    triggerFlag = false;
};

ANNLayer "outputRecvGpu1" = {
    restart = 0;
    nxScale = .5;
    nyScale = .5;
    nf = 64;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = false;
    sparseLayer = 0;
    //
    InitVType = "ZeroV";
    VThresh = -infinity;
    VMax = infinity;     // prevent reconstruction from exceeding reasonable bounds
    VMin = -infinity; 
    VShift = 0;
    // 
    phase = 2; 
    triggerFlag = false;
};

ANNLayer "outputTest1" = {
    restart = 0;
    nxScale = .5;
    nyScale = .5;
    nf = 64;
    writeStep = -1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = false;
    sparseLayer = 0;
    //
    InitVType = "ZeroV";
    VThresh = -infinity;
    VMax = infinity;     // prevent reconstruction from exceeding reasonable bounds
    VMin = -infinity; 
    VShift = 0;
    // 
    phase = 3; 
    triggerFlag = false;
};

ConstantLayer "input2" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 3;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = false;
    sparseLayer = 0;
    //
    InitVType = "UniformRandomV";
    minV = 0;
    maxV = 1;

    VThresh = -infinity;
    AMax = infinity;     // prevent reconstruction from exceeding reasonable bounds
    AMin = -infinity; 
    VShift = 0;
    // 
    phase = 1; 
    triggerFlag = false;
};

ANNLayer "outputRecv2" = {
    restart = 0;
    nxScale = .5;
    nyScale = .5;
    nf = 64;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = false;
    sparseLayer = 0;
    //
    InitVType = "ZeroV";
    VThresh = -infinity;
    VMax = infinity;     // prevent reconstruction from exceeding reasonable bounds
    VMin = -infinity; 
    VShift = 0;
    // 
    phase = 2; 
    triggerFlag = false;
};

ANNLayer "outputRecvGpu2" = {
    restart = 0;
    nxScale = .5;
    nyScale = .5;
    nf = 64;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = false;
    sparseLayer = 0;
    //
    InitVType = "ZeroV";
    VThresh = -infinity;
    VMax = infinity;     // prevent reconstruction from exceeding reasonable bounds
    VMin = -infinity; 
    VShift = 0;
    // 
    phase = 2; 
    triggerFlag = false;
};

ANNLayer "outputTest2" = {
    restart = 0;
    nxScale = .5;
    nyScale = .5;
    nf = 64;
    writeStep = -1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = false;
    sparseLayer = 0;
    //
    InitVType = "ZeroV";
    VThresh = -infinity;
    VMax = infinity;     // prevent reconstruction from exceeding reasonable bounds
    VMin = -infinity; 
    VShift = 0;
    // 
    phase = 3; 
    triggerFlag = false;
};

KernelConn "origConn1" = {
    preLayerName = "outputRecvGpu1";
    postLayerName = "input1";
    channelCode = -1; //Inhib b, doing nothing to input
    nxp = 18; 
    nyp = 18; 
    numAxonalArbors = 1;
    initFromLastFlag = 0;  // 1;  // restart
    writeStep = -1;
    initialWriteTime = 0.0;
    writeCompressedWeights = false;
    
    weightInitType = "UniformRandomWeight";
    wMinInit = -1;
    wMaxInit = 1;
    sparseFraction = 0;
        
    normalizeMethod                     = "none";
    //strength                            = 1;
    //rMinX                               = 1.5;
    //rMinY                               = 1.5;
    //normalize_cutoff                    = 0;

    normalizeArborsIndividually = false;
    normalizeFromPostPerspective = false;

    minL2NormTolerated                  = 0;

    symmetrizeWeights = false;
    
    shrinkPatches = false;
    //writeCompressedWeights = 0.0;
    writeCompressedCheckpoints = false;
    plasticityFlag = 0;
    pvpatchAccumulateType = "convolve";
     
    delay = 0;
     
    preActivityIsNotRate = false;
    selfFlag = false;

    updateGSynFromPostPerspective = false;

    keepKernelsSynchronized             = true;
};

TransposeConn "TransposeConn1" = {
    preLayerName = "input1";
    postLayerName = "outputRecv1";
    channelCode = 0; 
    originalConnName = "origConn1";
    selfFlag = false;
    preActivityIsNotRate = false;
    writeStep = -1;
    delay = 0;
    pvpatchAccumulateType = "convolve";
    updateGSynFromPostPerspective = true;
    receiveGpu = false;
};

TransposeConn "gpuTransposeConn1" = {
    preLayerName = "input1";
    postLayerName = "outputRecvGpu1";
    channelCode = 0;
    originalConnName = "origConn1";
    selfFlag = false;
    preActivityIsNotRate = false;
    writeStep = -1.0;
    delay = 0;
    pvpatchAccumulateType = "convolve";
    updateGSynFromPostPerspective = true;
    receiveGpu = true;
    gpuGroupIdx = 0;
    preDataLocal = true;
    numXLocal = 64;
    numYLocal = 1;
    numFLocal = 1;
};

IdentConn "RecvGpuTest1" = {
    preLayerName = "outputRecvGpu1";
    postLayerName = "outputTest1";
    channelCode = 0;
    delay = 0;
    writeStep = -1;
};

IdentConn "RecvCpuTest1" = {
    preLayerName = "outputRecv1";
    postLayerName = "outputTest1";
    channelCode = 1;
    delay = 0;
    writeStep = -1;
};

KernelConn "origConn2" = {
    preLayerName = "outputRecvGpu2";
    postLayerName = "input2";
    channelCode = -1; //Inhib b, doing nothing to input
    nxp = 18; 
    nyp = 18; 
    numAxonalArbors = 1;
    initFromLastFlag = 0;  // 1;  // restart
    writeStep = -1;
    initialWriteTime = 0.0;
    writeCompressedWeights = false;
    
    weightInitType = "UniformRandomWeight";
    wMinInit = -1;
    wMaxInit = 1;
    sparseFraction = 0;
        
    normalizeMethod                     = "none";
    //strength                            = 1;
    //rMinX                               = 1.5;
    //rMinY                               = 1.5;
    //normalize_cutoff                    = 0;

    normalizeArborsIndividually = false;
    normalizeFromPostPerspective = false;

    minL2NormTolerated                  = 0;

    symmetrizeWeights = false;
    
    shrinkPatches = false;
    //writeCompressedWeights = 0.0;
    writeCompressedCheckpoints = false;
    plasticityFlag = 0;
    pvpatchAccumulateType = "convolve";
     
    delay = 0;
     
    preActivityIsNotRate = false;
    selfFlag = false;

    updateGSynFromPostPerspective = false;

    keepKernelsSynchronized             = true;
};

TransposeConn "TransposeConn2" = {
    preLayerName = "input2";
    postLayerName = "outputRecv2";
    channelCode = 0; 
    originalConnName = "origConn2";
    selfFlag = false;
    preActivityIsNotRate = false;
    writeStep = -1;
    delay = 0;
    pvpatchAccumulateType = "convolve";
    updateGSynFromPostPerspective = true;
    receiveGpu = false;
};

TransposeConn "gpuTransposeConn2" = {
    preLayerName = "input2";
    postLayerName = "outputRecvGpu2";
    channelCode = 0;
    originalConnName = "origConn2";
    selfFlag = false;
    preActivityIsNotRate = false;
    writeStep = -1.0;
    delay = 0;
    pvpatchAccumulateType = "convolve";
    updateGSynFromPostPerspective = true;
    receiveGpu = true;
    gpuGroupIdx = 0;
    preDataLocal = false;
    //numXLocal = 64;
    //numYLocal = 1;
    //numFLocal = 1;
};

IdentConn "RecvGpuTest2" = {
    preLayerName = "outputRecvGpu2";
    postLayerName = "outputTest2";
    channelCode = 0;
    delay = 0;
    writeStep = -1;
};

IdentConn "RecvCpuTest2" = {
    preLayerName = "outputRecv2";
    postLayerName = "outputTest2";
    channelCode = 1;
    delay = 0;
    writeStep = -1;
};

GPUSystemTestProbe "testProbe1" = {
   targetLayer = "outputTest1";
   message = "testProbe1 ";
};

GPUSystemTestProbe "testProbe2" = {
   targetLayer = "outputTest2";
   message = "testProbe2 ";
};

