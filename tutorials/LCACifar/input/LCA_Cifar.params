debugParsing = true;
HyPerCol "column" = {
    nx = 32;
    ny = 32;
    verifyWrites = false;
    checkpointWriteStepInterval = 40000;
    initializeFromCheckpointDir = "";
    randomSeed = 1234567890;
    outputPath = "../output/";
    dt = 1;
    checkpointWriteDir = "../output//Checkpoints";
    nbatch = 20;
    checkpointWriteTriggerMode = "step";
    checkpointWrite = true;
    startTime = 0;
    stopTime = 1000000;
    errorOnNotANumber = false;
    suppressNonplasticCheckpoints = false;
    deleteOlderCheckpoints = false;
    checkpointIndexWidth = -1;
    progressInterval = 4000;
    printParamsFilename = "CIFAR_Tutorial.params";
    writeProgressToErr = true;
};

TransposeConn "ErrorToV1" = {
    writeCompressedCheckpoints = false;
    receiveGpu = true;
    writeStep = -1;
    gpuGroupIdx = -1;
    originalConnName = "V1ToInputError";
    preLayerName = "InputError";
    postLayerName = "V1";
    channelCode = 0;
    updateGSynFromPostPerspective = true;
    pvpatchAccumulateType = "convolve";
    convertRateToSpikeCount = false;
    delay = [0];
};

IdentConn "ReconToError" = {
    preLayerName = "InputRecon";
    postLayerName = "InputError";
    channelCode = 1;
    delay = [0];
};

HyPerLCALayer "V1" = {
    nxScale = 0.5;
    initializeFromCheckpointFlag = false;
    VWidth = 0;
    AMin = 0;
    selfInteract = true;
    phase = 2;
    nf = 128;
    valueBC = 0;
    initialWriteTime = 400;
    timeConstantTau = 100;
    updateGpu = true;
    adaptiveTimeScaleProbe = "AdaptiveTimeScales";
    AShift = 0.55;
    AMax = infinity;
    VThresh = 0.55;
    sparseLayer = true;
    writeStep = 400;
    nyScale = 0.5;
    InitVType = "ConstantV";
    mirrorBCflag = false;
    valueV = 0.55;
};

MomentumConn "V1ToInputError" = {
    strength = 1;
    initializeFromCheckpointFlag = false;
    immediateWeightUpdate = true;
    sparseFraction = 0.9;
    plasticityFlag = true;
    writeCompressedWeights = false;
    normalizeOnInitialize = true;
    receiveGpu = false;
    initialWriteTime = 400;
    normalizeMethod = "normalizeL2";
    weightInitType = "UniformRandomWeight";
    postLayerName = "InputError";
    normalizeFromPostPerspective = false;
    convertRateToSpikeCount = false;
    delay = [0];
    writeCompressedCheckpoints = false;
    updateGSynFromPostPerspective = false;
    wMaxInit = 1;
    numAxonalArbors = 1;
    writeStep = 400;
    combineWeightFiles = false;
    triggerLayerName = "Input";
    momentumDecay = 0;
    pvpatchAccumulateType = "convolve";
    minNNZ = 0;
    dWMax = 0.05;
    minL2NormTolerated = 0;
    normalize_cutoff = 0;
    nonnegativeConstraintFlag = false;
    rMinY = 0;
    normalizeOnWeightUpdate = true;
    rMinX = 0;
    normalizeArborsIndividually = false;
    momentumMethod = "viscosity";
    nxp = 8;
    preLayerName = "V1";
    combine_dW_with_W_flag = false;
    channelCode = -1;
    wMinInit = -1;
    nyp = 8;
    triggerOffset = 1;
    sharedWeights = true;
};

ImageLayer "Input" = {
    nxScale = 1;
    useInputBCflag = false;
    phase = 0;
    displayPeriod = 400;
    writeStep = 400;
    nf = 3;
    offsetAnchor = "tl";
    writeFrameToTimestamp = true;
    normalizeStdDev = true;
    initialWriteTime = 400;
    inputPath = "../cifar-10-batches-mat/mixed_cifar.txt";
    updateGpu = false;
    batchMethod = "byImage";
    offsetX = 0;
    inverseFlag = false;
    nyScale = 1;
    sparseLayer = false;
    offsetY = 0;
    autoResizeFlag = false;
    resetToStartOnLoop = false;
    mirrorBCflag = true;
    normalizeLuminanceFlag = true;
};

ColumnEnergyProbe "V1EnergyProbe" = {
    textOutputFlag = true;
    probeOutputFile = "V1EnergyProbe.txt";
};

L1NormProbe "V1L1NormEnergyProbe" = {
    coefficient = 0.55;
    energyProbe = "V1EnergyProbe";
    targetLayer = "V1";
    textOutputFlag = true;
    probeOutputFile = "V1L1NormEnergyProbe.txt";
};

RescaleConn "InputToError" = {
    preLayerName = "Input";
    postLayerName = "InputError";
    channelCode = 0;
    scale = 1;
    delay = [0];
};

CloneConn "V1ToRecon" = {
    writeCompressedCheckpoints = false;
    receiveGpu = false;
    originalConnName = "V1ToInputError";
    preLayerName = "V1";
    postLayerName = "InputRecon";
    channelCode = 0;
    updateGSynFromPostPerspective = false;
    pvpatchAccumulateType = "convolve";
    convertRateToSpikeCount = false;
    delay = [0];
};

L2NormProbe "InputErrorL2NormEnergyProbe" = {
    targetLayer = "InputError";
    exponent = 2;
    coefficient = 0.5;
    energyProbe = "V1EnergyProbe";
    textOutputFlag = true;
    probeOutputFile = "InputErrorL2NormEnergyProbe.txt";
};

HyPerLayer "InputRecon" = {
    nxScale = 1;
    valueBC = 0;
    initialWriteTime = 400;
    updateGpu = false;
    writeStep = 400;
    InitVType = "ZeroV";
    sparseLayer = false;
    phase = 3;
    initializeFromCheckpointFlag = false;
    mirrorBCflag = false;
    nf = 3;
    nyScale = 1;
};

KneeTimeScaleProbe "AdaptiveTimeScales" = {
    baseMax = 0.06;
    baseMin = 0.05;
    kneeSlope = 0.01;
    targetName = "V1EnergyProbe";
    kneeThresh = 1;
    writeTimeScalesFieldnames = false;
    growthFactor = 0.025;
    triggerLayerName = "Input";
    tauFactor = 0.03;
    textOutputFlag = true;
    probeOutputFile = "AdaptiveTimeScales.txt";
    triggerOffset = 0;
};

HyPerLayer "InputError" = {
    nxScale = 1;
    valueBC = 0;
    initialWriteTime = 400;
    updateGpu = false;
    writeStep = 400;
    InitVType = "ZeroV";
    sparseLayer = false;
    phase = 1;
    initializeFromCheckpointFlag = false;
    mirrorBCflag = false;
    nf = 3;
    nyScale = 1;
};

