//
// StochasticReleaseTest.params
//
// created by peteschultz: Aug 26, 2013
//

// A test for stochastic release.
// There are six input layers, with constant values 0, 0.2, 0.4, 0.6, 0.8, 1.0
// There are six output layers, one per input layer.  Each connection
// is a one-to-one conn with strength 0.473, using stochastic release.
// Hence an output layer should have only values 0.473 or zero, with probability
// of 0.473*(input value) being the input value multiplied by the HyPerCol dt.
//
// The input layers are ANNLayers that use InitV to initialize, to maintain the
// the values we have an IdentConn going from each layer to itself on channel 0.

debugParsing = false;    // Debug the reading of this parameter file.

HyPerCol "column" = {
   nx = 256;   //size of the whole network
   ny = 256;
   dt = 1.0;  //time step in ms.	  
   dtAdaptFlag = false;   
   randomSeed = 2717937891;
   startTime = 0.0;
   stopTime = 25.0;  
   progressInterval = 5.0; //Program will output its progress at each progressStep
   writeProgressToErr = false;
   verifyWrites = false;
   outputPath = "output/";
   printParamsFilename = "pv.params";
   filenamesContainLayerNames = 2;  
   filenamesContainConnectionNames = 2;
   initializeFromCheckpointDir = "";
   checkpointWrite = false;
   suppressLastOutput = false; //Default is to save the last output as a checkpoint; setting this flag to true turns this behavior off.
   errorOnNotANumber = false;
};

//
// Layers
//

Image "input" = {
    restart = 0;
    nxScale = 1; 
    nyScale = 1;
    nf = 6;
    phase = 0;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = true;
    sparseLayer = false;

    imagePath = "input/input.pvp";
    frameNumber = 0;
    offsetX = 0;
    offsetY = 0;
    offsetAnchor = "tl";
    writeImages = false;
    useImageBCflag = false;
    autoResizeFlag = false;
    inverseFlag = false;
    normalizeLuminanceFlag = false;
    jitterFlag = false;
    padValue = 0;
};

ANNLayer "output" = {
    restart = 0;
    nxScale = 1; 
    nyScale = 1;
    nf = 6;
    phase = 1;
    writeStep = 1.0;
    initialWriteTime = 0.0;
    mirrorBCflag = true;
    sparseLayer = false;

    InitVType = "ZeroV";
    
    triggerFlag = false;

    VThresh = -infinity;   
    AMax = infinity;
    AMin = -infinity;
    AShift = 0.0;
    VWidth = 0.0;
};

//
// Connections
//

HyPerConn "input to output" = {
    channelCode = 0;

    nxp = 1;
    nyp = 1;
    nfp = 6; 
    numAxonalArbors = 1;
    writeStep = -1;
    
    weightInitType = "OneToOneWeights";
    weightInit = 0.473; // A constant weight unlikely to result from a wrong computation by accident.
      
    normalizeMethod = "none";

    writeCompressedCheckpoints = false;
    plasticityFlag = false;
    selfFlag = false;  // connect to itself

    delay = 0;

    convertRateToSpikeCount = false;
    sharedWeights = true;
    pvpatchAccumulateType = "Stochastic"; // "Convolve", "Stochastic", or "Maxpooling" (case-insensitive)
    shrinkPatches = false; //if only a small part of connections whose weights are non-zero, then we could shrink the whole networks
    updateGSynFromPostPerspective = false; // Whether receiving synaptic input should loop over pre-synaptic neurons (false) or post-synaptic neurons (true)
};

StochasticReleaseTestProbe "output Probe" = {
    targetLayer = "output";
    message = "output stats  ";
    probeOutputFile = "output_probe.txt";    
    triggerFlag = false;
    nnzThreshold = 0.0;
    
};
