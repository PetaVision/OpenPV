// // HyPerHLCA.params
//
// created by peteschultz: Sept 27, 2012, modified garkenyon, 1/20/13
//
//
// Implements the locally competitive algorithm described in
// Rozell et al., "Sparse Coding via Thresholding and Local Cometition
// in Neural Circuits," Neural Computation 20, 2526-2563 (2008).
///////////////////////////

debugParsing = true;

HyPerCol "column" = {
   nx                              = 1;//always 1x1
   ny                              = 1;
   dt                              = 1.0;
   randomSeed                      = 1234567890;  // Must be at least 8 digits long.  // if not set here,  clock time is used to generate seed
   numSteps                        = 441839;       
   progressStep                    = 1;
   outputPath                      = "/Users/Burger/workspace/soundAnalysis/output";
   filenamesContainLayerNames      = true;
   filenamesContainConnectionNames = true;
   checkpointRead                  = false;
   checkpointWrite                 = true;
   checkpointWriteDir              = "/Users/Burger/workspace/soundAnalysis/output/checkpoints";
   checkpointWriteStepInterval     = 500000;
   deleteOlderCheckpoints          = false;
   writeProgressToErr              = true;
   outputNamesOfLayersAndConns     = "LayerAndConnNames.txt";
};

//
// layers
//

SoundStream "Sound" = {
    restart                = 0;
    nxScale                = 1;
    nyScale                = 1;
    nf                     = 1;
    soundInputPath          = "/Users/Burger/workspace/soundAnalysis/input/A.wav";
    writeStep              = 1;
    writeSparseActivity    = false;
    displayPeriod          = 1;//5000;  // [in time steps - I think] TODO: change to [ms] 
    phase                  = 0;
    loopInput              = 1;
    lowFreqOffset          = 0;
    timeWindowOffset       = 50;
    soundBCFlag            = true;
    soundOffset            = 1; //In seconds
};

SoundProbe "soundProbe" = {
   restart = 0;
   targetLayer = "Sound";
   soundOutputPath = "/Users/Burger/workspace/soundAnalysis/output/out.wav";
   soundInputType = "/Users/Burger/workspace/soundAnalysis/input/A.wav";
};
