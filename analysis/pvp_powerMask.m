function [xcorr_struct] = ...
      pvp_powerMask(layer, ...
		    xcorr_struct, ...
		    target_struct, ...
		    power_array);

  num_modes = xcorr_struct.num_modes;
  num_sig = xcorr_struct.num_sig;

  for i_mode = 1 : xcorr_struct.num_modes  % 1 == peak, 2 = mean
    if i_mode == 1
      disp('calculating peak power mask...');
    elseif i_mode == 2
      disp('calculating ave power mask...');
    endif %%
    if xcorr_struct.calc_power_mask
      num_power_sig = 0.0;
      mean_power = mean( power_array{layer, i_mode}(:) );
      std_power = std( power_array{layer, i_mode}(:) );
      disp( [ 'mean_power(', num2str(layer), ') = ', ...
             num2str(mean_power), ' +/- ', num2str(std_power) ] );
      xcorr_struct.power_mask{layer, i_mode} = ...
          find( power_array{layer, i_mode} > ...
	       ( mean_power + num_power_sig * std_power ) );
      xcorr_struct.power_mask{layer,i_mode} = ...
          intersect(xcorr_struct.power_mask{layer,i_mode}, ...
		    xcorr_struct.border_mask{layer} );
      xcorr_struct.num_power_mask(layer,i_mode) = ...
	  numel(xcorr_struct.power_mask{layer,i_mode});
      disp( ['num_power_mask(', num2str(layer), ') = ', ...
	     num2str(xcorr_struct.num_power_mask(layer,i_mode)), ' > ', ...
             num2str( mean_power + num_power_sig * std_power ) ] );
      numel_target = ...
	  numel(cell2mat(target_struct.target));
      numel_clutter = ...
	  numel(target_struct.clutter);
      while xcorr_struct.num_power_mask(layer,i_mode) > ...
	    xcorr_struct.num_sig * ...
	    ( length(target_struct.target) + length(target_struct.clutter) )
        num_power_sig = num_power_sig + 0.5;
        xcorr_struct.power_mask{layer, i_mode} = ...
            find( power_array{layer, i_mode} > ...
		 ( mean_power + num_power_sig * std_power ) );
        xcorr_struct.power_mask{layer,i_mode} = ...
            intersect(xcorr_struct.power_mask{layer,i_mode}, ...
		      xcorr_struct.border_mask{layer} );
        xcorr_struct.num_power_mask(layer,i_mode) = ...
	    numel(xcorr_struct.power_mask{layer,i_mode});
        disp( ['num_power_mask(', num2str(layer), ') = ', ...
	       num2str(xcorr_struct.num_power_mask(layer,i_mode)), ' > ', ...
               num2str( mean_power + num_power_sig * std_power ) ] );
      endwhile %%
    else
      xcorr_struct.power_mask{layer,i_mode} = ...
	  target_struct.clutter_ndx_max{layer,1};
      for i_target = 1 : target_struct.num_targets
        xcorr_struct.power_mask{layer,i_mode} = ...
	    [xcorr_struct.power_mask{layer,i_mode}; ...
	     target_struct.target_ndx_max{layer, i_target}];
      endfor %% % i_target
    endif %% % calc_power_mask
    xcorr_struct.power_mask{layer,i_mode} = ...
	sort( xcorr_struct.power_mask{layer,i_mode} );
    xcorr_struct.power_mask{layer,i_mode} = ...
        intersect(xcorr_struct.power_mask{layer,i_mode},...
		  xcorr_struct.border_mask{layer} );
    xcorr_struct.num_power_mask(layer,i_mode) = ...
	numel(xcorr_struct.power_mask{layer,i_mode});
  endfor %% % i_mode
