function ...
      [mass_target_xcorr, ...
       mass_target_autocorr, ...
       mass_clutter_xcorr, ...
       mass_clutter_autocorr, ...
       mass_target2clutter_xcorr, ...
       mass_target2clutter_autocorr] = ...
      pvp_targetXCorr(layer, ...
		      epoch_struct, ...
		      layer_struct, ...
		      target_struct, ...
		      xcorr_struct, ... 
		      mass_target_xcorr, ...
		      mass_target_autocorr, ...
		      mass_clutter_xcorr, ...
		      mass_clutter_autocorr, ...
		      mass_target2clutter_xcorr, ...
		      mass_target2clutter_autocorr)

  global BIN_STEP_SIZE DELTA_T
  global pvp_order

  stim_steps = ...
      epoch_struct.stim_begin_step(layer) : epoch_struct.stim_end_step(layer);
  stim_bins = ...
      epoch_struct.stim_begin_bin(layer) : epoch_struct.stim_end_bin(layer);
  xcorr_flag = 0;

  %% init data structures
  for i_target = 1 : target_struct.num_targets
    mass_target_xcorr{i_target, layer} = ...
	zeros( 2 * xcorr_struct.max_lag + 1, 1 );
    mass_target_autocorr{i_target, layer} = ...
	zeros( 2 * xcorr_struct.max_lag + 1, 1 );
				# target_xcorr{i_target, layer}  = ...
				# 	zeros(target_struct.num_target_neurons_max(layer, i_target),  ...
				#           target_struct.num_target_neurons_max(layer, i_target), 2 );
  endfor %%

  i_target = 1;
  mass_clutter_xcorr{i_target, layer} = ...
      zeros( 2 * xcorr_struct.max_lag + 1, 1 );
  mass_clutter_autocorr{i_target, layer} = ...
      zeros( 2 * xcorr_struct.max_lag + 1, 1 );
				# clutter_xcorr{i_target, layer}  = ...
				#     zeros(target_struct.num_clutter_neurons_max(layer, i_target),  ...
				#           target_struct.num_clutter_neurons_max(layer, i_target), 2 );

  for i_target = 1 : target_struct.num_targets
    mass_target2clutter_xcorr{i_target, layer} = ...
	zeros( 2 * xcorr_struct.max_lag + 1, 1 );
    mass_target2clutter_autocorr{i_target, 1} = ...
	zeros( 2 * xcorr_struct.max_lag + 1, 1 );
				# target2clutter_xcorr{i_target, 1} = ...
				# 	zeros(target_struct.num_target_neurons_max(layer, i_target),  ...
				#           target_struct.num_clutter_neurons_max(layer, 1), 2 );
  endfor %%

  %% start loop over epochs
  for i_epoch = 1 : epoch_struct.num_epochs
    disp(['i_epoch = ', num2str(i_epoch)]);
    
    %% read spike train for this epoch
    [spike_array] = ...
        pvp_readSparseSpikes(layer, ...
			     i_epoch, ...
			     epoch_struct, ...
			     layer_struct, ...
			     pvp_order);
    if isempty(spike_array)
      continue;
    endif %%

    is_auto = 1;
    for i_target = 1 : target_struct.num_targets
      [mass_xcorr_tmp, ...
       mass_autocorr_tmp, ...
       mass_xcorr_mean, ...
       mass_xcorr_std] = ...
          pvp_xcorr2(spike_array(stim_steps, ...
				 target_struct.target_ndx_max{layer, i_target}), ...
                     [], ...
                     xcorr_struct, ...
                     target_struct.target_ndx_max{layer, i_target}, ...
                     layer_struct.size_layer{layer}, ...
                     target_struct.target_ndx_max{layer, i_target}, ...
                     layer_struct.size_layer{layer}, ...
                     is_auto, ...
                     xcorr_flag);
      mass_target_xcorr{i_target, layer} = ...
	  mass_target_xcorr{i_target, layer} + ...
          mass_xcorr_tmp;
      mass_target_autocorr{i_target, layer} = ...
	  mass_target_autocorr{i_target, layer} + ...
          mass_autocorr_tmp;
				# target_xcorr{i_target, layer} = ...
				# 	  target_xcorr{i_target, layer} + ...
				#     xcorr_tmp;
    endfor %%
    
    i_target = 1;
    disp([layer_struct.layerID{layer}, ...
          ' ', 'mass_clutter_xcorr', ...
          '(', ...
            num2str(layer), ',', num2str(i_epoch), ')']);
    is_auto = 1;
    [mass_xcorr_tmp, ...
     mass_autocorr_tmp, ...
     mass_xcorr_mean, ...
     mass_xcorr_std] = ...
        pvp_xcorr2( spike_array(stim_steps, ...
				target_struct.clutter_ndx_max{layer, 1}), ...
		   [], ...
		   xcorr_struct, ...
		   target_struct.clutter_ndx_max{layer, 1}, ...
		   layer_struct.size_layer{layer}, ...
		   target_struct.clutter_ndx_max{layer, 1}, ...
		   layer_struct.size_layer{layer}, ...
		   is_auto, ...
		   xcorr_flag);
    mass_clutter_xcorr{i_target, layer} = ...
	mass_clutter_xcorr{i_target, layer} + ...
        mass_xcorr_tmp;
    mass_clutter_autocorr{i_target, layer} = ...
	mass_clutter_autocorr{i_target, layer} + ...
        mass_autocorr_tmp;
				# clutter_xcorr{i_target, layer} = ...
				# 	clutter_xcorr{i_target, layer} + ...
				#     xcorr_tmp;
    

    disp([layer_struct.layerID{layer}, ...
          ' ', 'mass_target2clutter_xcorr', ...
          '(', ...
            num2str(layer), ',', num2str(i_epoch), ')']);
    is_auto = 0;
    for i_target = 1 : target_struct.num_targets
      [mass_xcorr_tmp, ...
       mass_autocorr_tmp, ...
       mass_xcorr_mean, ...
       mass_xcorr_std] = ...
          pvp_xcorr2(spike_array(stim_steps, ...
				 target_struct.target_ndx_max{layer, i_target}), ...
                     spike_array(stim_steps, ...
				 target_struct.clutter_ndx_max{layer, 1}), ...
		     xcorr_struct, ...
                     target_struct.target_ndx_max{layer, i_target}, ...
                     layer_struct.size_layer{layer}, ...
                     target_struct.clutter_ndx_max{layer, 1}, ...
                     layer_struct.size_layer{layer}, ...
                     is_auto, ...
                     xcorr_flag);
      mass_target2clutter_xcorr{i_target, layer} = ...
	  mass_target2clutter_xcorr{i_target, layer} + ...
          mass_xcorr_tmp;
      mass_target2clutter_autocorr{i_target} = ...
	  mass_target2clutter_autocorr{i_target} + ...
          mass_autocorr_tmp;
				# target2clutter_xcorr{i_target} = ...
				# 	  target2clutter_xcorr{i_target} + ...
				#     xcorr_tmp;
    endfor %% % i_target
    
  endfor %% i_epoch
