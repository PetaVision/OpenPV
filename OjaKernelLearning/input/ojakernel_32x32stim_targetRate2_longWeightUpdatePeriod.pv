//
// ojakernel_8x8stim_targetRate2.params
//
// created by peteschultz: Dec 3, 2012
//

//  A params file to test OjaKernelConn for a single-column 8x8 problem.
//  Based on ojakernel_8x8stim_targetRate2.pv, but with dWUpdatePeriod changed from 1 to 5.
//

debugParsing = false;

HyPerCol "column" = {
   nx = 64;  
   ny = 64;
   dt = 1.0;
   randomSeed = 1815410804;  // Must be at least 8 digits long.  // if not set here,  clock time is used to generate seed
   numSteps = 100000;
   progressStep = 1;
   writeProgressToErr = false;
   outputPath = "../../PV_Output/ojakernel_32x32stim_targetRate2_longWeightUpdatePeriod/output";
   filenamesContainLayerNames = 2;
   filenamesContainConnectionNames = 2;
   checkpointRead = true;
   checkpointReadDir = "../../PV_Output/ojakernel_32x32stim_targetRate2_longWeightUpdatePeriod/checkpoints/";
   checkpointReadDirIndex = 1000;
   checkpointWrite = true;
   checkpointWriteDir = "../../PV_Output/ojakernel_32x32stim_targetRate2_longWeightUpdatePeriod/checkpoints/";
   checkpointWriteStepInterval = 1000;
   deleteOlderCheckpoints = false;
   // suppressLastOutput = false;
};

//
// layers
//

Patterns "input" = {
   nxScale                       = 1;
   nyScale                       = 1;
   nf                            = 1;
   phase                         = 0;
   marginWidth                   = 1;
   mirrorBCflag                  = true;
   restart                       = false;
   
   jitterFlag                    = false;
   
   patternType                   = "DROP";
   dropSpeed                     = -1;   //Radius expands dropSpeed pixels per timestep
   dropSpeedRandomMax            = 0.03;
   dropSpeedRandomMin            = 0.01;
   
   dropPeriod                    = -1;   //-1 for random period, otherwise, number of frames inbetween drops
   dropPeriodRandomMax           = 500;
   dropPeriodRandomMin           = 250;
   inOut                         = 1;
   
   maxValue                      = 0.75;
   minValue                      = 0.25;

   halfNeutral                   = true;
   dropPosition                  = -1;
   dropPositionRandomMax         = 20;
   dropPositionRandomMin         = 5;

   startFrame                    = 0; 
   endFrame                      = -1;
   
   writeImages                   = true;
   writeImagesExtension          = "png";
   patternsOutputPath            = "../../PV_Output/ojakernel_32x32stim_targetRate2_longWeightUpdatePeriod/output/stimulus";
   normalizeLuminanceFlag        = false;
   
   displayPeriod                 = 1;
   writeStep                     = -1;
   useImageBCflag                = false;
   inverseFlag                   = false;
   
   writeSparseActivity           = false;
};

ANNLayer "scaled input" = {
    nxScale                 = 1;
    nyScale                 = 1;
    nf                      = 1;
    phase                   = 1;
    marginWidth             = 1;
    mirrorBCflag            = 1;
    writeSparseActivity     = false;
    writeStep               = 1.0;
    initialWriteTime        = 0.0;

    restart                 = false;
    InitVType               = "ZeroV";

    VThresh                 = -infinity;
    VMax                    = infinity;
    VMin                    = -infinity;
    VShift                  = 0.0;
};

Retina "RetinaON" = {
    nxScale                 = 1;
    nyScale                 = 1;
    nf                      = 1;
    phase                   = 2;
    restart                 = false;
    
    writeStep               = -1;
    writeSparseActivity     = false;
    marginWidth             = 4;
    mirrorBCflag            = true;
    spikingFlag             = true;

    foregroundRate          = 400;   // Hz // Max poisson spiking rate when input is 255
    backgroundRate          = 0;    // Hz // Min poisson spiking rate when input is 0

    burstFreq               = 50;    // Hz // Everything coming into the retina should be burstin burstFreq times per sec
    burstDuration           = 20;    // ms // Bursts last burstDuration ms

    beginStim               = 0;
    endStim                 = -1;
    
    refractoryPeriod        = 0;
    absRefractoryPeriod     = 0;
};

Retina "RetinaOFF" = {
    nxScale                 = 1;
    nyScale                 = 1;
    nf                      = 1;
    phase                   = 2;
    restart                 = false;
    
    writeStep               = -1;
    writeSparseActivity     = false;
    marginWidth             = 4;
    mirrorBCflag            = true;
    spikingFlag             = true;

    foregroundRate          = 400;   // Hz // Max poisson spiking rate when input is 255
    backgroundRate          = 0;    // Hz // Min poisson spiking rate when input is 0

    burstFreq               = 50;    // Hz // Everything coming into the retina should be burstin burstFreq times per sec
    burstDuration           = 20;    // ms // Bursts last burstDuration ms

    beginStim               = 0;
    endStim                 = -1;
    
    refractoryPeriod        = 0;
    absRefractoryPeriod     = 0;
};

LCALIFLayer "lcalif" = {
    nxScale                 = 0.25;        
    nyScale                 = 0.25;        
    nf                      = 256;   
    phase                   = 3;

    tauTHR                  = 4000;       // Timescale for changing adaptive threshold, in milliseconds
    targetRate              = 2;           // Target rate of output spikes in Hertz

    writeSparseActivity     = true;
    writeStep               = -1.0;
    // initialWriteTime        = 0.0;
    marginWidth             = 2;         
    mirrorBCflag            = true;        // mirroring boundary conditions
    InitVType               = "ConstantV";
    method                  = "arma";
    valueV                   = -70.0;
    Vrest                   = -70.0;    
    restart                 = 0.0;         // from graylast
    Vexc                    = 0.0;         // reversal potential 
    Vinh                    = -75.0;       // chloride channel
    VinhB                   = -90.0;       // potassium reversal
    tau                     = 20; // 10.0;        // intrinsic leak membrane time constant (max)
    tauE                    = 5.0; // 2.0; // 1.0;         // how long glutamine stays bound
    tauI                    = 10.0; // 5.0;         // how long GABA stays bound
    tauIB                   = 10.0;        // inhibitory potassium channel 
    VthRest                 = -55.0;       // firing threshold 15 mV above rest
    tauVth                  = 10.0;        // 10.0 relative refractory period
    deltaVth                = 5.0;         // jump of threshold when firing
    noiseAmpE               = 0.02; // 0.04; // 0.10;         // 0.5 1 means conductance is equal to lead conductance  gjk
    noiseAmpI               = 0.01; // 0.02; // 0.05;         // 0,5 "twice as easy for the membrane capacitance to discharge" gjk
    noiseAmpIB              = 0.0;         // no noise here 
    noiseFreqE              = 250.;        // spontaneous transmitter release/channel openings
    noiseFreqI              = 250.;        // correlation to time step size !!!
    noiseFreqIB             =   0.;        // should be scaled by the time constant - look at LIF model
    Vscale                  = 15.0;        // Scale for the change of dynVthRest. Must be positive; defaults to VthRest - Vrest

    normalizeInput          = true;        // If true, divide each GSyn[k] by the sum of the inputs to neuron k.
};

////////////////////////////////////////////////////////////////////////////////
// Connections Connections Connections Connections Connections Connections
// Connections Connections Connections Connections Connections Connections
// Connections Connections Connections Connections Connections Connections
// Connections Connections Connections Connections Connections Connections
// Connections Connections Connections Connections Connections Connections
// Connections Connections Connections Connections Connections Connections
////////////////////////////////////////////////////////////////////////////////

KernelConn "input to scaled input" = {
   preLayerName             = "input";
   postLayerName            = "scaled input";
   channelCode              = 0;
   nxp                      = 1;
   nyp                      = 1;
   nfp                      = 1;
   numAxonalArbors          = 1;
   delay                    = 0;

   initFromLastFlag         = 0;
   writeStep                = -1;
   // initialWriteTime         = 0;
   
   weightInitType           = "OneToOneWeights";
   weightInit               = 2.0;
   
   normalizeMethod          = "none";
   plasticityFlag           = false;
   stochasticReleaseFlag    = false;
   writeCompressedCheckpoints = false;
   selfFlag                 = false;
   shrinkPatches            = false;
   preActivityIsNotRate     = false;
};

KernelConn "ImagetoRetinaONCenter" = {
   preLayerName             = "scaled input";
   postLayerName            = "RetinaON";
   channelCode              = 0;
   nxp                      = 1; 
   nyp                      = 1; 
   nfp                      = 1;
   numAxonalArbors          = 1;
   delay                    = 0;
   
   initFromLastFlag         = 0;  
   writeStep                = -1;
   // initialWriteTime         = 1;

   weightInitType           = "Gauss2DWeight";
   aspect                   = 1;
   sigma                    = 1;
   rMin                     = 0;
   rMax                     = 1;   
   strength                 = 2.66666666667;

   normalizeMethod              = "normalizeSum";
   normalizeFromPostPerspective = true;
   normalizeArborsIndividually  = false;
   normalize_cutoff             = false;
   symmetrizeWeights            = false;
   minSumTolerated              = 0.0;

   plasticityFlag           = false;
   stochasticReleaseFlag    = false;
   writeCompressedCheckpoints = false;
   selfFlag                 = false;
   shrinkPatches            = false;
   preActivityIsNotRate     = false;
};

KernelConn "ImagetoRetinaONSurround" = {
   preLayerName             = "scaled input";
   postLayerName            = "RetinaON";
   channelCode              = 1;
   nxp                      = 3;
   nyp                      = 3;
   nfp                      = 1;
   numAxonalArbors          = 1;
   delay                    = 0;

   initFromLastFlag         = 0;
   writeStep                = -1;

   weightInitType           = "Gauss2DWeight";
   aspect                   = 1;
   sigma                    = 1;
   rMax                     = 5;
   rMin                     = 0.1;
   strength                 = 2.66666666667;

   normalizeMethod              = "normalizeSum";
   normalizeFromPostPerspective = true;
   normalizeArborsIndividually  = false;
   normalize_cutoff             = false;
   symmetrizeWeights            = false;
   minSumTolerated              = 0.0;

   plasticityFlag           = false;
   stochasticReleaseFlag    = false;
   writeCompressedCheckpoints = false;
   selfFlag                 = false;
   shrinkPatches            = false;
   preActivityIsNotRate     = false;
};

KernelConn "ImagetoRetinaOFFCenter" = {
   preLayerName             = "scaled input";
   postLayerName            = "RetinaOFF";
   channelCode              = 1;
   nxp                      = 1; 
   nyp                      = 1; 
   nfp                      = 1;
   numAxonalArbors          = 1;
   delay                    = 0;

   initFromLastFlag         = 0;  
   writeStep                = -1;

   weightInitType           = "Gauss2DWeight";
   aspect                   = 1;
   sigma                    = 1;
   rMin                     = 0;
   rMax                     = 1;   
   strength                 = 2.66666666667;

   normalizeMethod              = "normalizeSum";
   normalizeFromPostPerspective = true;
   normalizeArborsIndividually  = false;
   normalize_cutoff             = false;
   symmetrizeWeights            = false;
   minSumTolerated              = 0.0;

   plasticityFlag           = false;
   stochasticReleaseFlag    = false;
   writeCompressedCheckpoints = false;
   selfFlag                 = false;
   shrinkPatches            = false;
   preActivityIsNotRate     = false;
};


KernelConn "ImagetoRetinaOFFSurround" = {
   preLayerName             = "scaled input";
   postLayerName            = "RetinaOFF";
   channelCode              = 0;
   nxp                      = 3;
   nyp                      = 3;
   nfp                      = 1;
   numAxonalArbors          = 1;
   delay                    = 0;

   initFromLastFlag         = 0;
   writeStep                = -1;

   weightInitType           = "Gauss2DWeight";
   aspect                   = 1;
   sigma                    = 1;
   rMax                     = 5;
   rMin                     = 0.1;
   strength                 = 2.66666666667;

   normalizeMethod              = "normalizeSum";
   normalizeFromPostPerspective = true;
   normalizeArborsIndividually  = false;
   normalize_cutoff             = false;
   symmetrizeWeights            = false;
   minSumTolerated              = 0.0;

   plasticityFlag           = false;
   stochasticReleaseFlag    = false;
   writeCompressedCheckpoints = false;
   selfFlag                 = false;
   shrinkPatches            = false;
   preActivityIsNotRate     = false;
};

OjaKernelConn "RetinaONtoLCALIF" = {
   preLayerName             = "RetinaON";
   postLayerName            = "lcalif";
   nxp                      = 3;
   nyp                      = 3;
   nfp                      = 256;
   numAxonalArbors          = 1;
   channelCode              = 0;
   delay                    = 0.0;
   
   initFromLastFlag         = 0;  // 1;  /dr/ restart
   
   writeStep                = -1;
   // initialWriteTime         = 0;
   writeCompressedCheckpoints = false;
   
   normalizeMethod          = "none";

   combine_dW_with_W_flag   = false;
   selfFlag                 = false;
   preActivityIsNotRate     = false;
   keepKernelsSynchronized  = true;

   weightInitType           = "UniformRandomWeight";
   wMaxInit                 = 0.12;
   wMinInit                 = 0.06;
      
   plasticityFlag           = true;
   shrinkPatches            = false;
   stochasticReleaseFlag    = false;
   initialWeightUpdateTime  = 0.0;
   weightUpdatePeriod       = 1.0;
   dWMax                    = 1.0;
   sparseFraction           = 0.0;
   
   integrationTime          = 10.0;
   inputTargetRate          = 50.0;   // Between 1 and 10 Hz
   outputTargetRate         = 1.0;   // Between 1 and 10 Hz
   learningTime             = 1200000; // 40000;   // Timescale for change in weights, in seconds
   dWUpdatePeriod           = 5.0;
   
   alphaMultiplier          = 0.5;
};

OjaKernelConn "RetinaOFFtoLCALIF" = {
   preLayerName             = "RetinaOFF";
   postLayerName            = "lcalif";
   nxp                      = 3;
   nyp                      = 3;
   nfp                      = 256;
   numAxonalArbors          = 1;
   channelCode              = 0;
   delay                    = 0.0;
   
   initFromLastFlag         = 0;  // 1;  /dr/ restart

   writeStep                = -1;
   // initialWriteTime         = 0;
   writeCompressedCheckpoints = false;
   
   normalizeMethod          = "none";
   
   combine_dW_with_W_flag   = false;
   selfFlag                 = false;
   preActivityIsNotRate     = false;
   keepKernelsSynchronized  = true;

   weightInitType           = "UniformRandomWeight";
   wMaxInit                 = 0.12;
   wMinInit                 = 0.06;
      
   plasticityFlag           = true;
   shrinkPatches            = false;
   stochasticReleaseFlag    = false;
   initialWeightUpdateTime  = 0.0;
   weightUpdatePeriod       = 1.0;
   dWMax                    = 1.0;
   sparseFraction           = 0.0;
   
   integrationTime          = 10.0;
   inputTargetRate          = 50.0;   // Between 1 and 10 Hz
   outputTargetRate         = 1.0;   // Between 1 and 10 Hz
   learningTime             = 1200000; // 40000;   // Timescale for change in weights, in seconds
   dWUpdatePeriod           = 5.0;
   
   alphaMultiplier          = 0.5;
};

KernelConn "ON Kernel Normalizer" = {
   preLayerName             = "RetinaON";
   postLayerName            = "lcalif";
   nxp                      = 3;
   nyp                      = 3;
   nfp                      = 256;
   numAxonalArbors          = 1;
   channelCode              = 4;
   delay                    = 0.0;
   
   writeStep                = -1;
   
   weightInitType           = "UniformWeight";
   weightInit               = 1.0;
   
   normalizeMethod          = "none";
   plasticityFlag           = false;
   stochasticReleaseFlag    = false;
   writeCompressedCheckpoints = false;
   selfFlag                 = false;
   shrinkPatches            = false;
   preActivityIsNotRate     = false;
};

KernelConn "OFF Kernel Normalizer" = {
   preLayerName             = "RetinaOFF";
   postLayerName            = "lcalif";
   nxp                      = 3;
   nyp                      = 3;
   nfp                      = 256;
   numAxonalArbors          = 1;
   channelCode              = 4;
   delay                    = 0.0;
   
   writeStep                = -1;
   
   weightInitType           = "UniformWeight";
   weightInit               = 1.0;
   
   normalizeMethod          = "none";
   plasticityFlag           = false;
   stochasticReleaseFlag    = false;
   writeCompressedCheckpoints = false;
   selfFlag                 = false;
   shrinkPatches            = false;
   preActivityIsNotRate     = false;
};

LCALIFLateralKernelConn "Lateral Inhibition" = {
   preLayerName             = "lcalif";
   postLayerName            = "lcalif";
   nxp                      = 5;
   nyp                      = 5;
   nfp                      = 256;
   numAxonalArbors          = 1;
   channelCode              = 1;
   delay                    = 0.0;

   initFromLastFlag         = false;
   
   writeStep                = -1;
   // initialWriteTime         = 0.0;
   
   plasticityFlag           = true;
   weightUpdatePeriod       = 1.0;
   initialWeightUpdateTime  = 0;
   stochasticReleaseFlag    = false;
   preActivityIsNotRate     = false;
   writeCompressedCheckpoints = false;
   selfFlag                 = false;
   shrinkPatches            = false;
   combine_dW_with_W_flag   = false;
   keepKernelsSynchronized  = true;
   dWMax                    = 1.0;
   
   weightInitType          = "UniformRandomWeight";
   wMinInit                = 0.0;
   wMaxInit                = 0.1;
   sparseFraction          = 0.0;
   
   normalizeMethod          = "none";

   integrationTimeConstant  = 40;
   inhibitionTimeConstant   = 800000; // 16000;
   targetRate               = 2;
   dWUpdatePeriod           = 5.0;
};
