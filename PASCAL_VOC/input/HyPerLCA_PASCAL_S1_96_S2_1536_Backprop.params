// PetaVision version something-point-something run at Fri Jan 30 10:03:53 2015
// Compiled with MPI and run using 3 rows and 4 columns.
// Compiled without OpenCL.
// Compiled with CUDA.
// Compiled with OpenMP parallel code and run using 8 threads.

HyPerCol "column" = {
    startTime                           = 0;
    dt                                  = 1;
    dtAdaptFlag                         = true;
    dtScaleMax                          = 2;
    dtScaleMin                          = 0.25;
    dtChangeMax                         = 0.05;
    dtChangeMin                         = 0;
    dtMinToleratedTimeScale             = 0.0001;
    stopTime                            = 1591600;
    progressInterval                    = 1000;
    writeProgressToErr                  = true;
    verifyWrites                        = false;
    outputPath                          = "/nh/compneuro/Data/PASCAL_VOC/PASCAL_S1_96_S2_1536_Backprop/VOC2007_landscape19";
    printParamsFilename                 = "PASCAL_VOC_PASCAL_S1_96_S2_1536_Backprop_VOC2007_landscape19.params";
    randomSeed                          = 1234567890;
    nx                                  = 256;
    ny                                  = 192;
    filenamesContainLayerNames          = 1;
    filenamesContainConnectionNames     = 1;
    initializeFromCheckpointDir         = "/nh/compneuro/Data/PASCAL_VOC/PASCAL_S1_96_S2_1536_Backprop/VOC2007_landscape19/Checkpoints/Checkpoint1591600";
    defaultInitializeFromCheckpointFlag = false;
    checkpointRead                      = false;
    checkpointWrite                     = true;
    checkpointWriteDir                  = "/nh/compneuro/Data/PASCAL_VOC/PASCAL_S1_96_S2_1536_Backprop/VOC2007_landscape19/Checkpoints";
    checkpointWriteTriggerMode          = "step";
    checkpointWriteStepInterval         = 50000;
    deleteOlderCheckpoints              = false;
    suppressNonplasticCheckpoints       = false;
    writeTimescales                     = true;
    errorOnNotANumber                   = false;
};

Movie "Image" = {
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 3;
    phase                               = 0;
    mirrorBCflag                        = true;
    initializeFromCheckpointFlag        = false;
    writeStep                           = 2000;
    initialWriteTime                    = 2000;
    sparseLayer                         = false;
    updateGpu                           = false;
    offsetAnchor                        = "tl";
    offsetX                             = 0;
    offsetY                             = 0;
    writeImages                         = 0;
    useImageBCflag                      = false;
    autoResizeFlag                      = false;
    inverseFlag                         = false;
    normalizeLuminanceFlag              = true;
    normalizeStdDev                     = true;
    jitterFlag                          = 0;
    padValue                            = 0;
    imageListPath                       = "/nh/compneuro/Data/PASCAL_VOC/VOC2007/VOC2007_landscape_192X256_list.txt";
    displayPeriod                       = 200;
    randomMovie                         = 0;
    readPvpFile                         = false;
    echoFramePathnameFlag               = true;
    start_frame_index                   = 0;
    skip_frame_index                    = 0;
    writeFrameToTimestamp               = true;
    flipOnTimescaleError                = true;
    resetToStartOnLoop                  = false;
};

ANNNormalizedErrorLayer "ImageReconS1Error" = {
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 3;
    phase                               = 1;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    initializeFromCheckpointFlag        = false;
    InitVType                           = "ZeroV";
    triggerFlag                         = false;
    writeStep                           = 2000;
    initialWriteTime                    = 2000;
    sparseLayer                         = false;
    updateGpu                           = false;
    VThresh                             = 0;
    AMin                                = 0;
    AMax                                = 3.40282e+38;
    AShift                              = 0;
    VWidth                              = 0;
    errScale                            = 1;
};

HyPerLCALayer "S1" = {
    nxScale                             = 0.5;
    nyScale                             = 0.5;
    nf                                  = 96;
    phase                               = 2;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    initializeFromCheckpointFlag        = false;
    InitVType                           = "InitVFromFile";
    Vfilename                           = "/nh/compneuro/Data/PASCAL_VOC/PASCAL_S1_96_S2_1536/VOC2007_landscape18/Checkpoints/Checkpoint1591600/S1_V.pvp";
    triggerFlag                         = false;
    writeStep                           = 200;
    initialWriteTime                    = 200;
    sparseLayer                         = true;
    writeSparseValues                   = true;
    updateGpu                           = true;
    VThresh                             = 0.025;
    AMin                                = 0;
    AMax                                = 3.40282e+38;
    AShift                              = 0;
    VWidth                              = 10;
    numChannels                         = 1;
    timeConstantTau                     = 100;
    numWindowX                          = 1;
    numWindowY                          = 1;
    selfInteract                        = true;
};

ANNLayer "ImageReconS1" = {
    nxScale                             = 1;
    nyScale                             = 1;
    nf                                  = 3;
    phase                               = 3;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    initializeFromCheckpointFlag        = false;
    InitVType                           = "ZeroV";
    triggerFlag                         = false;
    //triggerLayerName                    = "Image";
    //triggerOffset                       = 0;
    writeStep                           = 2000;
    initialWriteTime                    = 2000;
    sparseLayer                         = false;
    updateGpu                           = false;
    VThresh                             = -3.40282e+38;
    AMin                                = -3.40282e+38;
    AMax                                = 3.40282e+38;
    AShift                              = 0;
    VWidth                              = 0;
};


// S2 layers

ANNErrorLayer "S1ReconS2Error" = {
    nxScale                             = 0.5;
    nyScale                             = 0.5;
    nf                                  = 96;
    phase                               = 3;
    mirrorBCflag                        = false;
    valueBC                             = 0;
    initializeFromCheckpointFlag        = false;
    InitVType                           = "ZeroV";
    triggerFlag                         = false;
    writeStep                           = 2000;
    initialWriteTime                    = 2000;
    sparseLayer                         = false;
    updateGpu                           = false;
    VThresh                             = 0;
    AMin                                = 0;
    AMax                                = 3.40282e+38;
    AShift                              = 0;
    VWidth                              = 0;
    errScale                            = 1;
};

HyPerLCALayer "S2" = {
#include "S1";
  @nxScale                             = 0.25;
  @nyScale                             = 0.25;
  @nf                                  = 1536;
  @phase                               = 4;
  @Vfilename                           = "/nh/compneuro/Data/PASCAL_VOC/PASCAL_S1_96_S2_1536/VOC2007_landscape19/Checkpoints/Checkpoint1591600/S2_V.pvp";
  @VThresh                             = 0.01;
};

ANNLayer "S1ReconS2" = {
#include "ImageReconS1";
  @nxScale                             = 0.5;
  @nyScale                             = 0.5;
  @nf                                  = 96;
  @phase                               = 5;
  @writeStep                           = -1;
};

ANNLayer "ImageReconS2" = {
#include "ImageReconS1";
  @phase                               = 1;
  @triggerFlag                         = true;
  triggerLayerName                    = "Image";
  triggerOffset                       = 1;
  @initialWriteTime                    = 2001;
};

ANNLayer "ImageReconS2Error" = {
#include "ImageReconS2";
  @phase                               = 2;
};


// Ground Truth

Movie "GroundTruthPixels" = {
#include "Image";
  @nf                                  = 20;
  @sparseLayer                         = true;
  @writeSparseValues                   = false;
  @autoResizeFlag                      = false;
  @normalizeLuminanceFlag              = false;
  @imageListPath                       = "/home/ec2-user/mountData/PASCAL_VOC/VOC2007/VOC2007_landscape_192X256.pvp";
  @readPvpFile                         = true;
};

ANNLayer "GroundTruthNoBackground" = {
#include "ImageRecon";
  @nxScale                             = 0.125;
  @nyScale                             = 0.125;
  @nf                                  = 20;
  @phase                               = 1;
  @triggerFlag                         = true;
  @triggerLayerName                    = "GroundTruthPixels";
  @triggerOffset                       = 0;
  @sparseLayer                         = true;
  @writeSparseValues                   = false;
};

BackgroundLayer "GroundTruth" = {
  nxScale                             = 0.125;
  nyScale                             = 0.125;
  nf                                  = 21; //One more than input * rep
  writeStep                           = 40000.0;
  initialWriteTime                    = 4000.0;
  mirrorBCflag                        = false;
  valueBC                             = 0.0;
  sparseLayer                         = true;
  writeSparseValues                   = false;
  //
  InitVType                           = "ZeroV";
  //repFeatureNum = 4; //Replicating each feature 4 times
  // 
  phase                               = 2; 
  triggerFlag                         = false;
  originalLayerName                   = "GroundTruthNoBackground";
};

ANNLayer "S2Pooled" = {
#include "ImageRecon";
  @nxScale                             = 0.125;
  @nyScale                             = 0.125;
  @nf                                  = 1536;
  @phase                               = 5;
};

ANNLayer "GroundTruthReconS2Pooled" = {
#include "ImageRecon";
  @nxScale                             = 0.125;
  @nyScale                             = 0.125;
  @nf                                  = 21;
  @phase                               = 6;
};

ANNErrorLayer "GroundTruthReconS2PooledError" = {
#include "ImageReconError";
  @nxScale                             = 0.125;
  @nyScale                             = 0.125;
  @nf                                  = 21;
  @phase                               = 7;
};

ANNLayer "S2PooledBackpropError" = {
#include "ImageRecon";
  @nxScale                             = 0.125;
  @nyScale                             = 0.125;
  @nf                                  = 1536;
  @phase                               = 8;
};

ANNLayer "S2BackpropError" = {
#include "ImageRecon";
  @nxScale                             = 0.25;
  @nyScale                             = 0.25;
  @nf                                  = 1536;
  @phase                               = 9;
};

ANNLayer "S2ReLU" = {
#include "S2BackpropError";
  @phase                               = 10;
  @VThresh                             = 0;
  @AMin                                = 0;
  @AMax                                = 1.0;
  @AShift                              = -1.0;
  @VWidth                              = 0;
};

PtwiseProductLayer "S2MaskedError" = {
#include "S2Backprop";
  @phase                               = 11;
};

ANNLayer "S1BackpropError" = {
#include "S2BackpropError";
  @nxScale                             = 0.5;
  @nyScale                             = 0.5;
  @nf                                  = 96;
  @phase                               = 11;
};






// Connections

HyPerConn "ImageToImageReconS1Error" = {
    preLayerName                        = "Image";
    postLayerName                       = "ImageReconS1Error";
    channelCode                         = 0;
    delay                               = [0.000000];
    numAxonalArbors                     = 1;
    plasticityFlag                      = false;
    convertRateToSpikeCount             = false;
    receiveGpu                          = false;
    sharedWeights                       = true;
    weightInitType                      = "OneToOneWeights";
    // initWeightsFile                     was set to (NULL);
    weightInit                          = 0.0555;
    initializeFromCheckpointFlag        = false;
    updateGSynFromPostPerspective       = false;
    pvpatchAccumulateType               = "convolve";
    writeStep                           = -1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    nxp                                 = 1;
    nyp                                 = 1;
    nxpShrunken                         = 1;
    nypShrunken                         = 1;
    nfp                                 = 3;
    shrinkPatches                       = false;
    normalizeMethod                     = "none";
};

MomentumConn "S1ToImageReconS1Error" = {
    preLayerName                        = "S1";
    postLayerName                       = "ImageReconS1Error";
    channelCode                         = -1;
    delay                               = [0.000000];
    numAxonalArbors                     = 1;
    plasticityFlag                      = true;
    convertRateToSpikeCount             = false;
    receiveGpu                          = false;
    sharedWeights                       = true;
    weightInitType                      = "FileWeight";
    initWeightsFile                     = "/nh/compneuro/Data/PASCAL_VOC/PASCAL_S1_96_S2_1536/VOC2007_landscape19/Checkpoints/Checkpoint1591600/S1ToImageReconS1Error_W.pvp";
    useListOfArborFiles                 = false;
    combineWeightFiles                  = false;
    initializeFromCheckpointFlag        = false;
    triggerFlag                         = true;
    triggerLayerName                    = "Image";
    triggerOffset                       = 1;
    updateGSynFromPostPerspective       = false;
    pvpatchAccumulateType               = "convolve";
    writeStep                           = -1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    combine_dW_with_W_flag              = false;
    nxp                                 = 18;
    nyp                                 = 18;
    shrinkPatches                       = false;
    normalizeMethod                     = "normalizeL2";
    strength                            = 1;
    normalizeArborsIndividually         = false;
    normalizeOnInitialize               = true;
    normalizeOnWeightUpdate             = true;
    rMinX                               = 0;
    rMinY                               = 0;
    nonnegativeConstraintFlag           = false;
    normalize_cutoff                    = 0;
    normalizeFromPostPerspective        = false;
    minL2NormTolerated                  = 0;
    dWMax                               = .001;
    momentumMethod                      = "viscosity";
    momentumTau                         = 200.0;
    keepKernelsSynchronized             = true;
    useMask                             = false;
};

TransposeConn "ImageReconS1ErrorToS1" = {
    preLayerName                        = "ImageReconS1Error";
    postLayerName                       = "S1";
    channelCode                         = 0;
    delay                               = [0.000000];
    convertRateToSpikeCount             = false;
    receiveGpu                          = true;
    updateGSynFromPostPerspective       = true;
    pvpatchAccumulateType               = "convolve";
    writeStep                           = -1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    useMask                             = false;
    originalConnName                    = "S1ToImageReconS1Error";
};

CloneConn "S1ToImageReconS1" = {
    preLayerName                        = "S1";
    postLayerName                       = "ImageReconS1";
    channelCode                         = 0;
    delay                               = [0.000000];
    convertRateToSpikeCount             = false;
    receiveGpu                          = false;
    updateGSynFromPostPerspective       = false;
    pvpatchAccumulateType               = "convolve";
    writeStep                           = -1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    originalConnName                    = "S1ToImageReconS1Error";
};

IdentConn "ImageReconS1ToImageReconS1Error" = {
    preLayerName                        = "ImageReconS1";
    postLayerName                       = "ImageReconS1Error";
    channelCode                         = 1;
    delay                               = [0.000000];
    // initWeightsFile                     was set to (NULL);
    writeStep                           = -1;
};

IdentConn "S1ToS1ReconS2Error" = {
    preLayerName                        = "S1";
    postLayerName                       = "S1ReconS2Error";
    channelCode                         = 0;
    delay                               = [0.000000];
    // initWeightsFile                     was set to (NULL);
    writeStep                           = -1;
};

// S2 connections

//MomentumConn "S2ToS1ReconS2Error" = {
//#include "S1ToImageReconS1Error";
//  @preLayerName                        = "S2";
//  @postLayerName                       = "S1ReconS2Error";
//  @initWeightsFile                     = "/nh/compneuro/Data/PASCAL_VOC/PASCAL_S1_96_S2_1536/VOC2007_landscape19/Checkpoints/Checkpoint1591600/S2ToS1ReconS2Error_W.pvp";
//  @nxp                                 = 10;
//  @nyp                                 = 10;
//  @dWMax                               = 0.1;
//};

MomentumConn "S2ToS1BackpropError" = {
#include "S1ToImageReconS1Error";
  @preLayerName                        = "S2";
  @postLayerName                       = "S1BackpropError";
  @initWeightsFile                     = "/nh/compneuro/Data/PASCAL_VOC/PASCAL_S1_96_S2_1536/VOC2007_landscape19/Checkpoints/Checkpoint1591600/S2ToS1ReconS2Error_W.pvp";
  @nxp                                 = 10;
  @nyp                                 = 10;
  @dWMax                               = 0.01;
};

CloneConn "S2ToS1ReconS2" = {
#include "S1ToImageReconS1";
  @preLayerName                        = "S2";
  @postLayerName                       = "S1ReconS2";
  @originalConnName                    = "S2ToS1ReconS2Error";
};

IdentConn "S1ReconS2ToS1ReconS2Error" = {
    preLayerName                        = "S1ReconS2";
    postLayerName                       = "S1ReconS2Error";
    channelCode                         = 1;
    delay                               = [0.000000];
    // initWeightsFile                     was set to (NULL);
    writeStep                           = -1;
};

TransposeConn "S1ReconS2ErrorToS2" = {
#include "ImageReconS1ErrorToS1";
  @preLayerName                        = "S1ReconS2Error";
  @postLayerName                       = "S2";
  @originalConnName                    = "S2ToS1ReconS2Error";
};

CloneConn "S1ReconS2ToImageReconS2" = {
#include "S1ToImageReconS1";
  @preLayerName                        = "S1ReconS2";
  @postLayerName                       = "ImageReconS2";
  @originalConnName                    = "S1ToImageReconS1";
  @receiveGpu                          = true;
  @updateGSynFromPostPerspective       = true;
};

HyPerConn "ImageToImageReconS2Error" = {
#include "ImageToImageReconS1Error";
  @preLayerName                        = "Image";
  @postLayerName                       = "ImageReconS2Error";
};

IdentConn "ImageReconS2ToImageReconS2Error" = {
    preLayerName                        = "ImageReconS2";
    postLayerName                       = "ImageReconS2Error";
    channelCode                         = 1;
    delay                               = [0.000000];
    // initWeightsFile                     was set to (NULL);
    writeStep                           = -1;
};


// Ground Truth connections

PoolingConn "GroundTruthPixelsToGroundTruthNoBackground" = {
    preLayerName                        = "GroundTruthPixels";
    postLayerName                       = "GroundTruthNoBackground";
    channelCode                         = 0;
    delay                               = [0.000000];
    numAxonalArbors                     = 1;
    convertRateToSpikeCount             = false;
    receiveGpu                          = false;
    sharedWeights                       = true;
    initializeFromCheckpointFlag        = false;
    updateGSynFromPostPerspective       = false;
    pvpatchAccumulateType               = "maxpooling";
    writeStep                           = -1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    nxp                                 = 1;
    nyp                                 = 1;
    nfp                                 = 20;
    shrinkPatches                       = false;
    needPostIndexLayer                  = false;
};

PoolingConn "S2ToS2Pooled" = {
#include "GroundTruthPixelsToGroundTruthNoBackground";
  @preLayerName                        = "S2";
  @postLayerName                       = "S2Pooled";
  @pvpatchAccumulateType               = "sumpooling";
  @nxp                                 = 10;
  @nyp                                 = 10;;
};

IdentConn "GroundTruthToGroundTruthReconS2PooledError" = {
    preLayerName                        = "GroundTruth";
    postLayerName                       = "GroundTruthReconS3PooledError";
    channelCode                         = 0;
    delay                               = [0.000000];
    initWeightsFile                     = NULL;
    writeStep                           = -1;
};

MomentumConn "S2PooledToGroundTruthReconS2PooledError" = {
#include "S2ToS1ReconError";
  @preLayerName                        = "S2Pooled";
  @postLayerName                       = "GroundTruthReconS2PooledError";
  @nxp                                 = 1;
  @nyp                                 = 1;
  @momentumTau                         = 1.0;
  @dWMax                               = 0.01;
  //@initWeightsFile                     = "/home/ec2-user/mountData/PASCAL_VOC/PASCAL_S1_128_S2_256_S3_512_GT/VOC2007_landscape2AWS/Checkpoints/Checkpoint3183200/S3ToGroundTruth8To1ReconS3Error_W.pvp";
  weightInitType                      = "UniformRandomWeight";
  initWeightsFile                     = NULL;
  wMinInit                            = -0.001;
  wMaxInit                            = 0.001;
  @normalizeMethod                       = "none"; //"normalizeGroup";
  //@normalizeGroupName                    = "S2ToS1ReconS2Error";
};

CloneConn "S2PooledToGroundTruthReconS2Pooled" = {
#include "S2ToS1ReconS2";
  @preLayerName                        = "S2Pooled";
  @postLayerName                       = "GroundTruthReconS2Pooled";
  @originalConnName                    = "S2PooledToGroundTruthReconS2PooledError";
  @receiveGpu                          = true;
  @updateGSynFromPostPerspective       = true;
};

IdentConn "GroundTruthReconS2PooledToGroundTruthReconS2PooledError" = {
    preLayerName                        = "GroundTruthReconS2Pooled";
    postLayerName                       = "GroundTruthReconS2PooledError";
    channelCode                         = 1;
    delay                               = [0.000000];
    initWeightsFile                     = NULL;
    writeStep                           = -1;
};


TransposeConn "GroundTruthReconS2PooledErrorToS2PooledBackpropError" = {
#include "S1ReconS2ErrorToS2";
  @preLayerName                        = "GroundTruthReconS2PooledError";
  @postLayerName                       = "S2PooledBackpropError";
  @originalConnName                    = "S2PooledToGroundTruthReconS2PooledError";
};

TransposePoolingConn "S2PooledBackpropErrorToS2BackpropError" = {
    preLayerName                        = "S2PooledBackpropError";
    postLayerName                       = "S2BackpropError";
    channelCode                         = 0;
    updateGSynFromPostPerspective       = false;
    pvpatchAccumulateType               = "sumpooling";
    writeStep                           = -1;
    writeCompressedCheckpoints          = false;
    selfFlag                            = false;
    delay                               = 0;
    originalConnName                    = "S2ToS2Pooled";
};

IdentConn "S2ToS2ReLU" = {
    preLayerName                        = "S2";
    postLayerName                       = "S2ReLU";
    channelCode                         = 0;
    delay                               = [0.000000];
    initWeightsFile                     = NULL;
    writeStep                           = -1;
};

IdentConn "S2BackpropErrorToS2MaskedError" = {
    preLayerName                        = "S2BackpropError";
    postLayerName                       = "S2MaskedError";
    channelCode                         = 0;
    delay                               = [0.000000];
    initWeightsFile                     = NULL;
    writeStep                           = -1;
};

IdentConn "S2ReLUToS2MaskedError" = {
    preLayerName                        = "S2ReLU";
    postLayerName                       = "S2MaskedError";
    channelCode                         = 1;
    delay                               = [0.000000];
    initWeightsFile                     = NULL;
    writeStep                           = -1;
};

CloneConn "S2MaskedErrorToS1BackpropError" = {
#include "S2ToS1ReconS2";
  @preLayerName                        = "S2MaskedError";
  @postLayerName                       = "S1BackpropError";
  @originalConnName                    = "S2ToS1ReconS2Error";
};






