//
// params.pv
//  - input parameters for stdp.cpp
//  - initially, this case study examines how a one dimensional object (line segment) can
//    be synchronized
//

HyPerCol "column" = {
   nx = 32;
   ny = 32;
   dt = .5;
};

//
// Three layers, "Retina", "L1", "L2"
//

HyPerLayer "Retina" = {
   nx = 32;
   ny = 32;
   nf = 1;   // features = (OFF,ON}
   
   nBorder = 0;

   beginStim = .0;
   endStim   = 200000.0;

   fireOffPixels = 1;          // if true, black (0) pixels fire as off
   invert  = 0.0;
   uncolor = 1.0;              // if true, pixels>0 become 1.0

   spikingFlag = 1;           // spike as poisson?
   //noiseOnFreq = 50;        // when this is defined poissonEdge and poissonBlank 
                              //are overwritten
   poissonEdgeProb  = 0.5;//0.50;//.125;      // if so, on probability
   poissonBlankProb = 0.01;//0.02;//.01;//.075; //.0125;     //       off probability
   
   burstDuration = 10;
   burstFreq = 40;
   
   marginWidth = 0.0;           // set input to 0 within margin
};

HyPerLayer "L1" = {
   nx = 32;
   ny = 32;
   nf = 1;    // features=(OFF,ON} times 8 combinations
   no = 1;
   nBorder = 0;
   
   spikingFlag = 1; // ?
   
   tau    = 100; // 2;    // 100;
   tauE   = 1;   // .25;  // 1;
   tauVth = 10;  // .25;   // 10;
   
   VthRest = -55; // -60; // -55;
   
   noiseAmpE = 0.5; //64.0;
   noiseAmpI = 0.5; //4.0;
};

HyPerLayer "L2" = {
   nx = 32;
   ny = 32;
   nf = 1;    // features=(OFF,ON} times 8 combinations
   no = 1;
   nBorder = 0;
   
   spikingFlag = 1; //?
   
   tau    = 100; // 2;    // 100;
   tauE   = 1;   // .25;  // 1;
   tauVth = 10;  // .25;   // 10;
   
   VthRest = -55; // -60; // -55;
   
   noiseAmpE = 1.0;
   noiseAmpI = 1.0;
};

HyPerLayer "L3" = {
   nx = 32;
   ny = 32;
   nf = 1;    // features=(OFF,ON}
   no = 1;
   nBorder = 0;
   
   spikingFlag = 1; // ?
   
   tau    = 100;    // 100;
   tauE   = 1;   // 1;
   tauVth = 10;   // 10;
   
   VthRest = -55; // -55;
   
   noiseAmpE = 1.0;
   noiseAmpI = 1.0;
};


HyPerLayer "L4" = {
   nx = 32;
   ny = 32;
   nf = 1;    // features=(OFF,ON}
   no = 1;
   nBorder = 0;
   
   tau    = 100;    // 100;
   tauE   = 1;   // 1;
   tauVth = 10;   // 10;
   
   VthRest = -55; // -55;
   
   noiseAmpE = 1.0;
   noiseAmpI = 1.0;
};

HyPerLayer "L5" = {
   nx = 32;
   ny = 32;
   nf = 1;    // features=(OFF,ON}
   no = 1;
   nBorder = 0;
   
   tau    = 100; // 2;    // 100;
   tauE   = 1;//.25;   // 1;
   tauVth = 10;//.25;   // 10;
   
   VthRest = -60; // -55;
   
   noiseAmpE = 0;
   noiseAmpI = 0;
};


HyPerConn "Retina to L1" = {
   nxp = 3;
   nyp = 3;
   strength = 1.0;
   
   stdpFlag = 1;
   
   wMinInit = 4.0;  // default values if Gaussian is not defined
   wMaxInit = 6.0; // if not defined uses wMin and wMax.
   
   wGaussMean = 3.00;
   wGaussStdev = 0.50;//1.00;
   
   idum = 3940284; // random number generator seed
   
   randomFlag = 1; // 
   
   wMin = 0.0;
   wMax = 10.0;
   
   writeStep = 100;

   rotate = 1.0;
   invert = 0.0;
};

HyPerConn "L1 to L2" = {
   nxp = 3;
   nyp = 3;
   strength = 1.0;
   
   stdpFlag = 1;
   
   wMin = 0.0;
   wMax = 10.0;
   
   //aspect = 1;
   //sigma  = 100;
   //rMax   = 100;
   
   rotate = 1.0;
   invert = 0.0;
};

HyPerConn "L2 to L3" = {
   nxp = 3;
   nyp = 3;
   strength = 1;
   //delay = 30;
   
   stdpFlag = 1;
   
   wMin = 0.0;
   wMax = 10.0;

   rotate = 1.0;
   invert = 0.0;
};

HyPerConn "L3 to L4" = {
   nxp = 3;
   nyp = 3;
   strength = 1;
   //delay = 30;

   stdpFlag = 1;
   
   wMin = 0.0;
   wMax = 10.0;

   rotate = 1.0;
   invert = 0.0;
};

HyPerConn "L4 to L5" = {
   nxp = 3;
   nyp = 3;
   strength = 1;
   //delay = 30;

   stdpFlag = 1;
   
   wMin = 0.0;
   wMax = 10.0;

   rotate = 1.0;
   invert = 0.0;
};


