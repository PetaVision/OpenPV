#!/bin/bash
# Written by Max Theiler, max.theiler@gmail.com
# 2/5/2016

# Pathing to this script in your .bash_profile allows
# using the 'draw' command from anywhere, which is the
# the recommendended way of accessing param_draw.py.

FILEWRITE=false
while getopts ":plfa" opt; do
    case $opt in
        p)
            PHASE=true
            ;;
	l) 
	    LEGEND=true
	    ;;
	f)
	    FILEWRITE=true
	    ;;
	a)
	    ALPHABET=true
    esac
done
shift $((OPTIND - 1))

if [ -z "$1" ]
then
    echo "Please enter a params file to draw:"
    read pfile
fi
if [ ! -z "$1" ]
then
    pfile=$1
fi
if [ ! -f $1 ]
then
    echo "$1 not found."
    exit 1
    if [ ! -f $pfile ]
    then
	echo "$pfile not found."
	exit 1
    fi
fi

olddir=$PWD
cd ${0%/*}
plabdir=$PWD
cd $olddir
parentdir="$(dirname "$plabdir")"
if [ "$PHASE" = true ] ; then
    if [ "$LEGEND" = true ] ; then
	if [ "$ALPHABET" = true ] ; then
	    python $plabdir/param_draw.py -l $parentdir/src/layers -c $parentdir/src/connections $pfile -p --legend --alphabet
	else
	    python $plabdir/param_draw.py -l $parentdir/src/layers -c $parentdir/src/connections $pfile -p --legend
	fi
    else
	if [ "$ALPHABET" = true ] ; then
	    python $plabdir/param_draw.py -l $parentdir/src/layers -c $parentdir/src/connections $pfile -p --alphabet
	else
	    python $plabdir/param_draw.py -l $parentdir/src/layers -c $parentdir/src/connections $pfile -p
	fi
    fi
else
    if [ "$LEGEND" = true ] ; then
	if [ "$ALPHABET" = true ] ; then
	    python $plabdir/param_draw.py -l $parentdir/src/layers -c $parentdir/src/connections $pfile --legend --alphabet
	else
	    python $plabdir/param_draw.py -l $parentdir/src/layers -c $parentdir/src/connections $pfile --legend
	fi
    else
	if [ "$ALPHABET" = true ] ; then
	    python $plabdir/param_draw.py -l $parentdir/src/layers -c $parentdir/src/connections $pfile --alphabet
	else
	    python $plabdir/param_draw.py -l $parentdir/src/layers -c $parentdir/src/connections $pfile
	fi
    fi
fi

mermaid mermaid_input
if [ "$FILEWRITE" = false ] ; then
    rm mermaid_input
fi
filename=$(basename "$pfile")
extension="${filename##*.}"
filename="${filename%.*}"
mv mermaid_input.png "$filename.png"
case "$(uname -s)" in
    Linux)
        display $filename.png
        ;;
    Darwin)
        open $filename.png
        ;;
    *)
        echo "Unrecognized OS; output is in \"$filename.png\"."
esac
