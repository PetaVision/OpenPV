{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf350
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww12580\viewh8100\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\fs24 \cf0 Programs that are most likely to be used.\
\
plot_all.py\
plot_weight_patches.py\
plot_kclustering.py\
plot_time_stability_neuro.py\
plot_amoeba_response.py                            This is what I use to get the amoeba reconstruction.\
plot_amoeba_roc.py\
\
\
image_shuffle.py		                              Takes movie images and shuffles them around. Saves the new image as a .png file.\
mask_weights.py		                              Takes a weight file and makes weights half that are half of the max 0. Saves new weight file.\
plot_acorr.py			                              Saves the autocorrelation to time-stability0%s.txt\
plot_all_kcluster.py 	                           For k=16, plots every cluster of weights on a graph.\
plot_all_patches_overtime.py	                     Uses a post file to plot a series of patches as they change through time.\
plot_all.py			                                 Plots both weight histogram and clique histogram.\
plot_amoeba_response.py 	                        Plots amoeba image, activity, and image reconstruction\
plot_amoeba_responseon_off.py                      Plots amoeba image, 1st image reconstruction, 2nd image reconstruction\
plot_amoeba_roc.py	                              Plot amoeba roc curve.\
plot_auc.py			                                 Plots auc graph from auc.txt files\
plot_autocorrelation.py	                           Plot autocorrelation of the max response for 16 presentations of the bar.\
plot_average_activity-bw.py	                     Plot the average activity in black and white\
plot_avg_activity.py		                           Plot the average activity\
plot_avg_two.py		                              Plot the average activity of two activity files\
plot_avg_weight.py		                           Averages each weight patch and plots them.\
plot_bestvsleast_comp.py	\
plot_bestvsleast.py		                           From txt file creates histogram \
plot_clique_histogram.py 	                        Plots clique histogram\
plot_cliques_size.py	\
plot_correlations.py		                           Finds the correlation between on and off for a chosen patch feature\
plot_dos_activity.py		                           Takes two activity file where either only horizontal or vertical bars where shown and plots which presentation of the bar is above the median firing rate.\
plot_feature_histogram.py		                     Plots histogram of bar world features\
plot_feature_kclusters.py		                     Take all patches in a kcluster and plots those patches if they are a feature\
plot_feature_map.py\
plot_feature_test.py		                           Looks like plot_feature_histogram.py\
plot_feature.py		                              For a chosen feature plots graph and histogram\
plot_feature_overtime.py	                        Follows features throughout time\
plot_find_kcluster.py	                           Plots K-cluster then plots all patches within a chosen cluster\
plot_first_second_roc.py	                        Given 16 activity files of the bar in different position plots roc curves for the first two files\
plot_fourier_activity_16.py                        Plots the fourier activity for 20 different activity files\
 plot_fourier_activity_256.py	                     Plots the fourier activity of the best responses of the bar in 20 different positions\
plot_fourier_activity.py		                     Old and incomplete version\
plot_fourier_features.py	                        Gives weight patches a feature and then does a fourier transform.\
plot_fourier_kcluster.py	                        Does a fourier transform on k-clustered weights\
plot_hamming.py		                              Plots the hamming distance\
plot_histogram_of_correlations.py	               Plots histogram of weight features\
plot_image_activity.py	                           Creates a plot that shows how the image is flashed on and off over a period of time\
plot_inh_roc.py		                              Takes the activity files and creates roc data??\
plot_kcluster_proximity.py	                        Looks like an incomplete program\
plot_kclustering.py		                           Plots k-cluster analysis\
plot_l1_activity.py		                           Plots activity through time\
plot_last_all.py		                              Takes post files and plot weight and clique histogram at a certain point in time\
plot_last_kclustering.py	                        Takes post file and does a clustering analysis at a certain point in time\
plot_last_weight_patches.py	                     Take post file and plots weight patches at a certain point in time\
plot_layer_timing		                              An attempt to do a find the probability of a neuron firing causing another to fire through multiple layers\
plot_layers.py		                                 Incomplete program looking at different layers\
plot_map_of_correlations.py	                     Plots the features of the weight patches. Meant for 4x4 patches\
plot_membrane.py		                              Plots membrane potential\
plot_multiple_activity_firing_rates.py	            Plots the firing rate of the maxed firing of one presentation of the bar\
plot_multiple_average_activity_less_selective.py	??\
plot_multiple_average_activity_one_neuron.py 	   Incomplete\
plot_multiple_averaged_activity_firing_rates.py	   Takes 16 presentations of the bar and plots histogram and max firing rate for one presentation of the bar\
plot_patch_overtime.py	                           Plots a patch as it changes through time\
plot_patches_all_overtime.py	\
plot_patches_overtime.py\
plot_poor_mans_a.py	                              "Poor mans" analysis for 32 analysis files\
plot_poor_mans_many.py		                        For 16 activity files. \
plot_poor_mans_plot.py		                        For 16 activity files plots where the max is a vertical or horizontal bar\
plot_poor_mans_v_vs_h_hist.py		                  For 16 activity files, plots a bar graph of how the max neuron reacts to the neighboring presentations of the bar\
plot_presentation_response.py		                  Plots the neurons that respond to above 50% max firing rate of the 16 presentations of the bar.\
\
                                                   The following files examine the proximity of the neurons to each other.\
\
plot_proximity_2nd_exclusive.py		\
plot_proximity_2nd_method.py\
plot_proximity_2nd_on_off.py\
plot_proximity_test.py\
plot_proximity_two_second.py\
plot_proximity_two.py\
plot_proximity.py\
\
plot_reconstruction_2nd.py	                        An incomplete version of plot_reconstrucion.py\
plot_reconstruction.py	                        	Old attempt to plot reconstruction\
plot_response.py		                              Another, given 16 activity files, response. Possibly older version\
plot_retina_activity.py	                           Linear plot of retina activity through time\
\
plot_roc_1stpart.py\
plot_roc_2ndpart.py\
plot_roc_bestvleast.py\
plot_roc_graph.py		                              Incomplete version\
plot_roc_histo.py		                              Creates a histogram from roc.txt file\
plot_roc_neuro.py		                              Creates roc.txt file. Use on near because it takes too long on a normal computer\
plot_roc.py\
plot_save_layer_timing.py		                     Less complete version of plot_layer_timing.py\
plot_second_roc.py\
plot_strong_features.py	                           Plots features of weights above 0.7 max\
plot_strong_neurons.py	                           Plots activity of neurons above 0.7 max\
plot_test_layers.py		                           Test version of layers\
plot_test_roc.py		                              Test version of roc\
\
plot_time_stability_5x5.py\
plot_time_stability_all_backward.py\
plot_time_stability_all_k.py\
plot_time_stability_all_l2_backward.py\
plot_time_stability_all_l2.py\
plot_time_stability_all_patches.py\
plot_time_stability_c1.py\
plot_time_stability.py\
plot_time_stability_long.py\
\
plot_time_stability_neuro.py	                     Does time stability analysis and creates a .txt file \
plot_time_stability_graph.py	                     Combines the .txt files to show on one graph\
\
\
plot_various_patch_levels.py	                     Older attempt at image reconstruction given a single patch?\
print_avg_weight.py	                              Broken\
scramble_weights.py	                              Scrambles the weights of a patch around\
\
\
\
\
plot_total_avg_activity.py		                     Plot average activity as a function of time over an entire layer\
plot_total_weight_histogram.py	                  Make a histogram of normally distributed random numbers and plot the analytic PDF over it\
\
\
\
\
\
\
\
\
}
