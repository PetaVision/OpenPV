// input/params-mnist+pos.pv
//     input parameters file for training generative model with pooling
//     and log lateral competition, on mnist digits in various positions

debugParsing = false;

HyPerCol "column" = {
    nx = 64;
    ny = 64;
    dt = 1;
    randomSeed = 1;
    numSteps = 1000000;
    outputPath = "output/mnist+pos/";
};

// 31 layers:
//   0 Slideshow
//   1 Retina
//   2 AnaRetina
//   3 Layer A
//   4 Pooling AnaLayer A
//   5 Arrow AnaLayer A
//   6 Flat AnaLayer A
//   7 Flat CataLayer B
//   8 Arrow CataLayer B
//   9 Pooling CataLayer B
//  10 Layer B
//  11 Pooling AnaLayer B
//  12 Arrow AnaLayer B
//  13 Flat AnaLayer B
//  14 Flat CataLayer C
//  15 Arrow CataLayer C
//  16 Pooling CataLayer C
//  17 Layer C
//  18 Pooling AnaLayer C
//  19 Arrow AnaLayer C
//  20 Flat AnaLayer C
//  21 Flat CataLayer D
//  22 Arrow CataLayer D
//  23 Pooling CataLayer D
//  24 Layer D
//  25 Energy AnaLayer A
//  26 Energy CataLayer B
//  27 Energy AnaLayer B
//  28 Energy CataLayer C
//  29 Energy AnaLayer C
//  30 Energy CataLayer D

Movie "Slideshow" = {
    imageListPath = "./input/mnist+pos/train/trainsampleimagelist.txt";

    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 1;
    marginWidth = 0;
    writeStep = 1.0;
    mirrorBCflag = 0;
    spikingFlag = 0;
    writeNonspikingActivity = -1;
    
    writeImages = 0;

    displayPeriod = 500;
    jitterFlag = 0;
    randomMovie = 0;
    offsetX = 0;
    offsetY = 0;
};

Retina "Retina" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 1;
    marginWidth = 0;
    writeStep = 1.0;
    mirrorBCflag = 1;
    spikingFlag = 0;
    writeNonspikingActivity = -1;

    poissonEdgeProb = 1; 
    poissonBlankProb = 0;
    burstFreq = 1;
    burstDuration = 40000;

    beginStim = 1;
    endStim = 40000;
};

ANNLayer "AnaRetina" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 1;
    marginWidth = 0;
    writeStep = 1.0;
    mirrorBCflag = 1;
    spikingFlag = 0;
    writeNonspikingActivity = -1;

    Vrest = 0.0;

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
};

LogLatWTAGenLayer "Layer A" = {
    restart = 0;
    nxScale = 0.5;
    nyScale = 0.5;
    nf = 8;
    marginWidth = 2;
    writeStep = 1.0;
    mirrorBCflag = 1;
    spikingFlag = 0;
    writeNonspikingActivity = 1;
    Vrest = 0.0;

    AMax = infinity;
    VThresh = 0;
    AMin = 0;

    relaxation = 1E-1;
    activityThreshold = 0;
    auxChannelCoeff = 0.5;
    persistence = 0;
    
    sparsityTermCoefficient = 1;
};

PoolingANNLayer "Pooling AnaLayer A" = {
    restart = 0;        
    nxScale = 0.5;     
    nyScale = 0.5;     
    nf = 8;             
    marginWidth = 0;    
    writeStep = 1.0;
    mirrorBCflag = 1;   
    spikingFlag = 0;    
    writeNonspikingActivity = -1;
        
    Vrest = 0.0;        

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
    
    bias = 0;
};

PoolingANNLayer "Arrow AnaLayer A" = {
    restart = 0;        
    nxScale = 0.5;     
    nyScale = 0.5;     
    nf = 8;             
    marginWidth = 2;    
    writeStep = 1.0;
    mirrorBCflag = 1;   
    spikingFlag = 0;    
    writeNonspikingActivity = -1;
        
    Vrest = 0.0;        

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
    
    bias = 1;
};

ANNLayer "Flat AnaLayer A" = {
    restart = 0;        
    nxScale = 0.5;     
    nyScale = 0.5;     
    nf = 8;             
    marginWidth = 0;    
    writeStep = 1.0;
    mirrorBCflag = 1;   
    spikingFlag = 0;    
    writeNonspikingActivity = -1;
        
    Vrest = 0.0;        

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
};

ANNLayer "Flat CataLayer B" = {
    restart = 0;        
    nxScale = 0.25;     
    nyScale = 0.25;     
    nf = 32;             
    marginWidth = 0;    
    writeStep = 1.0;
    mirrorBCflag = 1;   
    spikingFlag = 0;    
    writeNonspikingActivity = -1;
        
    Vrest = 0.0;        

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
};

PoolingANNLayer "Arrow CataLayer B" = {
    restart = 0;        
    nxScale = 0.25;     
    nyScale = 0.25;     
    nf = 32;             
    marginWidth = 2;    
    writeStep = 1.0;
    mirrorBCflag = 1;   
    spikingFlag = 0;    
    writeNonspikingActivity = -1;
        
    Vrest = 0.0;        

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
    
    bias = 1;
};

PoolingANNLayer "Pooling CataLayer B" = {
    restart = 0;        
    nxScale = 0.25;     
    nyScale = 0.25;     
    nf = 32;             
    marginWidth = 0;    
    writeStep = 1.0;
    mirrorBCflag = 1;   
    spikingFlag = 0;    
    writeNonspikingActivity = -1;
        
    Vrest = 0.0;        

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
    
    bias = 0;
};

LogLatWTAGenLayer "Layer B" = {
    restart = 0;
    nxScale = 0.25;
    nyScale = 0.25;
    nf = 32;
    marginWidth = 2;
    writeStep = 1.0;
    mirrorBCflag = 1;
    spikingFlag = 0;
    writeNonspikingActivity = 1;
    Vrest = 0.0;

    AMax = infinity;
    VThresh = 0;
    AMin = 0;

    relaxation = 1E-1;
    activityThreshold = 0;
    auxChannelCoeff = 0.5;
    persistence = 0;
    
    sparsityTermCoefficient = 1;
};

PoolingANNLayer "Pooling AnaLayer B" = {
    restart = 0;        
    nxScale = 0.25;     
    nyScale = 0.25;     
    nf = 32;             
    marginWidth = 0;    
    writeStep = 1.0;
    mirrorBCflag = 1;   
    spikingFlag = 0;    
    writeNonspikingActivity = -1;
        
    Vrest = 0.0;        

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
    
    bias = 0;
};

PoolingANNLayer "Arrow AnaLayer B" = {
    restart = 0;        
    nxScale = 0.25;     
    nyScale = 0.25;     
    nf = 32;             
    marginWidth = 2;    
    writeStep = 1.0;
    mirrorBCflag = 1;   
    spikingFlag = 0;    
    writeNonspikingActivity = -1;
        
    Vrest = 0.0;        

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
    
    bias = 1;
};

ANNLayer "Flat AnaLayer B" = {
    restart = 0;        
    nxScale = 0.25;     
    nyScale = 0.25;     
    nf = 32;             
    marginWidth = 0;    
    writeStep = 1.0;
    mirrorBCflag = 1;   
    spikingFlag = 0;    
    writeNonspikingActivity = -1;
        
    Vrest = 0.0;        

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
};

ANNLayer "Flat CataLayer C" = {
    restart = 0;        
    nxScale = 0.125;     
    nyScale = 0.125;     
    nf = 128;             
    marginWidth = 0;    
    writeStep = 1.0;
    mirrorBCflag = 1;   
    spikingFlag = 0;    
    writeNonspikingActivity = -1;
        
    Vrest = 0.0;        

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
};

PoolingANNLayer "Arrow CataLayer C" = {
    restart = 0;        
    nxScale = 0.125;     
    nyScale = 0.125;     
    nf = 128;             
    marginWidth = 1;    
    writeStep = 1.0;
    mirrorBCflag = 1;   
    spikingFlag = 0;    
    writeNonspikingActivity = -1;
        
    Vrest = 0.0;        

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
    
    bias = 1;
};

PoolingANNLayer "Pooling CataLayer C" = {
    restart = 0;        
    nxScale = 0.125;     
    nyScale = 0.125;     
    nf = 128;             
    marginWidth = 0;    
    writeStep = 1.0;
    mirrorBCflag = 1;   
    spikingFlag = 0;    
    writeNonspikingActivity = -1;
        
    Vrest = 0.0;        

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
    
    bias = 0;
};

LogLatWTAGenLayer "Layer C" = {
    restart = 0;
    nxScale = 0.125;
    nyScale = 0.125;
    nf = 128;
    marginWidth = 1;
    writeStep = 1.0;
    mirrorBCflag = 1;
    spikingFlag = 0;
    writeNonspikingActivity = 1;
    Vrest = 0.0;

    AMax = infinity;
    VThresh = 0;
    AMin = 0;

    relaxation = 1E-1;
    activityThreshold = 0;
    auxChannelCoeff = 0.5;
    persistence = 0;
    
    sparsityTermCoefficient = 1;
};

PoolingANNLayer "Pooling AnaLayer C" = {
    restart = 0;        
    nxScale = 0.125;     
    nyScale = 0.125;     
    nf = 128;             
    marginWidth = 0;    
    writeStep = 1.0;
    mirrorBCflag = 1;   
    spikingFlag = 0;    
    writeNonspikingActivity = -1;
        
    Vrest = 0.0;        

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
    
    bias = 0;
};

PoolingANNLayer "Arrow AnaLayer C" = {
    restart = 0;        
    nxScale = 0.125;     
    nyScale = 0.125;     
    nf = 128;             
    marginWidth = 1;    
    writeStep = 1.0;
    mirrorBCflag = 1;   
    spikingFlag = 0;    
    writeNonspikingActivity = -1;
        
    Vrest = 0.0;        

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
    
    bias = 1;
};

ANNLayer "Flat AnaLayer C" = {
    restart = 0;        
    nxScale = 0.125;     
    nyScale = 0.125;     
    nf = 128;             
    marginWidth = 0;    
    writeStep = 1.0;
    mirrorBCflag = 1;   
    spikingFlag = 0;    
    writeNonspikingActivity = -1;
        
    Vrest = 0.0;        

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
};

ANNLayer "Flat CataLayer D" = {
    restart = 0;        
    nxScale = 0.125;     
    nyScale = 0.125;     
    nf = 10;             
    marginWidth = 1;    
    writeStep = 1.0;
    mirrorBCflag = 1;   
    spikingFlag = 0;    
    writeNonspikingActivity = -1;
        
    Vrest = 0.0;        

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
};

PoolingANNLayer "Arrow CataLayer D" = {
    restart = 0;        
    nxScale = 0.125;     
    nyScale = 0.125;     
    nf = 10;             
    marginWidth = 1;    
    writeStep = 1.0;
    mirrorBCflag = 1;   
    spikingFlag = 0;    
    writeNonspikingActivity = -1;
        
    Vrest = 0.0;        

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
    
    bias = 1;
};

PoolingANNLayer "Pooling CataLayer D" = {
    restart = 0;        
    nxScale = 0.125;     
    nyScale = 0.125;     
    nf = 10;             
    marginWidth = 0;    
    writeStep = 1.0;
    mirrorBCflag = 1;   
    spikingFlag = 0;    
    writeNonspikingActivity = -1;
        
    Vrest = 0.0;        

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
    
    bias = 0;
};

TrainingLayer "Layer D" = {
    trainingLabelsPath = "./input/mnist+pos/train/traintoplayerlist.txt";
    
    restart = 0;
    nxScale = 0.125;
    nyScale = 0.125;
    nf = 10;
    marginWidth = 1;
    writeStep = 1.0;
    mirrorBCflag = 1;
    spikingFlag = 0;
    writeNonspikingActivity = 1;
    Vrest = 0.0;

    AMax = infinity;
    VThresh = 0;
    AMin = 0;

    displayPeriod = 500;
    distToData = 2;
};

PtwiseProductLayer "Energy AnaLayer A" = {
    restart = 0;        
    nxScale = 0.5;     
    nyScale = 0.5;     
    nf = 8;             
    marginWidth = 0;    
    writeStep = 1.0;
    mirrorBCflag = 1;   
    spikingFlag = 0;    
    writeNonspikingActivity = -1;
        
    Vrest = 0.0;        

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
};

PtwiseProductLayer "Energy CataLayer B" = {
    restart = 0;        
    nxScale = 0.25;     
    nyScale = 0.25;     
    nf = 32;             
    marginWidth = 0;    
    writeStep = 1.0;
    mirrorBCflag = 1;   
    spikingFlag = 0;    
    writeNonspikingActivity = -1;
        
    Vrest = 0.0;        

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
};

PtwiseProductLayer "Energy AnaLayer B" = {
    restart = 0;        
    nxScale = 0.25;     
    nyScale = 0.25;     
    nf = 32;             
    marginWidth = 0;    
    writeStep = 1.0;
    mirrorBCflag = 1;   
    spikingFlag = 0;    
    writeNonspikingActivity = -1;
        
    Vrest = 0.0;        

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
};

PtwiseProductLayer "Energy CataLayer C" = {
    restart = 0;        
    nxScale = 0.125;     
    nyScale = 0.125;     
    nf = 128;             
    marginWidth = 0;    
    writeStep = 1.0;
    mirrorBCflag = 1;   
    spikingFlag = 0;    
    writeNonspikingActivity = -1;
        
    Vrest = 0.0;        

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
};

PtwiseProductLayer "Energy AnaLayer C" = {
    restart = 0;        
    nxScale = 0.125;     
    nyScale = 0.125;     
    nf = 128;             
    marginWidth = 0;    
    writeStep = 1.0;
    mirrorBCflag = 1;   
    spikingFlag = 0;    
    writeNonspikingActivity = -1;
        
    Vrest = 0.0;        

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
};

PtwiseProductLayer "Energy CataLayer D" = {
    restart = 0;        
    nxScale = 0.125;     
    nyScale = 0.125;     
    nf = 10;             
    marginWidth = 0;    
    writeStep = 1.0;
    mirrorBCflag = 1;   
    spikingFlag = 0;    
    writeNonspikingActivity = -1;
        
    Vrest = 0.0;        

    AMax = infinity;
    VThresh = -infinity;
    AMin = -infinity;
};

// 64 Connections:
//  0 Slideshow to Retina                      IdentConn            +
//  1 Retina to AnaRetina                      IdentConn            +
//  2 AnaRetina to Layer A                     GenerativeConn       + (weights A)
//  3 Layer A to AnaRetina Feedback            FeedbackConn         - (weights A^T)
//  4 Layer A to Pooling AnaLayer A            IdentConn            +
//  5 Pooling AnaLayer A to Layer A            IdentConn            -
//  6 Layer A to Flat AnaLayer A               IdentConn            +
//  7 Layer A to Arrow AnaLayer A              IdentConn            +
//  8 Flat AnaLayer A to Pooling AnaLayer A    IdentConn            -
//  9 Flat AnaLayer A to Arrow AnaLayer A      IdentConn            -
// 10 Layer B to Pooling CataLayer B           IdentConn            +
// 11 Pooling CataLayer B to Layer B           IdentConn            -
// 12 Layer B to Flat CataLayer B              IdentConn            +
// 13 Layer B to Arrow CataLayer B             IdentConn            +
// 14 Flat CataLayer B to Pooling CataLayer B  IdentConn            -
// 15 Flat CataLayer B to Arrow CataLayer B    IdentConn            -
// 16 Arrow AnaLayer A to Layer B              PoolingGenConn       aux (weights B)
// 17 Layer A to Flat CataLayer B              CloneKernelConn      - (weights B)
// 18 Arrow CataLayer B to Layer A             TransposeConn        aux (weights B^T)
// 19 Layer B to Flat AnaLayer A               CloneKernelConn      - (weights B^T)
// 20 Layer B to Pooling AnaLayer B            IdentConn            +
// 21 Pooling AnaLayer B to Layer B            IdentConn            -
// 22 Layer B to Flat AnaLayer B               IdentConn            +
// 23 Layer B to Arrow AnaLayer B              IdentConn            +
// 24 Flat AnaLayer B to Pooling AnaLayer B    IdentConn            -
// 25 Flat AnaLayer B to Arrow AnaLayer B      IdentConn            -
// 26 Layer C to Pooling CataLayer C           IdentConn            +
// 27 Pooling CataLayer C to Layer C           IdentConn            -
// 28 Layer C to Flat CataLayer C              IdentConn            +
// 29 Layer C to Arrow CataLayer C             IdentConn            +
// 30 Flat CataLayer C to Pooling CataLayer C  IdentConn            -
// 31 Flat CataLayer C to Arrow CataLayer C    IdentConn            -
// 32 Arrow AnaLayer B to Layer C              PoolingGenConn       aux (weights C)
// 33 Layer B to Flat CataLayer C              CloneKernelConn      - (weights C)
// 34 Arrow CataLayer C to Layer B             TransposeConn        aux (weights C^T)
// 35 Layer C to Flat AnaLayer B               CloneKernelConn      - (weights C^T)
// 36 Layer C to Pooling AnaLayer C            IdentConn            +
// 37 Pooling AnaLayer C to Layer C            IdentConn            -
// 38 Layer C to Flat AnaLayer C               IdentConn            +
// 39 Layer C to Arrow AnaLayer C              IdentConn            +
// 40 Flat AnaLayer C to Pooling AnaLayer C    IdentConn            -
// 41 Flat AnaLayer C to Arrow AnaLayer C      IdentConn            -
// 42 Layer D to Pooling CataLayer D           IdentConn            +
// 43 Pooling CataLayer D to Layer D           IdentConn            -
// 44 Layer D to Flat CataLayer D              IdentConn            +
// 45 Layer D to Arrow CataLayer D             IdentConn            +
// 46 Flat CataLayer D to Pooling CataLayer D  IdentConn            -
// 47 Flat CataLayer D to Arrow CataLayer D    IdentConn            -
// 48 Arrow AnaLayer C to Layer D              PoolingGenConn       aux (weights D)
// 49 Layer C to Flat CataLayer D              CloneKernelConn      - (weights D)
// 50 Arrow CataLayer D to Layer C             TransposeConn        aux (weights D^T)
// 51 Layer D to Flat AnaLayer C               CloneKernelConn      - (weights D^T)
// 52 Layer A to Energy AnaLayer A             IdentConn            +
// 53 Flat AnaLayer A to Energy AnaLayer A     IdentConn            -
// 54 Layer B to Energy CataLayer B            IdentConn            +
// 55 Flat CataLayer B to Energy CataLayer B   IdentConn            -
// 56 Layer B to Energy AnaLayer B             IdentConn            +
// 57 Flat AnaLayer B to Energy AnaLayer B     IdentConn            -
// 58 Layer C to Energy CataLayer C            IdentConn            +
// 59 Flat CataLayer C to Energy CataLayer C   IdentConn            -
// 60 Layer C to Energy AnaLayer C             IdentConn            +
// 61 Flat AnaLayer C to Energy AnaLayer C     IdentConn            -
// 62 Layer D to Energy CataLayer D            IdentConn            +
// 63 Flat CataLayer D to Energy CataLayer D   IdentConn            -

IdentConn "Slideshow to Retina" = {
    preLayerName = "Slideshow";
    postLayerName = "Retina";

    channelCode = 0;    
    
    nxp = 1;            
    nyp = 1;            
    nfp = 1;            

    writeStep = -1;
    writeCompressedWeights = true;
    
    delay = 0;          
};

IdentConn "Retina to AnaRetina" = {
    preLayerName = "Retina";
    postLayerName = "AnaRetina";

    channelCode = 0;    
    
    writeStep = -1;    
    writeCompressedWeights = true;
    
    delay = 0;          
};

GenerativeConn "AnaRetina to Layer A" = {
    preLayerName = "AnaRetina";
    postLayerName = "Layer A";

    channelCode = 0;    
    
    nxp = 1;            
    nyp = 1;            
    nfp = 8;            

    writeStep = 100;    
    writeCompressedWeights = false;
    
    delay = 0;          
    
    initFromLastFlag = 0; 
    randomFlag = 1;     
    uniformWeights = 1; 
    wMinInit = 0;       
    wMaxInit = 1;       
    normalize = 1;      
    
    symmetrizeWeights = 0; 

    weightUpdatePeriod = 100; 
    relaxation = 2E-2;  
    nonnegConstraintFlag = 1; 
    normalizeMethod = 3;
                        
    normalizeConstant = 1.41421356;
};

FeedbackConn "Layer A to AnaRetina Feedback" = {
    originalConnName = "AnaRetina to Layer A";

    channelCode = 1;    

    writeStep = -1;    
    writeCompressedWeights = false;

    delay = 0;          
};

IdentConn "Layer A to Pooling AnaLayer A" = {
    preLayerName = "Layer A";
    postLayerName = "Pooling AnaLayer A";

    channelCode = 0;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Pooling AnaLayer A to Layer A" = {
    preLayerName = "Pooling AnaLayer A";
    postLayerName = "Layer A";

    channelCode = 1;    

    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;    
};

IdentConn "Layer A to Flat AnaLayer A" = {
    preLayerName = "Layer A";
    postLayerName = "Flat AnaLayer A";

    channelCode = 0;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Layer A to Arrow AnaLayer A" = {
    preLayerName = "Layer A";
    postLayerName = "Arrow AnaLayer A";

    channelCode = 0;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Flat AnaLayer A to Pooling AnaLayer A" = {
    preLayerName = "Flat AnaLayer A";
    postLayerName = "Pooling AnaLayer A";

    channelCode = 1;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Flat AnaLayer A to Arrow AnaLayer A" = {
    preLayerName = "Flat AnaLayer A";
    postLayerName = "Arrow AnaLayer A";

    channelCode = 1;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Layer B to Pooling CataLayer B" = {
    preLayerName = "Layer B";
    postLayerName = "Pooling CataLayer B";

    channelCode = 0;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Pooling CataLayer B to Layer B" = {
    preLayerName = "Pooling CataLayer B";
    postLayerName = "Layer B";

    channelCode = 1;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Layer B to Flat CataLayer B" = {
    preLayerName = "Layer B";
    postLayerName = "Flat CataLayer B";

    channelCode = 0;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Layer B to Arrow CataLayer B" = {
    preLayerName = "Layer B";
    postLayerName = "Arrow CataLayer B";

    channelCode = 0;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Flat CataLayer B to Pooling CataLayer B" = {
    preLayerName = "Flat CataLayer B";
    postLayerName = "Pooling CataLayer B";

    channelCode = 1;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Flat CataLayer B to Arrow CataLayer B" = {
    preLayerName = "Flat CataLayer B";
    postLayerName = "Arrow CataLayer B";

    channelCode = 1;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

PoolingGenConn "Arrow AnaLayer A to Layer B" = {
    preLayerName = "Arrow AnaLayer A";
    postLayerName = "Layer B";
    secondaryPreLayerName = "Layer A";
    secondaryPostLayerName = "Arrow CataLayer B";

    channelCode = 2;    
    
    nxp = 3;            
    nyp = 3;            
    nfp = 32;            

    writeStep = 100;    
    writeCompressedWeights = false;

    delay = 0;          
    
    randomFlag = 1;     
    uniformWeights = 1; 
    wMinInit = 0;       
    wMaxInit = 1;       
    normalize = 1;      
    
    symmetrizeWeights = 0; 

    weightUpdatePeriod = 100; 
    relaxation = 1E-2;
    nonnegConstraintFlag = 1; 
    normalizeMethod = 3;
                        
    normalizeConstant = 1; 
};

CloneKernelConn "Layer A to Flat CataLayer B" = {
    preLayerName = "Layer A";
    postLayerName = "Flat CataLayer B";
    
    originalConnName = "Arrow AnaLayer A to Layer B";

    channelCode = 1;    

    writeStep = -1;    
    writeCompressedWeights = false;

    delay = 0;          
};

TransposeConn "Arrow CataLayer B to Layer A" = {
    preLayerName = "Arrow CataLayer B";
    postLayerName = "Layer A";

    originalConnName = "Arrow AnaLayer A to Layer B";

    channelCode = 2;    
    
    writeStep = -1;    
    writeCompressedWeights = false;

    delay = 0;   
};

CloneKernelConn "Layer B to Flat AnaLayer A" = {
    preLayerName = "Layer B";
    postLayerName = "Flat AnaLayer A";

    originalConnName = "Arrow CataLayer B to Layer A";

    channelCode = 1;    
    
    writeStep = -1;    
    writeCompressedWeights = false;
};

IdentConn "Layer B to Pooling AnaLayer B" = {
    preLayerName = "Layer B";
    postLayerName = "Pooling AnaLayer B";

    channelCode = 0;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Pooling AnaLayer B to Layer B" = {
    preLayerName = "Pooling AnaLayer B";
    postLayerName = "Layer B";

    channelCode = 1;    

    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;    
};

IdentConn "Layer B to Flat AnaLayer B" = {
    preLayerName = "Layer B";
    postLayerName = "Flat AnaLayer B";

    channelCode = 0;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Layer B to Arrow AnaLayer B" = {
    preLayerName = "Layer B";
    postLayerName = "Arrow AnaLayer B";

    channelCode = 0;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Flat AnaLayer B to Pooling AnaLayer B" = {
    preLayerName = "Flat AnaLayer B";
    postLayerName = "Pooling AnaLayer B";

    channelCode = 1;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Flat AnaLayer B to Arrow AnaLayer B" = {
    preLayerName = "Flat AnaLayer B";
    postLayerName = "Arrow AnaLayer B";

    channelCode = 1;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Layer C to Pooling CataLayer C" = {
    preLayerName = "Layer C";
    postLayerName = "Pooling CataLayer C";

    channelCode = 0;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Pooling CataLayer C to Layer C" = {
    preLayerName = "Pooling CataLayer C";
    postLayerName = "Layer C";

    channelCode = 1;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Layer C to Flat CataLayer C" = {
    preLayerName = "Layer C";
    postLayerName = "Flat CataLayer C";

    channelCode = 0;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Layer C to Arrow CataLayer C" = {
    preLayerName = "Layer C";
    postLayerName = "Arrow CataLayer C";

    channelCode = 0;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Flat CataLayer C to Pooling CataLayer C" = {
    preLayerName = "Flat CataLayer C";
    postLayerName = "Pooling CataLayer C";

    channelCode = 1;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Flat CataLayer C to Arrow CataLayer C" = {
    preLayerName = "Flat CataLayer C";
    postLayerName = "Arrow CataLayer C";

    channelCode = 1;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

PoolingGenConn "Arrow AnaLayer B to Layer C" = {
    preLayerName = "Arrow AnaLayer B";
    postLayerName = "Layer C";
    secondaryPreLayerName = "Layer B";
    secondaryPostLayerName = "Arrow CataLayer C";

    channelCode = 2;    
    
    nxp = 3;            
    nyp = 3;            
    nfp = 128;            

    writeStep = 100;    
    writeCompressedWeights = false;

    delay = 0;          
    
    randomFlag = 1;     
    uniformWeights = 1; 
    wMinInit = 0;       
    wMaxInit = 1;       
    normalize = 1;      
    
    symmetrizeWeights = 0; 

    weightUpdatePeriod = 100; 
    relaxation = 1E-2;
    nonnegConstraintFlag = 1; 
    normalizeMethod = 3;
                        
    normalizeConstant = 1; 
};

CloneKernelConn "Layer B to Flat CataLayer C" = {
    preLayerName = "Layer B";
    postLayerName = "Flat CataLayer C";
    
    originalConnName = "Arrow AnaLayer B to Layer C";

    channelCode = 1;    

    writeStep = -1;    
    writeCompressedWeights = false;

    delay = 0;          
};

TransposeConn "Arrow CataLayer C to Layer B" = {
    preLayerName = "Arrow CataLayer C";
    postLayerName = "Layer B";

    originalConnName = "Arrow AnaLayer B to Layer C";

    channelCode = 2;    
    
    writeStep = -1;    
    writeCompressedWeights = false;

    delay = 0;   
};

CloneKernelConn "Layer C to Flat AnaLayer B" = {
    preLayerName = "Layer C";
    postLayerName = "Flat AnaLayer B";

    originalConnName = "Arrow CataLayer C to Layer B";

    channelCode = 1;    
    
    writeStep = -1;    
    writeCompressedWeights = false;
};

IdentConn "Layer C to Pooling AnaLayer C" = {
    preLayerName = "Layer C";
    postLayerName = "Pooling AnaLayer C";

    channelCode = 0;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Pooling AnaLayer C to Layer C" = {
    preLayerName = "Pooling AnaLayer C";
    postLayerName = "Layer C";

    channelCode = 1;    

    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;    
};

IdentConn "Layer C to Flat AnaLayer C" = {
    preLayerName = "Layer C";
    postLayerName = "Flat AnaLayer C";

    channelCode = 0;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Layer C to Arrow AnaLayer C" = {
    preLayerName = "Layer C";
    postLayerName = "Arrow AnaLayer C";

    channelCode = 0;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Flat AnaLayer C to Pooling AnaLayer C" = {
    preLayerName = "Flat AnaLayer C";
    postLayerName = "Pooling AnaLayer C";

    channelCode = 1;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Flat AnaLayer C to Arrow AnaLayer C" = {
    preLayerName = "Flat AnaLayer C";
    postLayerName = "Arrow AnaLayer C";

    channelCode = 1;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Layer D to Pooling CataLayer D" = {
    preLayerName = "Layer D";
    postLayerName = "Pooling CataLayer D";

    channelCode = 0;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Pooling CataLayer D to Layer D" = {
    preLayerName = "Pooling CataLayer D";
    postLayerName = "Layer D";

    channelCode = 1;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Layer D to Flat CataLayer D" = {
    preLayerName = "Layer D";
    postLayerName = "Flat CataLayer D";

    channelCode = 0;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Layer D to Arrow CataLayer D" = {
    preLayerName = "Layer D";
    postLayerName = "Arrow CataLayer D";

    channelCode = 0;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Flat CataLayer D to Pooling CataLayer D" = {
    preLayerName = "Flat CataLayer D";
    postLayerName = "Pooling CataLayer D";

    channelCode = 1;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Flat CataLayer D to Arrow CataLayer D" = {
    preLayerName = "Flat CataLayer D";
    postLayerName = "Arrow CataLayer D";

    channelCode = 1;    
    
    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

PoolingGenConn "Arrow AnaLayer C to Layer D" = {
    preLayerName = "Arrow AnaLayer C";
    postLayerName = "Layer D";
    secondaryPreLayerName = "Layer C";
    secondaryPostLayerName = "Arrow CataLayer D";

    channelCode = 2;    
    
    nxp = 3;            
    nyp = 3;            
    nfp = 10;            

    writeStep = 100;    
    writeCompressedWeights = false;

    delay = 0;          
    
    randomFlag = 1;     
    uniformWeights = 1; 
    wMinInit = 0;       
    wMaxInit = 1;       
    normalize = 1;      
    
    symmetrizeWeights = 0; 

    weightUpdatePeriod = 100; 
    relaxation = 1E-2;
    nonnegConstraintFlag = 1; 
    normalizeMethod = 3;
                        
    normalizeConstant = 1; 
};

CloneKernelConn "Layer C to Flat CataLayer D" = {
    preLayerName = "Layer C";
    postLayerName = "Flat CataLayer D";
    
    originalConnName = "Arrow AnaLayer C to Layer D";

    channelCode = 1;    

    writeStep = -1;    
    writeCompressedWeights = false;

    delay = 0;          
};

TransposeConn "Arrow CataLayer D to Layer C" = {
    preLayerName = "Arrow CataLayer D";
    postLayerName = "Layer C";

    originalConnName = "Arrow AnaLayer C to Layer D";

    channelCode = 2;    
    
    writeStep = -1;    
    writeCompressedWeights = false;

    delay = 0;   
};

CloneKernelConn "Layer D to Flat AnaLayer C" = {
    preLayerName = "Layer D";
    postLayerName = "Flat AnaLayer C";

    originalConnName = "Arrow CataLayer D to Layer C";

    channelCode = 1;    
    
    writeStep = -1;    
    writeCompressedWeights = false;
};

IdentConn "Layer A to Energy AnaLayer A" = {
    preLayerName = "Layer A";
    postLayerName = "Energy AnaLayer A";

    channelCode = 0;    

    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Flat AnaLayer A to Energy AnaLayer A" = {
    preLayerName = "Flat AnaLayer A";
    postLayerName = "Energy AnaLayer A";

    channelCode = 1;    

    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Layer B to Energy CataLayer B" = {
    preLayerName = "Layer B";
    postLayerName = "Energy CataLayer B";

    channelCode = 0;    

    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Flat CataLayer B to Energy CataLayer B" = {
    preLayerName = "Flat CataLayer B";
    postLayerName = "Energy CataLayer B";

    channelCode = 1;    

    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Layer B to Energy AnaLayer B" = {
    preLayerName = "Layer B";
    postLayerName = "Energy AnaLayer B";

    channelCode = 0;    

    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Flat AnaLayer B to Energy AnaLayer B" = {
    preLayerName = "Flat AnaLayer B";
    postLayerName = "Energy AnaLayer B";

    channelCode = 1;    

    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Layer C to Energy CataLayer C" = {
    preLayerName = "Layer C";
    postLayerName = "Energy CataLayer C";

    channelCode = 0;    

    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Flat CataLayer C to Energy CataLayer C" = {
    preLayerName = "Flat CataLayer C";
    postLayerName = "Energy CataLayer C";

    channelCode = 1;    

    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Layer C to Energy AnaLayer C" = {
    preLayerName = "Layer C";
    postLayerName = "Energy AnaLayer C";

    channelCode = 0;    

    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Flat AnaLayer C to Energy AnaLayer C" = {
    preLayerName = "Flat AnaLayer C";
    postLayerName = "Energy AnaLayer C";

    channelCode = 1;    

    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Layer D to Energy CataLayer D" = {
    preLayerName = "Layer D";
    postLayerName = "Energy CataLayer D";

    channelCode = 0;    

    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

IdentConn "Flat CataLayer D to Energy CataLayer D" = {
    preLayerName = "Flat CataLayer D";
    postLayerName = "Energy CataLayer D";

    channelCode = 1;    

    writeStep = -1;    
    writeCompressedWeights = true;

    delay = 0;          
};

GenColProbe "Total Energy Probe" = {
    probeOutputFile = "TotalEnergy.txt";
};

L2NormProbe "AnaRetina Energy" = {
    targetLayer = "AnaRetina";
    parentGenColProbe = "Total Energy Probe";
    coeff = 1;
    probeOutputFile = "AnaRetina_Energy.txt";
};

L2NormProbe "AnaLayer A Energy" = {
    targetLayer = "Energy AnaLayer A";
    parentGenColProbe = "Total Energy Probe";
    coeff = 0.5;
    probeOutputFile = "AnaLayer_A_Energy.txt";
};

L2NormProbe "CataLayer B Energy" = {
    targetLayer = "Energy CataLayer B";
    parentGenColProbe = "Total Energy Probe";
    coeff = 0.5;
    probeOutputFile = "CataLayer_B_Energy.txt";
};

L2NormProbe "AnaLayer B Energy" = {
    targetLayer = "Energy AnaLayer B";
    parentGenColProbe = "Total Energy Probe";
    coeff = 0.5;
    probeOutputFile = "AnaLayer_B_Energy.txt";
};

L2NormProbe "CataLayer C Energy" = {
    targetLayer = "Energy CataLayer C";
    parentGenColProbe = "Total Energy Probe";
    coeff = 0.5;
    probeOutputFile = "CataLayer_C_Energy.txt";
};

L2NormProbe "AnaLayer C Energy" = {
    targetLayer = "Energy AnaLayer C";
    parentGenColProbe = "Total Energy Probe";
    coeff = 0.5;
    probeOutputFile = "AnaLayer_C_Energy.txt";
};

L2NormProbe "CataLayer D Energy" = {
    targetLayer = "Energy CataLayer D";
    parentGenColProbe = "Total Energy Probe";
    coeff = 0.5;
    probeOutputFile = "CataLayer_D_Energy.txt";
};

LogLatWTAProbe "Layer A Lateral Competition Penalty" = {
    targetLayer = "Layer A";
    parentGenColProbe = "Total Energy Probe";
    coeff = 1.0;
    probeOutputFile = "Layer_A_LatCompPenalty.txt";
};

LogLatWTAProbe "Layer B Lateral Competition Penalty" = {
    targetLayer = "Layer B";
    parentGenColProbe = "Total Energy Probe";
    coeff = 1.0;
    probeOutputFile = "Layer_B_LatCompPenalty.txt";
};

LogLatWTAProbe "Layer C Lateral Competition Penalty" = {
    targetLayer = "Layer C";
    parentGenColProbe = "Total Energy Probe";
    coeff = 1.0;
    probeOutputFile = "Layer_C_LatCompPenalty.txt";
};

LogLatWTAProbe "Layer D Lateral Competition Penalty" = {
    targetLayer = "Layer D";
    parentGenColProbe = "Total Energy Probe";
    coeff = 1.0;
    probeOutputFile = "Layer_D_LatCompPenalty.txt";
};
