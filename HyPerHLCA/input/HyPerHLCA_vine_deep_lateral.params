// // HyPerHLCA.params
//
// created by peteschultz: Sept 27, 2012, modified garkenyon, 1/20/13
//
//
// Implements the locally competitive algorithm described in
// Rozell et al., "Sparse Coding via Thresholding and Local Cometition
// in Neural Circuits," Neural Computation 20, 2526-2563 (2008).
///////////////////////////

debugParsing = true;

HyPerCol "column" = {
    nx = 480;  // vine value
    ny = 480;
    dt = 1.0;
    randomSeed = 1234567890;  // Must be at least 8 digits long.  // if not set here,  clock time is used to generate seed
    startTime = 0;
    numSteps = 46584000; // 116460 frames * 40 steps per frame * 10
    progressStep = 1000;
    outputPath = "/nh/compneuro/Data/vine/LCA/2013_01_24_2013_02_01/output_2013_01_24_2013_02_01_12x12x128_3x3_9x9x128_lambda_05X1_deep_lateral";
    filenamesContainLayerNames = true;
    filenamesContainConnectionNames = true;
    checkpointRead = false;
    checkpointReadDir = "/nh/compneuro/Data/vine/LCA/2013_01_24_2013_02_01/output_2013_01_24_2013_02_01_12x12x128_3x3_9x9x256_lambda_05X1_deep_lateral/Checkpoints";
    checkpointReadDirIndex = 8039600; //
    checkpointWrite = true;
    checkpointWriteDir = "/nh/compneuro/Data/vine/LCA/2013_01_24_2013_02_01/output_2013_01_24_2013_02_01_12x12x128_3x3_9x9x256_lambda_05X1_deep_lateral/Checkpoints";
    checkpointWriteStepInterval = 100000;
    deleteOlderCheckpoints = false;
    //suppressLastOutput = false;
    writeProgressToErr = true;
    outputNamesOfLayersAndConns = "LayerAndConnNames.txt";
};

//
// layers
//

Movie "Image" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    imageListPath = "/nh/compneuro/Data/vine/list/2013_01_24_2013_02_01/fileList_2013_01_24_2013_02_01.txt";
    nf = 3;
    writeStep = 2000.0;
    initialWriteTime = 1999.0;
    writeSparseActivity = false;
    displayPeriod = 40;
    start_frame_index = 1;
    skip_frame_index = 1;
    echoFramePathnameFlag = true;
    mirrorBCflag = true;
    jitterFlag = 0;
    useImageBCflag = false;
    inverseFlag = false;
    normalizeLuminanceFlag = true;
    writeImages = false;
    offsetX = 0;
    offsetY = 0;
    randomMovie = 0;
    autoResizeFlag = false;
    readPvpFile = false;
    phase = 0;
    //useParamsImage = true;
};

//Retina "Retina" = {
//    restart = 0;
//    nxScale = 1;
//    nyScale = 1;
//    nf = 3;
//    writeStep = 2000.0;
//    initialWriteTime = 1999.0;
//    mirrorBCflag = 1;
//    spikingFlag = 0;
//    writeSparseActivity = 0;
//
//    foregroundRate = 1000;
//    backgroundRate = 0;
//    burstFreq = 1;
//    burstDuration = 1000;
//
//    beginStim = 0;
//    endStim = 1000000000;
//    
//    phase = 1;
//};


ANNTriggerUpdateOnNewImageLayer "Bipolar" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 3;
    writeStep = 2000.0;
    initialWriteTime = 1999.0;
    mirrorBCflag = 1;
    writeSparseActivity = 0;

    movieLayerName = "Image";
    InitVType = "ZeroV";

    VThresh = -infinity;
    VMax = infinity;
    VMin = -infinity;
    VShift = 0;
    
    phase = 1;
};

ANNTriggerUpdateOnNewImageLayer "Ganglion" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 3;
    writeStep = 2000.0;
    initialWriteTime = 2039.0;
    mirrorBCflag = 1;
    writeSparseActivity = 0;
    //
    movieLayerName = "Image";
    InitVType = "ZeroV";
    //
    VThresh = -infinity;
    VMax = infinity;
    VMin = -infinity;
    VShift = 0;
    // 
    phase = 2;
};

ANNErrorLayer "LGN" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 3;
    initialWriteTime = 1999.0;
    writeStep = 2000;
    mirrorBCflag = 0;
    valueBC = 0;
    writeSparseActivity = 0;
    //
    InitVType = "ZeroV";
    //InitVType = "InitVFromFile";
    //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output/Checkpoints/Checkpoint6000000/Error_V.pvp";
    //
    VThresh = 0.005;
    VMax =  infinity;
    VMin = 0;
    VShift = 0;
    //
    phase = 3;  
};



//  V1  ///

HyPerLCALayer "S1" = {
    restart = 0;
    nxScale = 0.25;
    nyScale = 0.25;
    nf = 128; //256;
    numChannels = 1; // should be 1
    numWindowX = 1;
    numWindowY = 1;
    initialWriteTime = 39.0;
    writeStep = 40.0;
    mirrorBCflag = 0;
    valueBC = 0;
    writeSparseActivity = 1;
    //
    //InitVType = "UniformRandomV";
    //minV = -1.0;
    //maxV = .15; //0.05 above VThresh
    InitVType = "InitVFromFile";
    Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_30/output_2013_01_30_12x12x128_3x3_9x9x256_lambda_05X1_lateral/Checkpoints/Checkpoint8039600/V1_V.pvp";
    // 
    timeConstantTau = 200.0;
    timeConstantTauMinimum = 10.0;
    slopeErrorStd = 0.01;
    // 
    VThresh = 0.05; //  // 0.05 works for animalDB
    VMax = infinity;
    VMin = 0;
    VShift = 0.025;  // 0 -> hard threshold, 1 -> soft threshold
    //
    phase = 4;
};

// use for intra-column connections
ANNErrorLayer "C1ErrorLocal" = {
    restart = 0;
    nxScale = 0.25;
    nyScale = 0.25;
    nf = 128;
    initialWriteTime = 9999.0;
    writeStep = 10000;
    mirrorBCflag = 0;
    valueBC = 0;
    writeSparseActivity = 0;
    //
    InitVType = "ZeroV";
    //InitVType = "InitVFromFile";
    //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output/Checkpoints/Checkpoint6000000/Error_V.pvp";
    //
    VThresh = 0.005;
    VMax =  infinity;
    VMin =  0;
    VShift = 0;
    //
    phase = 5;  
};

// long-range lateral interactions
ANNErrorLayer "C1ErrorLateral" = {
    restart = 0;
    nxScale = 0.25;
    nyScale = 0.25;
    nf = 128;
    initialWriteTime = 9999.0;
    writeStep = 10000;
    mirrorBCflag = 0;
    valueBC = 0;
    writeSparseActivity = 0;
    //
    InitVType = "ZeroV";
    //InitVType = "InitVFromFile";
    //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output/Checkpoints/Checkpoint6000000/Error_V.pvp";
    //
    VThresh = 0.005;
    VMax =  infinity;
    VMin = 0;
    VShift = 0;
    //
    phase = 5;  
};

// V1 layers II-III (complex cells with lateral interactions)
HyPerLCALayer "C1" = {
    restart = 0;
    nxScale = 0.25;
    nyScale = 0.25;
    nf = 128; //256;
    numChannels = 1;  // should be 1
    numWindowX = 1;
    numWindowY = 1;
    // 
    initialWriteTime = 39.0;
    writeStep = 40.0;
    mirrorBCflag = 0;
    writeSparseActivity = 1;
    //
    //InitVType = "UniformRandomV";
    //minV = -1.0;
    //maxV = .15; //0.05 above VThresh
    InitVType = "InitVFromFile";
    Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_30/output_2013_01_30_12x12x128_3x3_9x9x128_lambda_05X1_lateral/Checkpoints/Checkpoint8039600/V1_V.pvp";
    // 
    timeConstantTau = 200.0;
    timeConstantTauMinimum = 10.0;
    slopeErrorStd = 0.01;
    // 
    VThresh = 0.05; //0.05;
    VMax = infinity;
    VMin = 0;
    VShift = 0.025;  // 0 -> hard threshold, 1 -> soft threshold
    //
    phase = 6;
};


// HyPerComplex "H-cell" layer: reconstructions from intra column interactions
ANNLayer "H1Local" = {
    restart = 0;
    nxScale = 0.25;
    nyScale = 0.25;
    nf = 128;
    initialWriteTime = 9999.0;
    writeStep = 10000.0;
    mirrorBCflag = 0;
    valueBC = 0;
    writeSparseActivity = 0;
    //
    //movieLayerName = "Image";
    InitVType = "ZeroV";
    //InitVType = "InitVFromFile";
    //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output/Checkpoints/Checkpoint6000000/Recon_V.pvp";
    //
    VThresh = 0.005; // using V1's VThresh might be unstable, trying Error1_2 thresh
    VMax = infinity;     // prevent reconstruction from exceeding reasonable bounds
    VMin = 0.0; // use V1's VMin
    VShift = 0;
    // 
    phase = 7; // should be less than Recon2 phase
};

//HyPerComplex "H-cell" layer: reconstructions from long-range lateral interactions
ANNTLayer "H1Lateral" = {
    restart = 0;
    nxScale = 0.25;
    nyScale = 0.25;
    nf = 128;
    initialWriteTime = 2039.0;
    writeStep = 2000.0;
    mirrorBCflag = 0;
    valueBC = 0;
    writeSparseActivity = 0;
    //
    movieLayerName = "Image";
    InitVType = "ZeroV";
    //InitVType = "InitVFromFile";
    //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output/Checkpoints/Checkpoint6000000/Recon_V.pvp";
    //
    VThresh = 0.005; // using V1's VThresh might be unstable, trying Error1_2 thresh
    VMax = infinity;     // prevent reconstruction from exceeding reasonable bounds
    VMin = 0.0; // use V1's VMin
    VShift = 0;
    // 
    phase = 7; // should be less than Recon2 phase
};


// Thalamic layer for V2
ANNLayer "V2Pulvinar" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 3;
    initialWriteTime = 2039.0;
    writeStep = 2000.0;
    mirrorBCflag = 0;
    valueBC = 0;
    writeSparseActivity = 0;
    //
    //movieLayerName = "Image";
    InitVType = "ZeroV";
    //InitVType = "InitVFromFile";
    //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output/Checkpoints/Checkpoint6000000/Recon_V.pvp";
    //
    VThresh = -infinity;
    VMax = infinity;     // prevent reconstruction from exceeding reasonable bounds
    VMin = -infinity; 
    VShift = 0;
    // 
    phase = 8; 
};




//  V2 //


HyPerLCALayer "S2" = {
    restart = 0;
    nxScale = 0.125;
    nyScale = 0.125;
    nf = 256;
    numChannels = 1; // should be 1
    numWindowX = 1;
    numWindowY = 1;
    initialWriteTime = 39.0;
    writeStep = 40.0;
    mirrorBCflag = 0;
    valueBC = 0;
    writeSparseActivity = 1;
    //
    InitVType = "UniformRandomV";
    minV = -1.0;
    maxV = .15; //0.05 above VThresh
    //InitVType = "InitVFromFile";
    //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output_2013_01_31_12x12x128_3x3_9x9x256_lambda_05X1_lateral/Checkpoints/Checkpoint8039600/V1_V.pvp";
    // 
    timeConstantTau = 200.0;
    timeConstantTauMinimum = 10.0;
    slopeErrorStd = 0.01;
    // 
    VThresh = 0.05; //  // 0.05 works for animalDB
    VMax = infinity;
    VMin = 0;
    VShift = 0.025;  // 0 -> hard threshold, 1 -> soft threshold
    //
    phase = 9;
};

// use for intra-column connections
ANNErrorLayer "C2ErrorLocal" = {
    restart = 0;
    nxScale = 0.125;
    nyScale = 0.125;
    nf = 256;
    initialWriteTime = 9999.0;
    writeStep = 10000;
    mirrorBCflag = 0;
    valueBC = 0;
    writeSparseActivity = 0;
    //
    InitVType = "ZeroV";
    //InitVType = "InitVFromFile";
    //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output/Checkpoints/Checkpoint6000000/Error_V.pvp";
    //
    VThresh = 0.005;
    VMax =  infinity;
    VMin =  0;
    VShift = 0;
    //
    phase = 10;  
};

// long-range lateral interactions
ANNErrorLayer "C2ErrorLateral" = {
    restart = 0;
    nxScale = 0.125;
    nyScale = 0.125;
    nf = 256;
    initialWriteTime = 9999.0;
    writeStep = 10000;
    mirrorBCflag = 0;
    valueBC = 0;
    writeSparseActivity = 0;
    //
    InitVType = "ZeroV";
    //InitVType = "InitVFromFile";
    //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output/Checkpoints/Checkpoint6000000/Error_V.pvp";
    //
    VThresh = 0.005;
    VMax =  infinity;
    VMin = 0;
    VShift = 0;
    //
    phase = 10;  
};

// V2 layers II-III (complex cells with lateral interactions)
HyPerLCALayer "C2" = {
    restart = 0;
    nxScale = 0.125;
    nyScale = 0.125;
    nf = 256;
    numChannels = 1;  // should be 1
    numWindowX = 1;
    numWindowY = 1;
    // 
    initialWriteTime = 39.0;
    writeStep = 40.0;
    mirrorBCflag = 0;
    writeSparseActivity = 1;
    //
    //InitVType = "UniformRandomV";
    //minV = -1.0;
    //maxV = .15; //0.05 above VThresh
    InitVType = "InitVFromFile";
    Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output_2013_01_31_12x12x128_3x3_9x9x128_lambda_05X1_lateral/Checkpoints/Checkpoint8039600/V1_V.pvp";
    // 
    timeConstantTau = 200.0;
    timeConstantTauMinimum = 10.0;
    slopeErrorStd = 0.01;
    // 
    VThresh = 0.05; //0.05;
    VMax = infinity;
    VMin = 0;
    VShift = 0.025;  // 0 -> hard threshold, 1 -> soft threshold
    //
    phase = 11;
};


// HyPerComplex "H-cell" layer: reconstructions from intra column interactions
ANNLayer "H2Local" = {
    restart = 0;
    nxScale = 0.125;
    nyScale = 0.125;
    nf = 256;
    initialWriteTime = 9999.0;
    writeStep = 10000.0;
    mirrorBCflag = 0;
    valueBC = 0;
    writeSparseActivity = 0;
    //
    //movieLayerName = "Image";
    InitVType = "ZeroV";
    //InitVType = "InitVFromFile";
    //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output/Checkpoints/Checkpoint6000000/Recon_V.pvp";
    //
    VThresh = 0.005; // using V1's VThresh might be unstable, trying Error1_2 thresh
    VMax = infinity;     // prevent reconstruction from exceeding reasonable bounds
    VMin = 0.0; // use V1's VMin
    VShift = 0;
    // 
    phase = 12; // should be less than Recon2 phase
};

//HyPerComplex "H-cell" layer: reconstructions from long-range lateral interactions
ANNTLayer "H2Lateral" = {
    restart = 0;
    nxScale = 0.125;
    nyScale = 0.125;
    nf = 256;
    initialWriteTime = 2039.0;
    writeStep = 2000.0;
    mirrorBCflag = 0;
    valueBC = 0;
    writeSparseActivity = 0;
    //
    movieLayerName = "Image";
    InitVType = "ZeroV";
    //InitVType = "InitVFromFile";
    //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output/Checkpoints/Checkpoint6000000/Recon_V.pvp";
    //
    VThresh = 0.005; // using V1's VThresh might be unstable, trying Error1_2 thresh
    VMax = infinity;     // prevent reconstruction from exceeding reasonable bounds
    VMin = 0.0; // use V1's VMin
    VShift = 0;
    // 
    phase = 12; // should be less than Recon2 phase
};

// Thalamic layer for V4
ANNTriggerUpdateOnNewImageLayer "V4Pulvinar" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 3;
    initialWriteTime = 2039.0;
    writeStep = 2000.0;
    mirrorBCflag = 0;
    valueBC = 0;
    writeSparseActivity = 0;
    //
    movieLayerName = "Image";
    InitVType = "ZeroV";
    //InitVType = "InitVFromFile";
    //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output/Checkpoints/Checkpoint6000000/Recon_V.pvp";
    //
    VThresh = -infinity;
    VMax = infinity;     // prevent reconstruction from exceeding reasonable bounds
    VMin = -infinity; 
    VShift = 0;
    // 
    phase = 13; 
};





// connections


KernelConn "ImageToBipolarCenter" = {
    preLayerName = "Image";
    postLayerName = "Bipolar";
    channelCode = 0;
    nxp = 3; 
    nyp = 3; 
    nfp = 3;
    numAxonalArbors = 1;
    initFromLastFlag = 0;  // 1;  // restart
    writeStep = -1;
    writeCompressedCheckpoints = false;
    
    weightInitType = "Gauss2DWeight";
    aspect = 1;
    sigma = 0.5;
    rMax  = 3;
    rMin = 0;
    numOrientationsPre = 1;
    numOrientationsPost = 1;
        
    strength = 1.0;  
    normalizeMethod = "normalizeSum";
    minSumTolerated = 0;
    normalizeArborsIndividually = 0;
    normalize_cutoff = 0.0;
    normalizeFromPostPerspective = true;
    symmetrizeWeights = false;
    
    shrinkPatches = false;
    //writeCompressedWeights = 0.0;
    plasticityFlag = 0;
    pvpatchAccumulateType = "convolve";
    updateGSynFromPostPerspective = false;     
     
    delay = 0;
     
    preActivityIsNotRate = false;
    selfFlag = false;
    shmget_flag = false;
};


KernelConn "BipolarToGanglionCenter" = {
    preLayerName = "Bipolar";
    postLayerName = "Ganglion";
    channelCode = 0;
    nxp = 1; 
    nyp = 1; 
    nfp = 3;
    numAxonalArbors = 1;
    initFromLastFlag = 0;  // 1;  // restart
    writeStep = -1;
    writeCompressedCheckpoints = false;
    
    weightInitType = "Gauss2DWeight";
    aspect = 1;
    sigma = 1;
    rMax  = 3;
    rMin = 0;
    numOrientationsPre = 1;
    numOrientationsPost = 1;
        
    strength = 1.0;  
    normalizeMethod = "normalizeSum";
    minSumTolerated = 0;
    normalizeArborsIndividually = 0;
    normalize_cutoff = 0.0;
    normalizeFromPostPerspective = true;
    symmetrizeWeights = false;
    
    shrinkPatches = false;
    //writeCompressedWeights = 0.0;
    plasticityFlag = 0;
    pvpatchAccumulateType = "convolve";
    updateGSynFromPostPerspective = false;     
     
    delay = 0;
     
    preActivityIsNotRate = false;
    selfFlag = false;
    shmget_flag = false;
};


KernelConn "BipolarToGanglionSurround" = {
    preLayerName = "Bipolar";
    postLayerName = "Ganglion";
    channelCode = 1;
    nxp = 11; 
    nyp = 11; 
    nfp = 3;
    numAxonalArbors = 1;
    initFromLastFlag = 0;  // 1;  // restart
    writeStep = -1;
    writeCompressedCheckpoints = false;
    
    weightInitType = "Gauss2DWeight";
    aspect = 1;
    sigma = 5.5;
    rMax  = 7.5;
    rMin = 0.5;
    numOrientationsPre = 1;
    numOrientationsPost = 1;
               
    strength = 1.0;  
    normalizeMethod = "normalizeSum";
    minSumTolerated = 0;
    normalizeArborsIndividually = 0;
    normalize_cutoff = 0.0;
    normalizeFromPostPerspective = true;
    symmetrizeWeights = false;
    
    shrinkPatches = false;
    //writeCompressedWeights = 0.0;
    plasticityFlag = 0;
    pvpatchAccumulateType = "convolve";
    updateGSynFromPostPerspective = false;     
     
    delay = 0;
     
    preActivityIsNotRate = false;
    selfFlag = false;
    shmget_flag = false;
};


IdentConn "GanglionToLGN" = {
    preLayerName = "Ganglion";
    postLayerName = "LGN";
    channelCode = 0;
    delay = 0;
    writeStep = -1;
};


KernelConn "H1ToLGN" = {
    preLayerName = "H1";
    postLayerName = "LGN";
    channelCode = 1;
    nxp = 12;
    nyp = 12;
    nfp = 3;
    numAxonalArbors = 1;
    initFromLastFlag = 0;
    //
    weightInitType = "FileWeight";
    initWeightsFile = "/nh/compneuro/Data/vine/LCA/2013_01_31/output_2013_01_31_12x12x128_3x3_9x9x256_lambda_05X1_lateral/Checkpoints/Checkpoint8039600/V1ToError_W.pvp";
    //weightInitType = "UniformRandomWeight";
    //wMinInit = -1.0;
    //wMaxInit = 1.0;
    //sparseFraction = .90;
    //
    strength = 1.0;  
    normalizeMethod = "normalizeL2";
    minL2NormTolerated = 0;
    normalizeArborsIndividually = 0;
    normalize_cutoff = 0.0;
    normalizeFromPostPerspective = false;
    symmetrizeWeights = false;
    //
    preActivityIsNotRate = false;  // should help make response more indepenent of time step size dt
    keepKernelsSynchronized = true; 
    combine_dW_with_W_flag = false; 
    //
    writeStep = 1000000;
    writeCompressedWeights = false;
    writeCompressedCheckpoints = false;
    plasticityFlag = true;
    weightUpdatePeriod = 200.0;
    initialWeightUpdateTime = 199.0;
    initialWriteTime = 0.0;
    dWMax = 5; //2.0; 
    selfFlag = false;
    shmget_flag = false;
    //
    delay = 0;
    //
    pvpatchAccumulateType = "convolve";
    updateGSynFromPostPerspective = false;     
    shrinkPatches = false;
};


TransposeConn "LGNToS1" = {
  preLayerName = "LGN";
  postLayerName = "S1";
  channelCode = 0;
  originalConnName = "H1ToLGN";
  selfFlag = false;
  preActivityIsNotRate = false;  // should help make response more indepenent of time step size dt
  writeStep = -1;
  writeCompressedCheckpoints = false;
  shmget_flag = false;
  delay = 0;
  pvpatchAccumulateType = "convolve";
  updateGSynFromPostPerspective = false;     
};




// for learning intra-column connections (bottom-up input)
IdentConn "S1ToC1ErrorLocal" = {
  preLayerName = "S1";
  postLayerName = "C1ErrorLocal";
  channelCode = 0;
  delay = 0;
  writeStep = -1;
};

// for learning intra-column connections (top-down input)
KernelConn "C1ToC1ErrorLocal" = {
    preLayerName = "C1";
    postLayerName = "C1ErrorLocal";
    channelCode = 1;
    nxp = 1;
    nyp = 1;
    nfp = 128;
    numAxonalArbors = 1;
    initFromLastFlag = 0;
    //
    weightInitType = "FileWeight";
    initWeightsFile = "/nh/compneuro/Data/vine/LCA/2013_01_31/output_2013_01_31_12x12x128_3x3_9x9x256_lambda_05X1_lateral/Checkpoints/Checkpoint8039600/C1ToError2_W.pvp";
    //weightInitType = "UniformRandomWeight";
    //wMinInit = -1.0;
    //wMaxInit = 1.0;
    //sparseFraction = .90;
    //
    strength = 0.70711; //0.5;  
    normalizeMethod = "normalizeL2";
    minL2NormTolerated = 0;
    normalizeArborsIndividually = 0;
    normalize_cutoff = 0.0;
    normalizeFromPostPerspective = false;
    symmetrizeWeights = false;
    //
    preActivityIsNotRate = false;  // should help make response more indepenent of time step size dt
    keepKernelsSynchronized = true; 
    combine_dW_with_W_flag = false; 
    //
    writeStep = 1000000;
    writeCompressedWeights = false;
    writeCompressedCheckpoints = false;
    plasticityFlag = true;
    weightUpdatePeriod = 200.0;
    initialWeightUpdateTime = 199.0;
    initialWriteTime = 0.0;
    dWMax = 5.0; //0.25; 
    selfFlag = false;
    shmget_flag = false;
    //
    delay = 0;
    //
    pvpatchAccumulateType = "convolve";
    updateGSynFromPostPerspective = false;     
    shrinkPatches = false;
};

TransposeConn "C1ErrorLocalToC1" = {
    preLayerName = "C1ErrorLocal";
    postLayerName = "C1";
    channelCode = 0;
    originalConnName = "C1ToC1ErrorLocal";
    selfFlag = false;
    preActivityIsNotRate = false;  // should help make response more indepenent of time step size dt	
    writeStep = -1;
    writeCompressedCheckpoints = false;
    shmget_flag = false;
    delay = 0;
    pvpatchAccumulateType = "convolve";
    updateGSynFromPostPerspective = false;     
};


CloneKernelConn "C1ToH1Local" = {
   preLayerName = "C1";
   postLayerName = "H1Local";
   channelCode = 0;
   writeStep = -1;
   writeCompressedCheckpoints = false;
   originalConnName = "C1ToC1ErrorLocal";
   selfFlag = false;
   pvpatchAccumulateType = "convolve";
   updateGSynFromPostPerspective = false;     
   delay = 0;
   preActivityIsNotRate = false;
};


// lateral connections

// bottom-up 
IdentConn "S1ToC1ErrorLateral" = {
    preLayerName = "S1";
    postLayerName = "C1ErrorLateral";
    channelCode = 0;
    delay = 0;
    writeStep = -1;
};

// long-range lateral
KernelConn "C1ToC1ErrorLateral" = {
    preLayerName = "C1";
    postLayerName = "C1ErrorLateral";
    channelCode = 1;
    nxp =  9;
    nyp =  9;
    rMinX = 0.75; //1.5; // zero intra-column connections
    rMinY = 0.75; //1.5;
    nfp = 128;
    numAxonalArbors = 1;
    initFromLastFlag = 0;
    //
    weightInitType = "FileWeight";
    initWeightsFile = "/nh/compneuro/Data/vine/LCA/2013_01_31/output_2013_01_31_12x12x128_3x3_9x9x256_lambda_05X1_lateral/Checkpoints/Checkpoint8039600/C1ToError1_2_W.pvp";
    //weightInitType = "UniformRandomWeight";
    //wMinInit = -1.0;
    //wMaxInit = 1.0;
    //sparseFraction = .90;
    //
    strength = 0.70711; //0.5;  
    normalizeMethod = "normalizeL2";
    minL2NormTolerated = 0;
    normalizeArborsIndividually = 0;
    normalize_cutoff = 0.0;
    normalizeFromPostPerspective = false;
    symmetrizeWeights = false;
    //
    preActivityIsNotRate = false;  // should help make response more indepenent of time step size dt
    keepKernelsSynchronized = true; 
    combine_dW_with_W_flag = false; 
    //
    writeStep = 100000;
    writeCompressedWeights = false;
    writeCompressedCheckpoints = false;
    plasticityFlag = true;
    weightUpdatePeriod = 200.0;
    initialWeightUpdateTime = 199.0;
    initialWriteTime = 0.0;
    dWMax = 5.0; //0.25; 
    selfFlag = false;
    shmget_flag = false;
    //
    delay = 0;
    //
    pvpatchAccumulateType = "convolve";
    updateGSynFromPostPerspective = false;     
    shrinkPatches = false;
};

TransposeConn "Error1_2ToC1" = {
    preLayerName = "Error1_2";
    postLayerName = "C1";
    channelCode = 0;
    originalConnName = "C1ToError1_2";
    selfFlag = false;
    preActivityIsNotRate = false;  // should help make response more indepenent of time step size dt
    writeStep = -1;
    writeCompressedCheckpoints = false;
    shmget_flag = false;
    delay = 0;
    pvpatchAccumulateType = "convolve";
    updateGSynFromPostPerspective = false;     
};


CloneKernelConn "C1ToS1Infra" = {
    preLayerName = "C1";
    postLayerName = "S1Infra";
    channelCode = 0;
    writeStep = -1;
    writeCompressedCheckpoints = false;
    originalConnName = "C1ToError1_2"; //"C1ToS1";  //
    //writeCompressedWeights = 0.0;
    selfFlag = false;
    pvpatchAccumulateType = "convolve";
    updateGSynFromPostPerspective = false;     
    delay = 0;
    preActivityIsNotRate = false;
};


CloneKernelConn "S1InfraToReconInfra" = {
    preLayerName = "S1Infra";
    postLayerName = "ReconInfra";
    channelCode = 0;
    writeStep = -1;
    writeCompressedCheckpoints = false;
    originalConnName = "S1ToError";
    //writeCompressedWeights = 0.0;
    selfFlag = false;
    pvpatchAccumulateType = "convolve";
    updateGSynFromPostPerspective = false;     
    delay = 0;
    preActivityIsNotRate = false;
};





// Probes

//StatsProbe "ImageStats" = {
//    targetLayer = "Image";
//};
//
//StatsProbe "GanglionStats" = {
//    targetLayer = "Ganglion";
//};
//
//StatsProbe "ReconStats" = {
//    targetLayer = "Recon";
//};
//
//StatsProbe "ErrorStats" = {
//    targetLayer = "Error";
//};
//
//StatsProbe "S1Stats" = {
//    targetLayer = "S1";
//};
//
//StatsProbe "ImageStatsFile" = {
//    targetLayer = "Image";
//    probeOutputFile = "Image_Stats.txt";
//};
//
//StatsProbe "GanglionStatsFile" = {
//    targetLayer = "Ganglion";
//    probeOutputFile = "Ganglion_Stats.txt";
//};
//
//StatsProbe "ErrorStatsFile" = {
//    targetLayer = "Error";
//    probeOutputFile = "Error_Stats.txt";
//};
//
//StatsProbe "S1StatsFile" = {
//    targetLayer = "S1";
//    probeOutputFile = "S1_Stats.txt";
//};
//
//StatsProbe "ReconStatsFile" = {
//    targetLayer = "Recon";
//    probeOutputFile = "Recon_Stats.txt";
//};
//
//StatsProbe "Error2StatsFile" = {
//    targetLayer = "Error2";
//    probeOutputFile = "Error2_Stats.txt";
//};
//
//StatsProbe "Error1_2StatsFile" = {
//    targetLayer = "Error1_2";
//    probeOutputFile = "Error1_2_Stats.txt";
//};
//
//StatsProbe "C1StatsFile" = {
//    targetLayer = "C1";
//    probeOutputFile = "C1_Stats.txt";
//};
//
//StatsProbe "Recon2StatsFile" = {
//    targetLayer = "Recon2";
//    probeOutputFile = "Recon2_Stats.txt";
//};
//
//StatsProbe "S1IntraStatsFile" = {
//    targetLayer = "S1Intra";
//    probeOutputFile = "S1Intra_Stats.txt";
//};
//
//StatsProbe "ReconInfraStatsFile" = {
//    targetLayer = "ReconInfra";
//    probeOutputFile = "ReconInfra_Stats.txt";
//};
//
//StatsProbe "S1InfraStatsFile" = {
//    targetLayer = "S1Infra";
//    probeOutputFile = "S1Infra_Stats.txt";
//};



