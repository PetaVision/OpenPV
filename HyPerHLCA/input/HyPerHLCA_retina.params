// // HyPerHLCA_retina.params
//
// Modified version of HyPerHLCA_vine_color_deep.params
// -Wesley Chavez
//
// Added Ganglion ON/OFF, Error ON/OFF, Recon ON/OFF layers, and excluded a few layers.
///////////////////////////

debugParsing = true;

HyPerCol "column" = {
    nx = 240;  // vine value
    ny = 240;
    dt = 1.0;
    randomSeed = 1234567890;  // Must be at least 8 digits long.  // if not set here,  clock time is used to generate seed
    numSteps = 322000; // 14005200; //8039600;// 4019800; //2009900;       // Depends on number of VINE video frames
    progressStep = 100;
    outputPath = "/nh/compneuro/Data/vine/LCA/2013_09_11/output_retina";
    filenamesContainLayerNames = true;
    filenamesContainConnectionNames = true;
    checkpointRead = false;
    //checkpointReadDir = "/nh/compneuro/Data/vine/LCA/2013_01_31/output_12x12x128_lambda_05X2_color_deep/Checkpoints";
    //checkpointReadDirIndex = 14005200; //12639600; //8039600;
    checkpointWrite = true;
    checkpointWriteDir = "/nh/compneuro/Data/vine/LCA/2013_09_11/output_retina/Checkpoints";
    checkpointWriteStepInterval = 50000;
    deleteOlderCheckpoints = false;
    //suppressLastOutput = false;
    writeProgressToErr = true;
    outputNamesOfLayersAndConns = "LayerAndConnNames.txt";
};

//
// layers
//

Movie "ImageON" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    imageListPath = "/nh/compneuro/Data/vine/list/2013_09_11/frame_filenamesON.txt";
    nf = 1;
    writeStep = -1;
    writeSparseActivity = false;
    displayPeriod = 1000;
    start_frame_index = 1;
    skip_frame_index = 1;
    echoFramePathnameFlag = true;
    mirrorBCflag = true;
    jitterFlag = 0;
    useImageBCflag = false;
    inverseFlag = false;
    normalizeLuminanceFlag = false;
    writeImages = false;
    offsetX = 0;
    offsetY = 0;
    randomMovie = 0;
    autoResizeFlag = true;
    readPvpFile = false;
    phase = 0;
    //useParamsImage = true;
};


Movie "ImageOFF" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    imageListPath = "/nh/compneuro/Data/vine/list/2013_09_11/frame_filenamesOFF.txt";
    nf = 1;
    writeStep = -1;
    writeSparseActivity = false;
    displayPeriod = 1000;
    start_frame_index = 1;
    skip_frame_index = 1;
    echoFramePathnameFlag = true;
    mirrorBCflag = true;
    jitterFlag = 0;
    useImageBCflag = false;
    inverseFlag = false;
    normalizeLuminanceFlag = false;
    writeImages = false;
    offsetX = 0;
    offsetY = 0;
    randomMovie = 0;
    autoResizeFlag = true;
    readPvpFile = false;
    phase = 0;
    //useParamsImage = true;
};


ANNErrorLayer "ErrorON" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 1;
    initialWriteTime = 998.0;
    writeStep = 1000;
    mirrorBCflag = 0;
    writeSparseActivity = 0;
    //
    InitVType = "ZeroV";
    //InitVType = "InitVFromFile";
    //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output/Checkpoints/Checkpoint6000000/Error_V.pvp";
    //
    VThresh = 0.005;
    VMax =  infinity;
    VMin = 0;
    VShift = 0;
    valueBC = 0;
    
    //
    phase = 2;  
};


ANNErrorLayer "ErrorOFF" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 1;
    initialWriteTime = 998.0;
    writeStep = 1000;
    mirrorBCflag = 0;
    writeSparseActivity = 0;
    //
    InitVType = "ZeroV";
    //InitVType = "InitVFromFile";
    //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output/Checkpoints/Checkpoint6000000/Error_V.pvp";
    //
    VThresh = 0.005;
    VMax =  infinity;
    VMin = 0;
    VShift = 0;
    valueBC = 0;
    //
    phase = 2;  
};


HyPerLCALayer "V1" = {
    restart = 0;
    nxScale = 0.25;
    nyScale = 0.25;
    nf = 128; //256;
    numChannels = 1; // should be 1
    initialWriteTime = 998.0;
    writeStep = 1000.0;
    mirrorBCflag = 0;
    writeSparseActivity = 1;
    //
    InitVType = "UniformRandomV";
    minV = -1.0;
    maxV = .15; //0.05 above VThresh
    //InitVType = "InitVFromFile";
    //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output/Checkpoints/Checkpoint6000000/V1_V.pvp";
    // 
    timeConstantTau = 200.0;
    timeConstantTauMinimum = 10.0;
    slopeErrorStd = 0.01;
    // 
    VThresh = 0.1; //  // 0.05 works for animalDB
    VMax = infinity;
    VMin = 0;
    VShift = 0.0;  // 0 -> hard threshold, 1 -> soft threshold
    
    valueBC = 0;
    numWindowX = 1;
    numWindowY = 1;
    
    //
    phase = 3;
};


ANNLayer "ReconON" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 1;
    initialWriteTime = 998.0;
    writeStep = 1000.0;
    mirrorBCflag = 0;
    writeSparseActivity = 0;
    //
    InitVType = "ZeroV";
    //InitVType = "InitVFromFile";
    //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output/Checkpoints/Checkpoint6000000/Recon_V.pvp";
    //
    VThresh = -infinity;
    VMax = infinity;     // prevent reconstruction from exceeding reasonable bounds
    VMin = -infinity; 
    VShift = 0;
    
    valueBC = 0;
    // 
    phase = 4; 
};


ANNLayer "ReconOFF" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 1;
    initialWriteTime = 998.0;
    writeStep = 1000.0;
    mirrorBCflag = 0;
    writeSparseActivity = 0;
    //
    InitVType = "ZeroV";
    //InitVType = "InitVFromFile";
    //Vfilename = "/nh/compneuro/Data/vine/LCA/2013_01_31/output/Checkpoints/Checkpoint6000000/Recon_V.pvp";
    //
    VThresh = -infinity;
    VMax = infinity;     // prevent reconstruction from exceeding reasonable bounds
    VMin = -infinity;
    VShift = 0;
    
    valueBC = 0;
    //
    phase = 4;
};



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////// CONNECTIONS
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////



IdentConn "ImageONToErrorON" = {
    preLayerName = "ImageON";
    postLayerName = "ErrorON";
    channelCode = 0;
    delay = 0;
    writeStep = -1;
};


IdentConn "ImageOFFToErrorOFF" = {
    preLayerName = "ImageOFF";
    postLayerName = "ErrorOFF";
    channelCode = 0;
    delay = 0;
    writeStep = -1;
};


KernelConn "V1ToErrorON" = {
    preLayerName = "V1";
    postLayerName = "ErrorON";
    channelCode = 1;
    nxp = 12;
    nyp = 12;
    nfp = 1;
    numAxonalArbors = 1;
    initFromLastFlag = 0;
    //
    //weightInitType = "FileWeight";
    //initWeightsFile = "/nh/compneuro/Data/vine/LCA/2013_01_31/output/Checkpoints/Checkpoint6000000/V1ToError_W.pvp";
    //ightInitType = "FileWeight";
    //itWeightsFile = "/Users/garkenyon/workspace/HyPerHLCA2/output_animal1200000_color/Checkpoints/Checkpoint1200000/V1ToError_W.pvp";
    weightInitType = "UniformRandomWeight";
    wMinInit = -1.0;
    wMaxInit = 1.0;
    sparseFraction = .90;
    //
    strength = .707;
    normalizeMethod = "normalizeL2";
    minL2NormTolerated = 0;
    normalizeArborsIndividually = 0;
    normalize_cutoff = 0.0;
    normalizeFromPostPerspective = false;
    symmetrizeWeights = false;
    //
    preActivityIsNotRate = false;  // should help make response more indepenent of time step size dt
    keepKernelsSynchronized = true; 
    combine_dW_with_W_flag = false; 
    //
    writeStep = 10000;
    writeCompressedWeights = false;
    writeCompressedCheckpoints = false;
    plasticityFlag = true;
    weightUpdatePeriod = 200.0;
    initialWeightUpdateTime = 199.0;
    initialWriteTime = 0.0;
    dWMax = 5.0; //1.0; 
    selfFlag = false;
    shmget_flag = false;
    //
    delay = 0;
    //
    pvpatchAccumulateType = "convolve";
    shrinkPatches = false;
    
    updateGSynFromPostPerspective = 0;
};


KernelConn "V1ToErrorOFF" = {
    preLayerName = "V1";
    postLayerName = "ErrorOFF";
    channelCode = 1;
    nxp = 12;
    nyp = 12;
    nfp = 1;
    numAxonalArbors = 1;
    initFromLastFlag = 0;
    //
    //weightInitType = "FileWeight";
    //initWeightsFile = "/nh/compneuro/Data/vine/LCA/2013_01_31/output/Checkpoints/Checkpoint6000000/V1ToError_W.pvp";
    //ightInitType = "FileWeight";
    //itWeightsFile = "/Users/garkenyon/workspace/HyPerHLCA2/output_animal1200000_color/Checkpoints/Checkpoint1200000/V1ToError_W.pvp";
    weightInitType = "UniformRandomWeight";
    wMinInit = -1.0;
    wMaxInit = 1.0;
    sparseFraction = .90;
    //
    strength = .707;
    normalizeMethod = "normalizeL2";
    minL2NormTolerated = 0;
    normalizeArborsIndividually = 0;
    normalize_cutoff = 0.0;
    normalizeFromPostPerspective = false;
    symmetrizeWeights = false;
    //
    preActivityIsNotRate = false;  // should help make response more indepenent of time step size dt
    keepKernelsSynchronized = true;
    combine_dW_with_W_flag = false;
    //
    writeStep = 10000;
    writeCompressedWeights = false;
    writeCompressedCheckpoints = false;
    plasticityFlag = true;
    weightUpdatePeriod = 200.0;
    initialWeightUpdateTime = 199.0;
    initialWriteTime = 0.0;
    dWMax = 5.0; //1.0;
    selfFlag = false;
    shmget_flag = false;
    //
    delay = 0;
    //
    pvpatchAccumulateType = "convolve";
    shrinkPatches = false;
    
    updateGSynFromPostPerspective = 0;
};


TransposeConn "ErrorONToV1" = {
    preLayerName = "ErrorON";
    postLayerName = "V1";
    channelCode = 0;
    originalConnName = "V1ToErrorON";
    selfFlag = false;
    preActivityIsNotRate = false;  // should help make response more indepenent of time step size dt
    writeStep = -1;
    writeCompressedCheckpoints = false;
    shmget_flag = false;
    delay = 0;
    pvpatchAccumulateType = "convolve";
    updateGSynFromPostPerspective = 0;
};


TransposeConn "ErrorOFFToV1" = {
    preLayerName = "ErrorOFF";
    postLayerName = "V1";
    channelCode = 0;
    originalConnName = "V1ToErrorOFF";
    selfFlag = false;
    preActivityIsNotRate = false;  // should help make response more indepenent of time step size dt
    writeStep = -1;
    writeCompressedCheckpoints = false;
    shmget_flag = false;
    delay = 0;
    pvpatchAccumulateType = "convolve";
    updateGSynFromPostPerspective = 0;
};


CloneKernelConn "V1ToReconON" = {
    preLayerName = "V1";
    postLayerName = "ReconON";
    channelCode = 0;
    writeStep = -1;
    originalConnName = "V1ToErrorON";
    selfFlag = false;
   pvpatchAccumulateType = "convolve";
    delay = 0;
    preActivityIsNotRate = false;
    updateGSynFromPostPerspective = 0;
    writeCompressedCheckpoints = 0;
};


CloneKernelConn "V1ToReconOFF" = {
    preLayerName = "V1";
    postLayerName = "ReconOFF";
    channelCode = 0;
    writeStep = -1;
    originalConnName = "V1ToErrorOFF";
    selfFlag = false;
    pvpatchAccumulateType = "convolve";
    delay = 0;
    preActivityIsNotRate = false;
    updateGSynFromPostPerspective = 0;
    writeCompressedCheckpoints = 0;
};



// Probes


StatsProbe "ErrorONStatsFile" = {
    targetLayer = "ErrorON";
    probeOutputFile = "Error_StatsON.txt";
};

StatsProbe "ErrorOFFStatsFile" = {
    targetLayer = "ErrorOFF";
    probeOutputFile = "Error_StatsOFF.txt";
};

StatsProbe "V1StatsFile" = {
    targetLayer = "V1";
    probeOutputFile = "V1_Stats.txt";
};

StatsProbe "ReconONStatsFile" = {
    targetLayer = "ReconON";
    probeOutputFile = "Recon_StatsON.txt";
};

StatsProbe "ReconOFFStatsFile" = {
    targetLayer = "ReconOFF";
    probeOutputFile = "Recon_StatsOFF.txt";
};
