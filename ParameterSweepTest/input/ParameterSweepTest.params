//
// ParameterSweepTest.params
//
// created by peteschultz: Aug 10, 2012
//

//  A params file for testing parameter sweeps
//

debugParsing = false;

HyPerCol "column" = {
   nx = 16;   
   ny = 16;
   dt = 1.0;
   randomSeed = 1946576187;  // if not set here,  clock time is used to generate seed
   numSteps = 10;
   progressStep = 10;
   //outputPath = "output/";
   filenamesContainLayerNames = false;
   checkpointRead = false;
   checkpointWrite = false;
   suppressLastOutput = false;
};

//
// layers
//

Image "input" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    imagePath = "input/sampleimage.png";
    nf = 1;
    marginWidth = 3;
    writeStep = -1;
    spikingFlag = false;
    writeNonspikingActivity = true;
    mirrorBCflag = false;
    writeImages = false;
    offsetX = 0;
    offsetY = 0;
};

ANNLayer "output" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 1;
    marginWidth = 0;
    writeStep = 1.0;
    mirrorBCflag = true;
    spikingFlag = 0;
    writeNonspikingActivity = 1;

    InitVType = "ZeroV";

    VThresh = -infinity;
    VMax = infinity;
    VMin = -infinity;
};

ANNLayer "output1x1" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 1;
    marginWidth = 0;
    writeStep = 1.0;
    mirrorBCflag = true;
    spikingFlag = 0;
    writeNonspikingActivity = 1;

    InitVType = "ZeroV";

    VThresh = -infinity;
    VMax = infinity;
    VMin = -infinity;
};

ANNLayer "output3x3" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 1;
    marginWidth = 1;
    writeStep = 1.0;
    mirrorBCflag = true;
    spikingFlag = 0;
    writeNonspikingActivity = 1;

    InitVType = "ZeroV";

    VThresh = -infinity;
    VMax = infinity;
    VMin = -infinity;
};

ANNLayer "output5x5" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 1;
    marginWidth = 2;
    writeStep = 1.0;
    mirrorBCflag = true;
    spikingFlag = 0;
    writeNonspikingActivity = 1;

    InitVType = "ZeroV";

    VThresh = -infinity;
    VMax = infinity;
    VMin = -infinity;
};

ANNLayer "output7x7" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 1;
    marginWidth = 3;
    writeStep = 1.0;
    mirrorBCflag = true;
    spikingFlag = 0;
    writeNonspikingActivity = 1;

    InitVType = "ZeroV";

    VThresh = -infinity;
    VMax = infinity;
    VMin = -infinity;
};

ANNLayer "comparison1x1" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 1;
    marginWidth = 0;
    writeStep = 1.0;
    mirrorBCflag = true;
    spikingFlag = 0;
    writeNonspikingActivity = 1;

    InitVType = "ZeroV";

    VThresh = -infinity;
    VMax = infinity;
    VMin = -infinity;
};

ANNLayer "comparison3x3" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 1;
    marginWidth = 0;
    writeStep = 1.0;
    mirrorBCflag = true;
    spikingFlag = 0;
    writeNonspikingActivity = 1;

    InitVType = "ZeroV";

    VThresh = -infinity;
    VMax = infinity;
    VMin = -infinity;
};

ANNLayer "comparison5x5" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 1;
    marginWidth = 0;
    writeStep = 1.0;
    mirrorBCflag = true;
    spikingFlag = 0;
    writeNonspikingActivity = 1;

    InitVType = "ZeroV";

    VThresh = -infinity;
    VMax = infinity;
    VMin = -infinity;
};

ANNLayer "comparison7x7" = {
    restart = 0;
    nxScale = 1;
    nyScale = 1;
    nf = 1;
    marginWidth = 0;
    writeStep = 1.0;
    mirrorBCflag = true;
    spikingFlag = 0;
    writeNonspikingActivity = 1;

    InitVType = "ZeroV";

    VThresh = -infinity;
    VMax = infinity;
    VMin = -infinity;
};

KernelConn "input to output" = {
    preLayerName = "input";
    postLayerName = "output";
    channelCode = 0;
    // nxp = 7;
    // nyp = 7;
    nfp = 1;
    numAxonalArbors = 1;
    writeStep = -1;
    initFromLastFlag = 0;
    
    weightInitType = "UniformWeight";
    weightInit = 1.0;
      
    normalize = false;
    symmetrizeWeights = 0;

    writeCompressedWeights = 0.0;
    plasticityFlag = false;
    selfFlag = false;

    delay = 0;

    stochasticReleaseFlag = false;
    shrinkPatches = false;
};

KernelConn "input to output1x1" = {
    preLayerName = "input";
    postLayerName = "output1x1";
    channelCode = 0;
    nxp = 1;
    nyp = 1;
    nfp = 1;
    numAxonalArbors = 1;
    writeStep = -1;
    initFromLastFlag = 0;
    
    weightInitType = "UniformWeight";
    weightInit = 1.0;
      
    normalize = false;
    symmetrizeWeights = 0;

    writeCompressedWeights = 0.0;
    plasticityFlag = false;
    selfFlag = false;

    delay = 0;

    stochasticReleaseFlag = false;
    shrinkPatches = false;
};

KernelConn "input to output3x3" = {
    preLayerName = "input";
    postLayerName = "output3x3";
    channelCode = 0;
    nxp = 3;
    nyp = 3;
    nfp = 1;
    numAxonalArbors = 1;
    writeStep = -1;
    initFromLastFlag = 0;
    
    weightInitType = "UniformWeight";
    weightInit = 1.0;
      
    normalize = false;
    symmetrizeWeights = 0;

    writeCompressedWeights = 0.0;
    plasticityFlag = false;
    selfFlag = false;

    delay = 0;

    stochasticReleaseFlag = false;
    shrinkPatches = false;
};

KernelConn "input to output5x5" = {
    preLayerName = "input";
    postLayerName = "output5x5";
    channelCode = 0;
    nxp = 5;
    nyp = 5;
    nfp = 1;
    numAxonalArbors = 1;
    writeStep = -1;
    initFromLastFlag = 0;
    
    weightInitType = "UniformWeight";
    weightInit = 1.0;
      
    normalize = false;
    symmetrizeWeights = 0;

    writeCompressedWeights = 0.0;
    plasticityFlag = false;
    selfFlag = false;

    delay = 0;

    stochasticReleaseFlag = false;
    shrinkPatches = false;
};

KernelConn "input to output7x7" = {
    preLayerName = "input";
    postLayerName = "output7x7";
    channelCode = 0;
    nxp = 7;
    nyp = 7;
    nfp = 1;
    numAxonalArbors = 1;
    writeStep = -1;
    initFromLastFlag = 0;
    
    weightInitType = "UniformWeight";
    weightInit = 1.0;
      
    normalize = false;
    symmetrizeWeights = 0;

    writeCompressedWeights = 0.0;
    plasticityFlag = false;
    selfFlag = false;

    delay = 0;

    stochasticReleaseFlag = false;
    shrinkPatches = false;
};

IdentConn "output to comparison1x1" = {
    channelCode = 0;
    delay = 0;
    writeStep = -1;
};

IdentConn "output1x1 to comparison1x1" = {
    channelCode = 1;
    delay = 0;
    writeStep = -1;
};

IdentConn "output to comparison3x3" = {
    channelCode = 0;
    delay = 0;
    writeStep = -1;
};

IdentConn "output3x3 to comparison3x3" = {
    channelCode = 1;
    delay = 0;
    writeStep = -1;
};

IdentConn "output to comparison5x5" = {
    channelCode = 0;
    delay = 0;
    writeStep = -1;
};

IdentConn "output5x5 to comparison5x5" = {
    channelCode = 1;
    delay = 0;
    writeStep = -1;
};

IdentConn "output to comparison7x7" = {
    channelCode = 0;
    delay = 0;
    writeStep = -1;
};

IdentConn "output7x7 to comparison7x7" = {
    channelCode = 1;
    delay = 0;
    writeStep = -1;
};

ParameterSweepTestProbe "comparison1x1 probe" = {
    targetLayer = "comparison1x1";
};

ParameterSweepTestProbe "comparison3x3 probe" = {
    targetLayer = "comparison3x3";
};

ParameterSweepTestProbe "comparison5x5 probe" = {
    targetLayer = "comparison5x5";
};

ParameterSweepTestProbe "comparison7x7 probe" = {
    targetLayer = "comparison7x7";
};

ParameterSweep "input to output":nxp = {
    1; 3; 5; 7;
};

ParameterSweep "input to output":nyp = {
    1; 3; 5; 7;
};

ParameterSweep "comparison1x1":expectedSum = {
    0; 8; 24; 48;
};

ParameterSweep "comparison1x1":expectedMin = {
    0; 0; 0; 0;
};

ParameterSweep "comparison1x1":expectedMax = {
    0; 1; 1; 1;
};

ParameterSweep "comparison3x3":expectedSum = {
    -8; 0; 16; 40;
};

ParameterSweep "comparison3x3":expectedMin = {
    -1; 0; 0; 0;
};

ParameterSweep "comparison3x3":expectedMax = {
    0; 0; 1; 1;
};

ParameterSweep "comparison5x5":expectedSum = {
    -24; -16; 0; 24;
};

ParameterSweep "comparison5x5":expectedMin = {
    -1; -1; 0; 0;
};

ParameterSweep "comparison5x5":expectedMax = {
    0; 0; 0; 1;
};

ParameterSweep "comparison7x7":expectedSum = {
    -48; -40; -24; 0;
};

ParameterSweep "comparison7x7":expectedMin = {
    -1; -1; -1; 0;
};

ParameterSweep "comparison7x7":expectedMax = {
    0; 0; 0; 0;
};

ParameterSweep "column":outputPath = {
    "output1/";
    "output3/";
    "output5/";
    "output7/";
};
