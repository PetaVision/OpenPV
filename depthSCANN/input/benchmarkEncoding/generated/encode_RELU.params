debugParsing = true;
HyPerCol "column" = {
    filenamesContainLayerNames = 2;
    randomSeed = 1234567890;
    dtScaleMin = 0.25;
    nx = 1200;
    ny = 360;
    stopTime = 195;
    dtChangeMax = 0.05;
    outputPath = "/home/ec2-user/output/benchmarkEncoding/encode_RELU/";
    dtScaleMax = 5;
    startTime = 0;
    progressStep = 5000;
    checkpointWriteStepInterval = 5000;
    checkpointWrite = true;
    outputNamesOfLayersAndConns = "LayerAndConnNames.txt";
    checkpointRead = false;
    dtAdaptFlag = true;
    filenamesContainConnectionNames = 2;
    deleteOlderCheckpoints = true;
    checkpointWriteDir = "/home/ec2-user/output/benchmarkEncoding/encode_RELU//Checkpoints";
    dtChangeMin = 0;
    writeProgressToErr = true;
    dt = 1;
};

Movie "LeftImage" = {
    offsetAnchor = "br";
    start_frame_index = 1;
    normalizeLuminanceFlag = true;
    writeStep = 1;
    inverseFlag = false;
    readPvpFile = false;
    writeSparseActivity = false;
    echoFramePathnameFlag = false;
    randomMovie = 0;
    autoResizeFlag = 0;
    offsetY = 0;
    offsetX = 0;
    writeImages = false;
    skip_frame_index = 1;
    restart = 0;
    phase = 0;
    nxScale = 1;
    nyScale = 1;
    useImageBCflag = false;
    imageListPath = "/home/ec2-user/dataset/list/benchmark_left.txt";
    initialWriteTime = 1;
    mirrorBCflag = true;
    displayPeriod = 1;
    jitterFlag = 0;
    writeFrameToTimestamp = true;
    nf = 1;
};

IdentConn "LeftRescaleToLeftError" = {
    writeStep = -1;
    postLayerName = "LeftError";
    preLayerName = "LeftRescale";
    delay = 0;
    channelCode = 0;
};

ANNLayer "LeftGanglion" = {
    InitVType = "ZeroV";
    sparseLayer = false;
    writeStep = -1;
    AShift = 0;
    triggerLayerName = "LeftImage";
    VWidth = 0;
    nf = 1;
    phase = 2;
    nxScale = 0.5;
    nyScale = 0.5;
    AMax = 3.40282e+38;
    AMin = -3.40282e+38;
    VThresh = -3.40282e+38;
    updateGpu = false;
    triggerFlag = true;
    triggerOffset = 0;
    initialWriteTime = 1;
    mirrorBCflag = true;
};

ANNErrorLayer "RightError" = {
    InitVType = "ZeroV";
    writeStep = 1;
    writeSparseActivity = 0;
    valueBC = 0;
    initialWriteTime = 1;
    nf = 1;
    phase = 4;
    nxScale = 0.5;
    nyScale = 0.5;
    errScale = 1;
    mirrorBCflag = 0;
    VThresh = 0;
    restart = 0;
    VMin = -infinity;
    VWidth = 0;
    VShift = 0;
    VMax = infinity;
};

ANNErrorLayer "LeftError" = {
    InitVType = "ZeroV";
    writeStep = 1;
    writeSparseActivity = 0;
    valueBC = 0;
    VWidth = 0;
    restart = 0;
    phase = 4;
    nxScale = 0.5;
    nyScale = 0.5;
    errScale = 1;
    VShift = 0;
    VMin = -infinity;
    nf = 1;
    VThresh = 0;
    mirrorBCflag = 0;
    initialWriteTime = 1;
    VMax = infinity;
};

RescaleLayer "RightRescale" = {
    triggerLayerName = "LeftImage";
    nf = 1;
    rescaleMethod = "l2";
    restart = false;
    originalLayerName = "RightGanglion";
    nxScale = 0.5;
    nyScale = 0.5;
    phase = 3;
    writeStep = 1;
    patchSize = 4356;
    valueBC = 0;
    writeSparseActivity = false;
    mirrorBCflag = true;
    initialWriteTime = 1;
    triggerFlag = true;
};

RescaleLayer "LeftRescale" = {
    triggerLayerName = "LeftImage";
    triggerFlag = true;
    rescaleMethod = "l2";
    restart = false;
    originalLayerName = "LeftGanglion";
    nxScale = 0.5;
    nyScale = 0.5;
    phase = 3;
    writeStep = 1;
    valueBC = 0;
    patchSize = 4356;
    writeSparseActivity = false;
    mirrorBCflag = true;
    initialWriteTime = 1;
    nf = 1;
};

ANNLayer "RightBipolar" = {
    InitVType = "ZeroV";
    sparseLayer = false;
    AMax = 3.40282e+38;
    AShift = 0;
    triggerLayerName = "RightImage";
    AMin = -3.40282e+38;
    phase = 1;
    nxScale = 0.5;
    nyScale = 0.5;
    mirrorBCflag = true;
    triggerFlag = true;
    triggerOffset = 0;
    nf = 1;
    writeStep = -1;
    VWidth = 0;
    updateGpu = false;
    VThresh = -3.40282e+38;
};

ANNLayer "RightGanglion" = {
    InitVType = "ZeroV";
    sparseLayer = false;
    AMax = 3.40282e+38;
    AShift = 0;
    triggerLayerName = "RightImage";
    mirrorBCflag = true;
    AMin = -3.40282e+38;
    phase = 2;
    nxScale = 0.5;
    nyScale = 0.5;
    updateGpu = false;
    triggerOffset = 0;
    triggerFlag = true;
    nf = 1;
    writeStep = -1;
    VWidth = 0;
    initialWriteTime = 1;
    VThresh = -3.40282e+38;
};

HyPerConn "LeftImageToLeftBipolarCenter" = {
    rMinY = 0;
    updateGSynFromPostPerspective = false;
    normalizeFromPostPerspective = true;
    numAxonalArbors = 1;
    normalizeOnInitialize = true;
    minSumTolerated = 0;
    aspect = 1;
    normalizeArborsIndividually = false;
    convertRateToSpikeCount = false;
    receiveGpu = false;
    rMax = 3;
    channelCode = 0;
    postLayerName = "LeftBipolar";
    rMin = 0;
    plasticityFlag = false;
    nonnegativeConstraintFlag = false;
    writeStep = -1;
    writeCompressedCheckpoints = false;
    nfp = 1;
    sigma = 0.5;
    normalize_cutoff = 0;
    pvpatchAccumulateType = "convolve";
    selfFlag = false;
    strength = 1;
    rMinX = 0;
    weightInitType = "Gauss2DWeight";
    normalizeOnWeightUpdate = true;
    nxp = 3;
    nyp = 3;
    normalizeMethod = "normalizeSum";
    shrinkPatches = false;
    delay = 0;
    preLayerName = "LeftImage";
};

KernelConn "RightBipolarToRightGanglionSurround" = {
    rMinY = 0;
    updateGSynFromPostPerspective = false;
    normalizeFromPostPerspective = true;
    numAxonalArbors = 1;
    normalizeOnInitialize = true;
    minSumTolerated = 0;
    pvpatchAccumulateType = "convolve";
    normalizeArborsIndividually = false;
    convertRateToSpikeCount = false;
    receiveGpu = false;
    rMax = 7.5;
    channelCode = 1;
    postLayerName = "RightGanglion";
    rMin = 0.5;
    plasticityFlag = false;
    nonnegativeConstraintFlag = false;
    weightInitType = "Gauss2DWeight";
    writeCompressedCheckpoints = false;
    nfp = 1;
    preLayerName = "RightBipolar";
    aspect = 1;
    sigma = 5.5;
    normalizeMethod = "normalizeSum";
    strength = 1;
    rMinX = 0;
    writeStep = -1;
    normalizeOnWeightUpdate = true;
    nxp = 11;
    nyp = 11;
    selfFlag = false;
    shrinkPatches = false;
    delay = 0;
    normalize_cutoff = 0;
};

ANNLayer "V1_RELU" = {
    initialWriteTime = 1;
    mirrorBCflag = 0;
    restart = 0;
    phase = 5;
    InitVType = "ZeroV";
    nyScale = 0.25;
    writeSparseValues = 1;
    writeStep = 1;
    VThresh = 0;
    nf = 512;
    writeSparseActivity = 1;
    VMin = 0;
    VWidth = 0;
    VShift = 0;
    nxScale = 0.25;
};

HyPerConn "V1ToLeftError" = {
    updateGSynFromPostPerspective = false;
    normalizeFromPostPerspective = false;
    writeCompressedWeights = false;
    pvpatchAccumulateType = "convolve";
    normalizeArborsIndividually = 0;
    sharedWeights = true;
    useWindowPost = false;
    preActivityIsNotRate = false;
    nxp = 66;
    initialWriteTime = 0;
    channelCode = -1;
    postLayerName = "LeftError";
    plasticityFlag = false;
    preLayerName = "V1_RELU";
    writeStep = -1;
    minL2NormTolerated = 0;
    initFromLastFlag = 0;
    writeCompressedCheckpoints = false;
    normalizeMethod = "normalizeL2";
    shmget_flag = false;
    keepKernelsSynchronized = true;
    initWeightsFile = "/home/ec2-user/saved_output/dictTrain/saved_binoc_512_white//V1ToLeftError_W.pvp";
    strength = 1;
    weightInitType = "FileWeight";
    numAxonalArbors = 1;
    symmetrizeWeights = false;
    combine_dW_with_W_flag = false;
    nyp = 66;
    selfFlag = false;
    shrinkPatches = false;
    delay = 0;
    normalize_cutoff = 0;
};

TransposeConn "RightErrorToV1" = {
    writeCompressedCheckpoints = false;
    postLayerName = "V1_RELU";
    updateGSynFromPostPerspective = true;
    preActivityIsNotRate = false;
    preLayerName = "RightError";
    pvpatchAccumulateType = "convolve";
    writeStep = -1;
    delay = 0;
    receiveGpu = true;
    originalConnName = "V1ToRightError";
    selfFlag = false;
    shmget_flag = false;
    channelCode = 1;
};

TransposeConn "LeftErrorToV1" = {
    writeCompressedCheckpoints = false;
    postLayerName = "V1_RELU";
    updateGSynFromPostPerspective = true;
    preActivityIsNotRate = false;
    preLayerName = "LeftError";
    channelCode = 1;
    writeStep = -1;
    shmget_flag = false;
    receiveGpu = true;
    originalConnName = "V1ToLeftError";
    selfFlag = false;
    delay = 0;
    pvpatchAccumulateType = "convolve";
};

HyPerConn "RightImageToRightBipolarCenter" = {
    rMinY = 0;
    updateGSynFromPostPerspective = false;
    normalizeFromPostPerspective = true;
    numAxonalArbors = 1;
    normalizeOnInitialize = true;
    minSumTolerated = 0;
    pvpatchAccumulateType = "convolve";
    normalizeArborsIndividually = false;
    convertRateToSpikeCount = false;
    receiveGpu = false;
    rMax = 3;
    channelCode = 0;
    postLayerName = "RightBipolar";
    rMin = 0;
    plasticityFlag = false;
    nonnegativeConstraintFlag = false;
    weightInitType = "Gauss2DWeight";
    writeCompressedCheckpoints = false;
    nfp = 1;
    preLayerName = "RightImage";
    aspect = 1;
    sigma = 0.5;
    normalizeMethod = "normalizeSum";
    strength = 1;
    rMinX = 0;
    writeStep = -1;
    normalizeOnWeightUpdate = true;
    nxp = 3;
    nyp = 3;
    selfFlag = false;
    shrinkPatches = false;
    delay = 0;
    normalize_cutoff = 0;
};

KernelConn "LeftBipolarToLeftGanglionSurround" = {
    rMinY = 0;
    updateGSynFromPostPerspective = false;
    normalizeFromPostPerspective = true;
    numAxonalArbors = 1;
    normalizeOnInitialize = true;
    minSumTolerated = 0;
    aspect = 1;
    normalizeArborsIndividually = false;
    convertRateToSpikeCount = false;
    receiveGpu = false;
    rMax = 7.5;
    channelCode = 1;
    postLayerName = "LeftGanglion";
    rMin = 0.5;
    plasticityFlag = false;
    nonnegativeConstraintFlag = false;
    writeStep = -1;
    writeCompressedCheckpoints = false;
    nfp = 1;
    sigma = 5.5;
    normalize_cutoff = 0;
    pvpatchAccumulateType = "convolve";
    selfFlag = false;
    strength = 1;
    rMinX = 0;
    weightInitType = "Gauss2DWeight";
    normalizeOnWeightUpdate = true;
    nxp = 11;
    nyp = 11;
    normalizeMethod = "normalizeSum";
    shrinkPatches = false;
    delay = 0;
    preLayerName = "LeftBipolar";
};

IdentConn "RightRescaleToRightError" = {
    writeStep = -1;
    postLayerName = "RightError";
    delay = 0;
    preLayerName = "RightRescale";
    channelCode = 0;
};

HyPerConn "V1ToRightError" = {
    updateGSynFromPostPerspective = false;
    normalizeFromPostPerspective = false;
    numAxonalArbors = 1;
    pvpatchAccumulateType = "convolve";
    normalizeArborsIndividually = 0;
    sharedWeights = true;
    keepKernelsSynchronized = true;
    preActivityIsNotRate = false;
    nxp = 66;
    initialWriteTime = 0;
    channelCode = -1;
    postLayerName = "RightError";
    plasticityFlag = false;
    normalizeGroupName = "V1ToLeftError";
    preLayerName = "V1_RELU";
    weightInitType = "FileWeight";
    minL2NormTolerated = 0;
    initFromLastFlag = 0;
    writeCompressedCheckpoints = false;
    normalize_cutoff = 0;
    delay = 0;
    useWindowPost = false;
    selfFlag = false;
    strength = 1;
    writeStep = -1;
    writeCompressedWeights = false;
    combine_dW_with_W_flag = false;
    symmetrizeWeights = false;
    nyp = 66;
    normalizeMethod = "normalizeGroup";
    shrinkPatches = false;
    shmget_flag = false;
    initWeightsFile = "/home/ec2-user/saved_output/dictTrain/saved_binoc_512_white//V1ToRightError_W.pvp";
};

Movie "RightImage" = {
    randomMovie = 0;
    start_frame_index = 1;
    normalizeLuminanceFlag = true;
    writeStep = 1;
    nf = 1;
    readPvpFile = false;
    writeSparseActivity = false;
    echoFramePathnameFlag = false;
    writeFrameToTimestamp = true;
    nxScale = 1;
    displayPeriod = 1;
    mirrorBCflag = true;
    skip_frame_index = 1;
    restart = 0;
    phase = 0;
    writeImages = false;
    autoResizeFlag = 0;
    initialWriteTime = 1;
    inverseFlag = false;
    imageListPath = "/home/ec2-user/dataset/list/benchmark_right.txt";
    offsetAnchor = "br";
    nyScale = 1;
    jitterFlag = 0;
    offsetY = 0;
    useImageBCflag = false;
    offsetX = 0;
};

KernelConn "RightBipolarToRightGanglionCenter" = {
    rMinY = 0;
    updateGSynFromPostPerspective = false;
    normalizeFromPostPerspective = true;
    numAxonalArbors = 1;
    normalizeOnInitialize = true;
    minSumTolerated = 0;
    pvpatchAccumulateType = "convolve";
    normalizeArborsIndividually = false;
    convertRateToSpikeCount = false;
    receiveGpu = false;
    rMax = 3;
    channelCode = 0;
    postLayerName = "RightGanglion";
    rMin = 0;
    plasticityFlag = false;
    nonnegativeConstraintFlag = false;
    weightInitType = "Gauss2DWeight";
    writeCompressedCheckpoints = false;
    nfp = 1;
    preLayerName = "RightBipolar";
    aspect = 1;
    sigma = 1;
    normalizeMethod = "normalizeSum";
    strength = 1;
    rMinX = 0;
    writeStep = -1;
    normalizeOnWeightUpdate = true;
    nxp = 1;
    nyp = 1;
    selfFlag = false;
    shrinkPatches = false;
    delay = 0;
    normalize_cutoff = 0;
};

ANNLayer "LeftBipolar" = {
    InitVType = "ZeroV";
    sparseLayer = false;
    writeStep = -1;
    AShift = 0;
    triggerLayerName = "LeftImage";
    nf = 1;
    phase = 1;
    nxScale = 0.5;
    nyScale = 0.5;
    VWidth = 0;
    AMax = 3.40282e+38;
    AMin = -3.40282e+38;
    VThresh = -3.40282e+38;
    updateGpu = false;
    triggerOffset = 0;
    triggerFlag = true;
    mirrorBCflag = true;
};

KernelConn "LeftBipolarToLeftGanglionCenter" = {
    rMinY = 0;
    updateGSynFromPostPerspective = false;
    normalizeFromPostPerspective = true;
    numAxonalArbors = 1;
    normalizeOnInitialize = true;
    minSumTolerated = 0;
    aspect = 1;
    normalizeArborsIndividually = false;
    convertRateToSpikeCount = false;
    receiveGpu = false;
    rMax = 3;
    channelCode = 0;
    postLayerName = "LeftGanglion";
    rMin = 0;
    plasticityFlag = false;
    nonnegativeConstraintFlag = false;
    writeStep = -1;
    writeCompressedCheckpoints = false;
    nfp = 1;
    sigma = 1;
    normalize_cutoff = 0;
    pvpatchAccumulateType = "convolve";
    selfFlag = false;
    strength = 1;
    rMinX = 0;
    weightInitType = "Gauss2DWeight";
    normalizeOnWeightUpdate = true;
    nxp = 1;
    nyp = 1;
    normalizeMethod = "normalizeSum";
    shrinkPatches = false;
    delay = 0;
    preLayerName = "LeftBipolar";
};

